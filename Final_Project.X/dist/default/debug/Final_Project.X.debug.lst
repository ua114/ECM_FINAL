

Microchip Technology PIC18 LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Mon Nov 26 11:36:57 2018

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1  0000                     
     2                           ; Version 2.00
     3                           ; Generated 27/05/2018 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC18F4331 Definitions
    37                           ; 
    38  0000                     fsr0 equ 0FE9h
    39  0000                     fsr0h equ 0FEAh
    40  0000                     fsr0l equ 0FE9h
    41  0000                     fsr1 equ 0FE1h
    42  0000                     fsr1h equ 0FE2h
    43  0000                     fsr1l equ 0FE1h
    44  0000                     fsr2 equ 0FD9h
    45  0000                     fsr2h equ 0FDAh
    46  0000                     fsr2l equ 0FD9h
    47  0000                     indf0 equ 0FEFh
    48  0000                     indf1 equ 0FE7h
    49  0000                     indf2 equ 0FDFh
    50  0000                     intcon equ 0FF2h
    51  0000                     nvmcon equ 00h
    52  0000                     pcl equ 0FF9h
    53  0000                     pclath equ 0FFAh
    54  0000                     pclatu equ 0FFBh
    55  0000                     plusw0 equ 0FEBh
    56  0000                     plusw1 equ 0FE3h
    57  0000                     plusw2 equ 0FDBh
    58  0000                     postdec0 equ 0FEDh
    59  0000                     postdec1 equ 0FE5h
    60  0000                     postdec2 equ 0FDDh
    61  0000                     postinc0 equ 0FEEh
    62  0000                     postinc1 equ 0FE6h
    63  0000                     postinc2 equ 0FDEh
    64  0000                     preinc0 equ 0FECh
    65  0000                     preinc1 equ 0FE4h
    66  0000                     preinc2 equ 0FDCh
    67  0000                     prod equ 0FF3h
    68  0000                     prodh equ 0FF4h
    69  0000                     prodl equ 0FF3h
    70  0000                     status equ 0FD8h
    71  0000                     tablat equ 0FF5h
    72  0000                     tblptr equ 0FF6h
    73  0000                     tblptrh equ 0FF7h
    74  0000                     tblptrl equ 0FF6h
    75  0000                     tblptru equ 0FF8h
    76  0000                     tosl equ 0FFDh
    77  0000                     wreg equ 0FE8h
    78  0000                     
     2                           opt pagewidth 120
     3  0000                     byte0	macro	val
     4                           	(getbyte(val,0))
     5                           endm
     6  0000                     byte1	macro	val
     7                           	(getbyte(val,1))
     8                           endm
     9  0000                     byte2	macro	val
    10                           	(getbyte(val,2))
    11                           endm
    12  0000                     byte3	macro	val
    13                           	(getbyte(val,3))
    14                           endm
    15  0000                     byte4	macro	val
    16                           	(getbyte(val,4))
    17                           endm
    18  0000                     byte5	macro	val
    19                           	(getbyte(val,5))
    20                           endm
    21  0000                     byte6	macro	val
    22                           	(getbyte(val,6))
    23                           endm
    24  0000                     byte7	macro	val
    25                           	(getbyte(val,7))
    26                           endm
    27  0000                     getword	macro	val,pos
    28                           	(((val) >> (8 * pos)) and 0xffff)
    29                           endm
    30  0000                     word0	macro	val
    31                           	(getword(val,0))
    32                           endm
    33  0000                     word1	macro	val
    34                           	(getword(val,2))
    35                           endm
    36  0000                     word2	macro	val
    37                           	(getword(val,4))
    38                           endm
    39  0000                     word3	macro	val
    40                           	(getword(val,6))
    41                           endm
    42  0000                     gettword	macro	val,pos
    43                           	(((val) >> (8 * pos)) and 0xffffff)
    44                           endm
    45  0000                     tword0	macro	val
    46                           	(gettword(val,0))
    47                           endm
    48  0000                     tword1	macro	val
    49                           	(gettword(val,3))
    50                           endm
    51  0000                     tword2	macro	val
    52                           	(gettword(val,6))
    53                           endm
    54  0000                     getdword	macro	val,pos
    55                           	(((val) >> (8 * pos)) and 0xffffffff)
    56                           endm
    57  0000                     dword0	macro	val
    58                           	(getdword(val,0))
    59                           endm
    60  0000                     dword1	macro	val
    61                           	(getdword(val,4))
    62                           endm
    63  0000                     clrc   macro
    64                           	bcf	status,0
    65                           endm
    66  0000                     setc   macro
    67                           	bsf	status,0
    68                           endm
    69  0000                     clrz   macro
    70                           	bcf	status,2
    71                           endm
    72  0000                     setz   macro
    73                           	bsf	status,2
    74                           endm
    75  0000                     skipnz macro
    76                           	btfsc	status,2
    77                           endm
    78  0000                     skipz  macro
    79                           	btfss	status,2
    80                           endm
    81  0000                     skipnc macro
    82                           	btfsc	status,0
    83                           endm
    84  0000                     skipc  macro
    85                           	btfss	status,0
    86                           endm
    87  0000                     pushw macro
    88                           	movwf postinc1
    89                           endm
    90  0000                     pushf macro arg1
    91                           	movff arg1, postinc1
    92                           endm
    93  0000                     popw macro
    94                           	movf postdec1,f
    95                           	movf indf1,w
    96                           endm
    97  0000                     popf macro arg1
    98                           	movf postdec1,f
    99                           	movff indf1,arg1
   100                           endm
   101  0000                     popfc macro arg1
   102                           	movff plusw1,arg1
   103                           	decfsz fsr1,f
   104                           endm
   105  0000                     	global	__ramtop
   106                           	global	__accesstop
   107                           # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   108                           DFLTCON equ 0F60h ;# 
   109  0000                     # 118 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   110                           CAP3CON equ 0F61h ;# 
   111  0000                     # 177 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   112                           CAP2CON equ 0F62h ;# 
   113  0000                     # 236 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   114                           CAP1CON equ 0F63h ;# 
   115  0000                     # 295 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   116                           CAP3BUFL equ 0F64h ;# 
   117  0000                     # 300 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   118                           MAXCNTL equ 0F64h ;# 
   119  0000                     # 307 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   120                           CAP3BUFH equ 0F65h ;# 
   121  0000                     # 312 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   122                           MAXCNTH equ 0F65h ;# 
   123  0000                     # 319 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   124                           CAP2BUFL equ 0F66h ;# 
   125  0000                     # 324 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   126                           POSCNTL equ 0F66h ;# 
   127  0000                     # 331 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   128                           CAP2BUFH equ 0F67h ;# 
   129  0000                     # 336 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   130                           POSCNTH equ 0F67h ;# 
   131  0000                     # 343 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   132                           CAP1BUFL equ 0F68h ;# 
   133  0000                     # 348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   134                           VELRL equ 0F68h ;# 
   135  0000                     # 355 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   136                           CAP1BUFH equ 0F69h ;# 
   137  0000                     # 360 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   138                           VELRH equ 0F69h ;# 
   139  0000                     # 367 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   140                           OVDCONS equ 0F6Ah ;# 
   141  0000                     # 437 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   142                           OVDCOND equ 0F6Bh ;# 
   143  0000                     # 507 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   144                           FLTCONFIG equ 0F6Ch ;# 
   145  0000                     # 569 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   146                           DTCON equ 0F6Dh ;# 
   147  0000                     # 695 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   148                           PWMCON1 equ 0F6Eh ;# 
   149  0000                     # 761 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   150                           PWMCON0 equ 0F6Fh ;# 
   151  0000                     # 831 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   152                           SEVTCMPH equ 0F70h ;# 
   153  0000                     # 838 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   154                           SEVTCMPL equ 0F71h ;# 
   155  0000                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   156                           PDC3H equ 0F72h ;# 
   157  0000                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   158                           PDC3L equ 0F73h ;# 
   159  0000                     # 859 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   160                           PDC2H equ 0F74h ;# 
   161  0000                     # 866 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   162                           PDC2L equ 0F75h ;# 
   163  0000                     # 873 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   164                           PDC1H equ 0F76h ;# 
   165  0000                     # 880 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   166                           PDC1L equ 0F77h ;# 
   167  0000                     # 887 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   168                           PDC0H equ 0F78h ;# 
   169  0000                     # 894 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   170                           PDC0L equ 0F79h ;# 
   171  0000                     # 901 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   172                           PTPERH equ 0F7Ah ;# 
   173  0000                     # 908 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   174                           PTPERL equ 0F7Bh ;# 
   175  0000                     # 915 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   176                           PTMRH equ 0F7Ch ;# 
   177  0000                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   178                           PTMRL equ 0F7Dh ;# 
   179  0000                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   180                           PTCON1 equ 0F7Eh ;# 
   181  0000                     # 956 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   182                           PTCON0 equ 0F7Fh ;# 
   183  0000                     # 1038 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   184                           PORTA equ 0F80h ;# 
   185  0000                     # 1199 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   186                           PORTB equ 0F81h ;# 
   187  0000                     # 1270 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   188                           PORTC equ 0F82h ;# 
   189  0000                     # 1536 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   190                           PORTD equ 0F83h ;# 
   191  0000                     # 1607 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   192                           PORTE equ 0F84h ;# 
   193  0000                     # 1733 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   194                           TMR5 equ 0F87h ;# 
   195  0000                     # 1740 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   196                           TMR5L equ 0F87h ;# 
   197  0000                     # 1747 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   198                           TMR5H equ 0F88h ;# 
   199  0000                     # 1754 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   200                           LATA equ 0F89h ;# 
   201  0000                     # 1866 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   202                           LATB equ 0F8Ah ;# 
   203  0000                     # 1978 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   204                           LATC equ 0F8Bh ;# 
   205  0000                     # 2090 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   206                           LATD equ 0F8Ch ;# 
   207  0000                     # 2202 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   208                           LATE equ 0F8Dh ;# 
   209  0000                     # 2254 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   210                           PR5 equ 0F90h ;# 
   211  0000                     # 2261 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   212                           PR5L equ 0F90h ;# 
   213  0000                     # 2268 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   214                           PR5H equ 0F91h ;# 
   215  0000                     # 2275 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   216                           TRISA equ 0F92h ;# 
   217  0000                     # 2280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   218                           DDRA equ 0F92h ;# 
   219  0000                     # 2497 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   220                           TRISB equ 0F93h ;# 
   221  0000                     # 2502 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   222                           DDRB equ 0F93h ;# 
   223  0000                     # 2719 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   224                           TRISC equ 0F94h ;# 
   225  0000                     # 2724 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   226                           DDRC equ 0F94h ;# 
   227  0000                     # 2941 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   228                           TRISD equ 0F95h ;# 
   229  0000                     # 2946 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   230                           DDRD equ 0F95h ;# 
   231  0000                     # 3163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   232                           TRISE equ 0F96h ;# 
   233  0000                     # 3168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   234                           DDRE equ 0F96h ;# 
   235  0000                     # 3265 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   236                           ADCHS equ 0F99h ;# 
   237  0000                     # 3403 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   238                           ADCON3 equ 0F9Ah ;# 
   239  0000                     # 3475 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   240                           OSCTUNE equ 0F9Bh ;# 
   241  0000                     # 3533 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   242                           PIE1 equ 0F9Dh ;# 
   243  0000                     # 3613 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   244                           PIR1 equ 0F9Eh ;# 
   245  0000                     # 3693 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   246                           IPR1 equ 0F9Fh ;# 
   247  0000                     # 3773 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   248                           PIE2 equ 0FA0h ;# 
   249  0000                     # 3814 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   250                           PIR2 equ 0FA1h ;# 
   251  0000                     # 3855 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   252                           IPR2 equ 0FA2h ;# 
   253  0000                     # 3896 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   254                           PIE3 equ 0FA3h ;# 
   255  0000                     # 3988 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   256                           PIR3 equ 0FA4h ;# 
   257  0000                     # 4048 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   258                           IPR3 equ 0FA5h ;# 
   259  0000                     # 4108 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   260                           EECON1 equ 0FA6h ;# 
   261  0000                     # 4174 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   262                           EECON2 equ 0FA7h ;# 
   263  0000                     # 4181 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   264                           EEDATA equ 0FA8h ;# 
   265  0000                     # 4188 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   266                           EEADR equ 0FA9h ;# 
   267  0000                     # 4195 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   268                           BAUDCON equ 0FAAh ;# 
   269  0000                     # 4200 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   270                           BAUDCTL equ 0FAAh ;# 
   271  0000                     # 4375 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   272                           RCSTA equ 0FABh ;# 
   273  0000                     # 4380 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   274                           RCSTA1 equ 0FABh ;# 
   275  0000                     # 4585 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   276                           TXSTA equ 0FACh ;# 
   277  0000                     # 4590 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   278                           TXSTA1 equ 0FACh ;# 
   279  0000                     # 4841 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   280                           TXREG equ 0FADh ;# 
   281  0000                     # 4846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   282                           TXREG1 equ 0FADh ;# 
   283  0000                     # 4853 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   284                           RCREG equ 0FAEh ;# 
   285  0000                     # 4858 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   286                           RCREG1 equ 0FAEh ;# 
   287  0000                     # 4865 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   288                           SPBRG equ 0FAFh ;# 
   289  0000                     # 4870 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   290                           SPBRG1 equ 0FAFh ;# 
   291  0000                     # 4877 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   292                           SPBRGH equ 0FB0h ;# 
   293  0000                     # 4884 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   294                           QEICON equ 0FB6h ;# 
   295  0000                     # 5036 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   296                           T5CON equ 0FB7h ;# 
   297  0000                     # 5154 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   298                           ANSEL0 equ 0FB8h ;# 
   299  0000                     # 5216 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   300                           ANSEL1 equ 0FB9h ;# 
   301  0000                     # 5236 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   302                           CCP2CON equ 0FBAh ;# 
   303  0000                     # 5315 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   304                           CCPR2 equ 0FBBh ;# 
   305  0000                     # 5322 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   306                           CCPR2L equ 0FBBh ;# 
   307  0000                     # 5329 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   308                           CCPR2H equ 0FBCh ;# 
   309  0000                     # 5336 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   310                           CCP1CON equ 0FBDh ;# 
   311  0000                     # 5415 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   312                           CCPR1 equ 0FBEh ;# 
   313  0000                     # 5422 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   314                           CCPR1L equ 0FBEh ;# 
   315  0000                     # 5429 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   316                           CCPR1H equ 0FBFh ;# 
   317  0000                     # 5436 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   318                           ADCON2 equ 0FC0h ;# 
   319  0000                     # 5512 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   320                           ADCON1 equ 0FC1h ;# 
   321  0000                     # 5608 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   322                           ADCON0 equ 0FC2h ;# 
   323  0000                     # 5727 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   324                           ADRES equ 0FC3h ;# 
   325  0000                     # 5734 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   326                           ADRESL equ 0FC3h ;# 
   327  0000                     # 5741 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   328                           ADRESH equ 0FC4h ;# 
   329  0000                     # 5748 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   330                           SSPCON equ 0FC6h ;# 
   331  0000                     # 5753 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   332                           SSPCON1 equ 0FC6h ;# 
   333  0000                     # 5886 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   334                           SSPSTAT equ 0FC7h ;# 
   335  0000                     # 6107 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   336                           SSPADD equ 0FC8h ;# 
   337  0000                     # 6114 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   338                           SSPBUF equ 0FC9h ;# 
   339  0000                     # 6121 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   340                           T2CON equ 0FCAh ;# 
   341  0000                     # 6219 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   342                           PR2 equ 0FCBh ;# 
   343  0000                     # 6224 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   344                           MEMCON equ 0FCBh ;# 
   345  0000                     # 6329 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   346                           TMR2 equ 0FCCh ;# 
   347  0000                     # 6336 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   348                           T1CON equ 0FCDh ;# 
   349  0000                     # 6448 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   350                           TMR1 equ 0FCEh ;# 
   351  0000                     # 6455 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   352                           TMR1L equ 0FCEh ;# 
   353  0000                     # 6462 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   354                           TMR1H equ 0FCFh ;# 
   355  0000                     # 6469 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   356                           RCON equ 0FD0h ;# 
   357  0000                     # 6612 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   358                           WDTCON equ 0FD1h ;# 
   359  0000                     # 6639 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   360                           LVDCON equ 0FD2h ;# 
   361  0000                     # 6704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   362                           OSCCON equ 0FD3h ;# 
   363  0000                     # 6790 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   364                           T0CON equ 0FD5h ;# 
   365  0000                     # 6866 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   366                           TMR0 equ 0FD6h ;# 
   367  0000                     # 6873 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   368                           TMR0L equ 0FD6h ;# 
   369  0000                     # 6880 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   370                           TMR0H equ 0FD7h ;# 
   371  0000                     # 6887 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   372                           STATUS equ 0FD8h ;# 
   373  0000                     # 6958 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   374                           FSR2 equ 0FD9h ;# 
   375  0000                     # 6965 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   376                           FSR2L equ 0FD9h ;# 
   377  0000                     # 6972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   378                           FSR2H equ 0FDAh ;# 
   379  0000                     # 6979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   380                           PLUSW2 equ 0FDBh ;# 
   381  0000                     # 6986 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   382                           PREINC2 equ 0FDCh ;# 
   383  0000                     # 6993 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   384                           POSTDEC2 equ 0FDDh ;# 
   385  0000                     # 7000 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   386                           POSTINC2 equ 0FDEh ;# 
   387  0000                     # 7007 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   388                           INDF2 equ 0FDFh ;# 
   389  0000                     # 7014 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   390                           BSR equ 0FE0h ;# 
   391  0000                     # 7021 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   392                           FSR1 equ 0FE1h ;# 
   393  0000                     # 7028 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   394                           FSR1L equ 0FE1h ;# 
   395  0000                     # 7035 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   396                           FSR1H equ 0FE2h ;# 
   397  0000                     # 7042 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   398                           PLUSW1 equ 0FE3h ;# 
   399  0000                     # 7049 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   400                           PREINC1 equ 0FE4h ;# 
   401  0000                     # 7056 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   402                           POSTDEC1 equ 0FE5h ;# 
   403  0000                     # 7063 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   404                           POSTINC1 equ 0FE6h ;# 
   405  0000                     # 7070 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   406                           INDF1 equ 0FE7h ;# 
   407  0000                     # 7077 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   408                           WREG equ 0FE8h ;# 
   409  0000                     # 7084 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   410                           FSR0 equ 0FE9h ;# 
   411  0000                     # 7091 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   412                           FSR0L equ 0FE9h ;# 
   413  0000                     # 7098 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   414                           FSR0H equ 0FEAh ;# 
   415  0000                     # 7105 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   416                           PLUSW0 equ 0FEBh ;# 
   417  0000                     # 7112 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   418                           PREINC0 equ 0FECh ;# 
   419  0000                     # 7119 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   420                           POSTDEC0 equ 0FEDh ;# 
   421  0000                     # 7126 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   422                           POSTINC0 equ 0FEEh ;# 
   423  0000                     # 7133 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   424                           INDF0 equ 0FEFh ;# 
   425  0000                     # 7140 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   426                           INTCON3 equ 0FF0h ;# 
   427  0000                     # 7232 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   428                           INTCON2 equ 0FF1h ;# 
   429  0000                     # 7309 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   430                           INTCON equ 0FF2h ;# 
   431  0000                     # 7426 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   432                           PROD equ 0FF3h ;# 
   433  0000                     # 7433 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   434                           PRODL equ 0FF3h ;# 
   435  0000                     # 7440 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   436                           PRODH equ 0FF4h ;# 
   437  0000                     # 7447 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   438                           TABLAT equ 0FF5h ;# 
   439  0000                     # 7456 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   440                           TBLPTR equ 0FF6h ;# 
   441  0000                     # 7463 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   442                           TBLPTRL equ 0FF6h ;# 
   443  0000                     # 7470 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   444                           TBLPTRH equ 0FF7h ;# 
   445  0000                     # 7477 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   446                           TBLPTRU equ 0FF8h ;# 
   447  0000                     # 7486 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   448                           PCLAT equ 0FF9h ;# 
   449  0000                     # 7493 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   450                           PC equ 0FF9h ;# 
   451  0000                     # 7500 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   452                           PCL equ 0FF9h ;# 
   453  0000                     # 7507 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   454                           PCLATH equ 0FFAh ;# 
   455  0000                     # 7514 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   456                           PCLATU equ 0FFBh ;# 
   457  0000                     # 7521 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   458                           STKPTR equ 0FFCh ;# 
   459  0000                     # 7595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   460                           TOS equ 0FFDh ;# 
   461  0000                     # 7602 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   462                           TOSL equ 0FFDh ;# 
   463  0000                     # 7609 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   464                           TOSH equ 0FFEh ;# 
   465  0000                     # 7616 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   466                           TOSU equ 0FFFh ;# 
   467  0000                     	FNCALL	_main,_IR_INIT
   468                           	FNCALL	_main,_LCD_Init
   469                           	FNCALL	_main,_LCD_String
   470                           	FNCALL	_main,_SendLCD
   471                           	FNCALL	_main,_SetLine
   472                           	FNCALL	_main,_TrackIR
   473                           	FNCALL	_main,___lwdiv
   474                           	FNCALL	_main,_sprintf
   475                           	FNCALL	_main,_storeIR
   476                           	FNCALL	_sprintf,_vfprintf
   477                           	FNCALL	_vfprintf,_vfpfcnvrt
   478                           	FNCALL	_vfpfcnvrt,_fputc
   479                           	FNCALL	_vfpfcnvrt,_utoa
   480                           	FNCALL	_utoa,___lodiv
   481                           	FNCALL	_utoa,___lomod
   482                           	FNCALL	_utoa,_pad
   483                           	FNCALL	_pad,_fputc
   484                           	FNCALL	_pad,_fputs
   485                           	FNCALL	_pad,_strlen
   486                           	FNCALL	_fputs,_fputc
   487                           	FNCALL	_fputc,_putch
   488                           	FNCALL	_SetLine,_SendLCD
   489                           	FNCALL	_LCD_String,_SendLCD
   490                           	FNCALL	_LCD_Init,_LCDout
   491                           	FNCALL	_LCD_Init,_SendLCD
   492                           	FNCALL	_SendLCD,_LCDout
   493                           	FNCALL	_LCDout,_E_TOG
   494                           	FNROOT	_main
   495                           	global	_flags
   496                           	global	_nout
   497                           	global	_width
   498                           	global	_prec
   499                           	global	_dbuf
   500                           	global	_TRISD
   501                           _TRISD	set	0xF95
   502  0000                     	global	_TRISC
   503                           _TRISC	set	0xF94
   504  0000                     	global	_LATD
   505                           _LATD	set	0xF8C
   506  0000                     	global	_LATC
   507                           _LATC	set	0xF8B
   508  0000                     	global	_LATAbits
   509                           _LATAbits	set	0xF89
   510  0000                     	global	_LATCbits
   511                           _LATCbits	set	0xF8B
   512  0000                     	global	_LATDbits
   513                           _LATDbits	set	0xF8C
   514  0000                     	global	_CAP2BUFL
   515                           _CAP2BUFL	set	0xF66
   516  0000                     	global	_CAP2BUFH
   517                           _CAP2BUFH	set	0xF67
   518  0000                     	global	_CAP1BUFL
   519                           _CAP1BUFL	set	0xF68
   520  0000                     	global	_CAP1BUFH
   521                           _CAP1BUFH	set	0xF69
   522  0000                     	global	_DFLTCON
   523                           _DFLTCON	set	0xF60
   524  0000                     	global	_CAP1CON
   525                           _CAP1CON	set	0xF63
   526  0000                     	global	_TRISA
   527                           _TRISA	set	0xF92
   528  0000                     	global	_LATA
   529                           _LATA	set	0xF89
   530  0000                     	global	_OSCCONbits
   531                           _OSCCONbits	set	0xFD3
   532  0000                     	global	_OSCCON
   533                           _OSCCON	set	0xFD3
   534  0000                     	global	_ADCON2
   535                           _ADCON2	set	0xFC0
   536  0000                     	global	_ADCON1
   537                           _ADCON1	set	0xFC1
   538  0000                     	global	_ADCON0
   539                           _ADCON0	set	0xFC2
   540  0000                     	global	_ANSEL1
   541                           _ANSEL1	set	0xFB9
   542  0000                     	global	_ANSEL0
   543                           _ANSEL0	set	0xFB8
   544  0000                     	global	_T5CON
   545                           _T5CON	set	0xFB7
   546  0000                     psect	smallconst,class=SMALLCONST,space=0,reloc=2,noexec
   547                           global __psmallconst
   548                           __psmallconst:
   549  000300                     	db	0
   550  000300  00                 	
   551                           STR_2:
   552  000301                     	db	76	;'L'
   553  000301  4C                 	db	58	;':'
   554  000302  3A                 	db	37
   555  000303  25                 	db	117	;'u'
   556  000304  75                 	db	32
   557  000305  20                 	db	82	;'R'
   558  000306  52                 	db	58	;':'
   559  000307  3A                 	db	37
   560  000308  25                 	db	117	;'u'
   561  000309  75                 	db	0
   562  00030A  00                 	
   563                           STR_1:
   564  00030B                     	db	104	;'h'
   565  00030B  68                 	db	101	;'e'
   566  00030C  65                 	db	108	;'l'
   567  00030D  6C                 	db	108	;'l'
   568  00030E  6C                 	db	111	;'o'
   569  00030F  6F                 	db	111	;'o'
   570  000310  6F                 	db	111	;'o'
   571  000311  6F                 	db	0
   572  000312  00                 ; #config settings
   573                           global __CFG_OSC$IRCIO
   574                           __CFG_OSC$IRCIO equ 0x0
   575  0000                     	file	"C:\Users\rh2415\AppData\Local\Temp\sbvo."
   576                           	line	#
   577                           psect	cinit,class=CODE,delta=1,reloc=2
   578                           global __pcinit
   579                           __pcinit:
   580  001000                     global start_initialization
   581                           start_initialization:
   582  001000                     
   583                           global __initialization
   584                           __initialization:
   585  001000                     psect	bssCOMRAM,class=COMRAM,space=1,noexec
   586                           global __pbssCOMRAM
   587                           __pbssCOMRAM:
   588  00005E                     _flags:
   589  00005E                            ds      2
   590  00005E                     psect	bssBANK0,class=BANK0,space=1,noexec,lowdata
   591                           global __pbssBANK0
   592                           __pbssBANK0:
   593  000060                     _nout:
   594  000060                            ds      2
   595  000060                     _width:
   596  000062                            ds      2
   597  000062                     _prec:
   598  000064                            ds      2
   599  000064                     _dbuf:
   600  000066                            ds      32
   601  000066                     	file	"C:\Users\rh2415\AppData\Local\Temp\sbvo."
   602                           	line	#
   603                           psect	cinit
   604                           ; Clear objects allocated to BANK0 (38 bytes)
   605                           	global __pbssBANK0
   606                           lfsr	0,__pbssBANK0
   607  001000  EE00  F060         movlw	38
   608  001004  0E26               clear_0:
   609  001006                     clrf	postinc0,c
   610  001006  6AEE               decf	wreg
   611  001008  06E8               bnz	clear_0
   612  00100A  E1FD               ; Clear objects allocated to COMRAM (2 bytes)
   613                           	global __pbssCOMRAM
   614                           clrf	(__pbssCOMRAM+1)&0xffh,c
   615  00100C  6A5F               clrf	(__pbssCOMRAM+0)&0xffh,c
   616  00100E  6A5E               psect cinit,class=CODE,delta=1
   617                           global end_of_initialization,__end_of__initialization
   618                           
   619                           ;End of C runtime variable initialization code
   620                           
   621                           end_of_initialization:
   622  001010                     __end_of__initialization:
   623  001010                     	GLOBAL	__Lsmallconst
   624                           	movlw	low highword(__Lsmallconst)
   625  001010  0E00               	movwf	tblptru
   626  001012  6EF8               	movlw	high(__Lsmallconst)
   627  001014  0E03               	movwf	tblptrh
   628  001016  6EF7               movlb 0
   629  001018  0100               goto _main	;jump to C main() function
   630  00101A  EF6F  F003         psect	cstackBANK0,class=BANK0,space=1,noexec
   631                           global __pcstackBANK0
   632                           __pcstackBANK0:
   633  000086                     	global	sprintf@ret
   634                           sprintf@ret:	; 2 bytes @ 0x0
   635  000086                     	ds   2
   636  000086                     	global	sprintf@ap
   637                           sprintf@ap:	; 2 bytes @ 0x2
   638  000088                     	ds   2
   639  000088                     	global	sprintf@f
   640                           sprintf@f:	; 6 bytes @ 0x4
   641  00008A                     	ds   6
   642  00008A                     	global	main@buf
   643                           main@buf:	; 16 bytes @ 0xA
   644  000090                     	ds   16
   645  000090                     	global	main@RightIR
   646                           main@RightIR:	; 2 bytes @ 0x1A
   647  0000A0                     	ds   2
   648  0000A0                     	global	main@LeftIR
   649                           main@LeftIR:	; 2 bytes @ 0x1C
   650  0000A2                     	ds   2
   651  0000A2                     psect	cstackCOMRAM,class=COMRAM,space=1,noexec
   652                           global __pcstackCOMRAM
   653                           __pcstackCOMRAM:
   654  000001                     ?_putch:	; 1 bytes @ 0x0
   655  000001                     ??_putch:	; 1 bytes @ 0x0
   656  000001                     ?_IR_INIT:	; 1 bytes @ 0x0
   657  000001                     ??_IR_INIT:	; 1 bytes @ 0x0
   658  000001                     ?_storeIR:	; 1 bytes @ 0x0
   659  000001                     ?_TrackIR:	; 1 bytes @ 0x0
   660  000001                     ?_E_TOG:	; 1 bytes @ 0x0
   661  000001                     ??_E_TOG:	; 1 bytes @ 0x0
   662  000001                     ?_LCDout:	; 1 bytes @ 0x0
   663  000001                     ??_LCDout:	; 1 bytes @ 0x0
   664  000001                     ?_LCD_Init:	; 1 bytes @ 0x0
   665  000001                     ?_SetLine:	; 1 bytes @ 0x0
   666  000001                     ?_main:	; 1 bytes @ 0x0
   667  000001                     ?_fputc:	; 2 bytes @ 0x0
   668  000001                     	global	?_strlen
   669                           ?_strlen:	; 2 bytes @ 0x0
   670  000001                     	global	?___lwdiv
   671                           ?___lwdiv:	; 2 bytes @ 0x0
   672  000001                     	global	?___lodiv
   673                           ?___lodiv:	; 8 bytes @ 0x0
   674  000001                     	global	?___lomod
   675                           ?___lomod:	; 8 bytes @ 0x0
   676  000001                     	global	LCDout@number
   677                           LCDout@number:	; 1 bytes @ 0x0
   678  000001                     putch@c:	; 1 bytes @ 0x0
   679  000001                     	global	storeIR@IR_R
   680                           storeIR@IR_R:	; 2 bytes @ 0x0
   681  000001                     	global	TrackIR@LeftIR
   682                           TrackIR@LeftIR:	; 2 bytes @ 0x0
   683  000001                     	global	___lwdiv@dividend
   684                           ___lwdiv@dividend:	; 2 bytes @ 0x0
   685  000001                     	global	fputc@c
   686                           fputc@c:	; 2 bytes @ 0x0
   687  000001                     	global	strlen@s
   688                           strlen@s:	; 2 bytes @ 0x0
   689  000001                     	global	___lodiv@dividend
   690                           ___lodiv@dividend:	; 8 bytes @ 0x0
   691  000001                     	global	___lomod@dividend
   692                           ___lomod@dividend:	; 8 bytes @ 0x0
   693  000001                     	ds   1
   694  000001                     ?_SendLCD:	; 1 bytes @ 0x1
   695  000002                     	global	SendLCD@type
   696                           SendLCD@type:	; 1 bytes @ 0x1
   697  000002                     	ds   1
   698  000002                     ??_strlen:	; 1 bytes @ 0x2
   699  000003                     ??_SendLCD:	; 1 bytes @ 0x2
   700  000003                     	global	SendLCD@Byte
   701                           SendLCD@Byte:	; 1 bytes @ 0x2
   702  000003                     	global	storeIR@IR_L
   703                           storeIR@IR_L:	; 2 bytes @ 0x2
   704  000003                     	global	TrackIR@RightIR
   705                           TrackIR@RightIR:	; 2 bytes @ 0x2
   706  000003                     	global	___lwdiv@divisor
   707                           ___lwdiv@divisor:	; 2 bytes @ 0x2
   708  000003                     	global	fputc@fp
   709                           fputc@fp:	; 2 bytes @ 0x2
   710  000003                     	ds   1
   711  000003                     ??_LCD_Init:	; 1 bytes @ 0x3
   712  000004                     ??_SetLine:	; 1 bytes @ 0x3
   713  000004                     ?_LCD_String:	; 1 bytes @ 0x3
   714  000004                     	global	SetLine@line
   715                           SetLine@line:	; 1 bytes @ 0x3
   716  000004                     	global	LCD_String@string
   717                           LCD_String@string:	; 2 bytes @ 0x3
   718  000004                     	ds   1
   719  000004                     ??_fputc:	; 1 bytes @ 0x4
   720  000005                     ??_storeIR:	; 1 bytes @ 0x4
   721  000005                     ??_TrackIR:	; 1 bytes @ 0x4
   722  000005                     ??___lwdiv:	; 1 bytes @ 0x4
   723  000005                     	global	___lwdiv@quotient
   724                           ___lwdiv@quotient:	; 2 bytes @ 0x4
   725  000005                     	global	strlen@a
   726                           strlen@a:	; 2 bytes @ 0x4
   727  000005                     	ds   1
   728  000005                     ??_LCD_String:	; 1 bytes @ 0x5
   729  000006                     	global	TrackIR@limit
   730                           TrackIR@limit:	; 2 bytes @ 0x5
   731  000006                     	ds   1
   732  000006                     	global	___lwdiv@counter
   733                           ___lwdiv@counter:	; 1 bytes @ 0x6
   734  000007                     	ds   2
   735  000007                     	global	___lodiv@divisor
   736                           ___lodiv@divisor:	; 8 bytes @ 0x8
   737  000009                     	global	___lomod@divisor
   738                           ___lomod@divisor:	; 8 bytes @ 0x8
   739  000009                     	ds   1
   740  000009                     ?_fputs:	; 2 bytes @ 0x9
   741  00000A                     	global	fputs@s
   742                           fputs@s:	; 2 bytes @ 0x9
   743  00000A                     	ds   2
   744  00000A                     	global	fputs@fp
   745                           fputs@fp:	; 2 bytes @ 0xB
   746  00000C                     	ds   2
   747  00000C                     ??_fputs:	; 1 bytes @ 0xD
   748  00000E                     	global	fputs@c
   749                           fputs@c:	; 1 bytes @ 0xD
   750  00000E                     	ds   1
   751  00000E                     	global	fputs@i
   752                           fputs@i:	; 2 bytes @ 0xE
   753  00000F                     	ds   2
   754  00000F                     ??___lodiv:	; 1 bytes @ 0x10
   755  000011                     ??___lomod:	; 1 bytes @ 0x10
   756  000011                     	global	?_pad
   757                           ?_pad:	; 2 bytes @ 0x10
   758  000011                     	global	___lomod@counter
   759                           ___lomod@counter:	; 1 bytes @ 0x10
   760  000011                     	global	pad@fp
   761                           pad@fp:	; 2 bytes @ 0x10
   762  000011                     	global	___lodiv@quotient
   763                           ___lodiv@quotient:	; 8 bytes @ 0x10
   764  000011                     	ds   2
   765  000011                     	global	pad@buf
   766                           pad@buf:	; 2 bytes @ 0x12
   767  000013                     	ds   2
   768  000013                     	global	pad@p
   769                           pad@p:	; 2 bytes @ 0x14
   770  000015                     	ds   2
   771  000015                     ??_pad:	; 1 bytes @ 0x16
   772  000017                     	ds   1
   773  000017                     	global	pad@i
   774                           pad@i:	; 2 bytes @ 0x17
   775  000018                     	ds   1
   776  000018                     	global	___lodiv@counter
   777                           ___lodiv@counter:	; 1 bytes @ 0x18
   778  000019                     	ds   1
   779  000019                     	global	pad@w
   780                           pad@w:	; 2 bytes @ 0x19
   781  00001A                     	ds   2
   782  00001A                     	global	?_utoa
   783                           ?_utoa:	; 2 bytes @ 0x1B
   784  00001C                     	global	utoa@fp
   785                           utoa@fp:	; 2 bytes @ 0x1B
   786  00001C                     	ds   2
   787  00001C                     	global	utoa@d
   788                           utoa@d:	; 8 bytes @ 0x1D
   789  00001E                     	ds   8
   790  00001E                     ??_utoa:	; 1 bytes @ 0x25
   791  000026                     	ds   8
   792  000026                     	global	utoa@p
   793                           utoa@p:	; 2 bytes @ 0x2D
   794  00002E                     	ds   2
   795  00002E                     	global	utoa@w
   796                           utoa@w:	; 2 bytes @ 0x2F
   797  000030                     	ds   2
   798  000030                     	global	utoa@n
   799                           utoa@n:	; 8 bytes @ 0x31
   800  000032                     	ds   8
   801  000032                     	global	utoa@i
   802                           utoa@i:	; 2 bytes @ 0x39
   803  00003A                     	ds   2
   804  00003A                     	global	?_vfpfcnvrt
   805                           ?_vfpfcnvrt:	; 2 bytes @ 0x3B
   806  00003C                     	global	vfpfcnvrt@fp
   807                           vfpfcnvrt@fp:	; 2 bytes @ 0x3B
   808  00003C                     	ds   2
   809  00003C                     	global	vfpfcnvrt@fmt
   810                           vfpfcnvrt@fmt:	; 2 bytes @ 0x3D
   811  00003E                     	ds   2
   812  00003E                     	global	vfpfcnvrt@ap
   813                           vfpfcnvrt@ap:	; 2 bytes @ 0x3F
   814  000040                     	ds   2
   815  000040                     ??_vfpfcnvrt:	; 1 bytes @ 0x41
   816  000042                     	ds   4
   817  000042                     	global	vfpfcnvrt@llu
   818                           vfpfcnvrt@llu:	; 8 bytes @ 0x45
   819  000046                     	ds   8
   820  000046                     	global	?_vfprintf
   821                           ?_vfprintf:	; 2 bytes @ 0x4D
   822  00004E                     	global	vfprintf@fp
   823                           vfprintf@fp:	; 2 bytes @ 0x4D
   824  00004E                     	ds   2
   825  00004E                     	global	vfprintf@fmt
   826                           vfprintf@fmt:	; 2 bytes @ 0x4F
   827  000050                     	ds   2
   828  000050                     	global	vfprintf@ap
   829                           vfprintf@ap:	; 2 bytes @ 0x51
   830  000052                     	ds   2
   831  000052                     ??_vfprintf:	; 1 bytes @ 0x53
   832  000054                     	global	vfprintf@cfmt
   833                           vfprintf@cfmt:	; 2 bytes @ 0x53
   834  000054                     	ds   2
   835  000054                     	global	?_sprintf
   836                           ?_sprintf:	; 2 bytes @ 0x55
   837  000056                     	global	sprintf@s
   838                           sprintf@s:	; 2 bytes @ 0x55
   839  000056                     	ds   2
   840  000056                     	global	sprintf@fmt
   841                           sprintf@fmt:	; 2 bytes @ 0x57
   842  000058                     	ds   6
   843  000058                     ??_sprintf:	; 1 bytes @ 0x5D
   844  00005E                     ??_main:	; 1 bytes @ 0x5D
   845  00005E                     ;!
   846                           ;!Data Sizes:
   847                           ;!    Strings     18
   848                           ;!    Constant    0
   849                           ;!    Data        0
   850                           ;!    BSS         40
   851                           ;!    Persistent  0
   852                           ;!    Stack       0
   853                           ;!
   854                           ;!Auto Spaces:
   855                           ;!    Space          Size  Autos    Used
   856                           ;!    COMRAM           95     93      95
   857                           ;!    BANK0           160     30      68
   858                           ;!    BANK1           256      0       0
   859                           ;!    BANK2           244      0       0
   860                           
   861                           ;!
   862                           ;!Pointer List with Targets:
   863                           ;!
   864                           ;!    strlen@s	PTR const unsigned char  size(2) Largest target is 32
   865                           ;!		 -> dbuf(BANK0[32]), 
   866                           ;!
   867                           ;!    strlen@a	PTR const unsigned char  size(2) Largest target is 32
   868                           ;!		 -> dbuf(BANK0[32]), 
   869                           ;!
   870                           ;!    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 10
   871                           ;!		 -> STR_2(CODE[10]), STR_1(CODE[8]), 
   872                           ;!
   873                           ;!    sprintf@s	PTR unsigned char  size(2) Largest target is 16
   874                           ;!		 -> main@buf(BANK0[16]), 
   875                           ;!
   876                           ;!    sprintf@ap	PTR void [1] size(2) Largest target is 2
   877                           ;!		 -> ?_sprintf(COMRAM[2]), 
   878                           ;!
   879                           ;!    f.buffer	PTR unsigned char  size(2) Largest target is 16
   880                           ;!		 -> main@buf(BANK0[16]), 
   881                           ;!
   882                           ;!    fputs@s	PTR const unsigned char  size(2) Largest target is 32
   883                           ;!		 -> dbuf(BANK0[32]), 
   884                           ;!
   885                           ;!    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
   886                           ;!		 -> sprintf@f(BANK0[6]), 
   887                           ;!
   888                           ;!    S778_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 16
   889                           ;!		 -> main@buf(BANK0[16]), 
   890                           ;!
   891                           ;!    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 16
   892                           ;!		 -> main@buf(BANK0[16]), 
   893                           ;!
   894                           ;!    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
   895                           ;!		 -> sprintf@f(BANK0[6]), 
   896                           ;!
   897                           ;!    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
   898                           ;!		 -> sprintf@ap(BANK0[2]), 
   899                           ;!
   900                           ;!    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
   901                           ;!		 -> sprintf@f(BANK0[6]), 
   902                           ;!
   903                           ;!    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 10
   904                           ;!		 -> STR_2(CODE[10]), STR_1(CODE[8]), 
   905                           ;!
   906                           ;!    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 10
   907                           ;!		 -> STR_2(CODE[10]), STR_1(CODE[8]), 
   908                           ;!
   909                           ;!    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
   910                           ;!		 -> sprintf@f(BANK0[6]), 
   911                           ;!
   912                           ;!    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
   913                           ;!		 -> sprintf@ap(BANK0[2]), 
   914                           ;!
   915                           ;!    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
   916                           ;!		 -> vfprintf@cfmt(COMRAM[2]), 
   917                           ;!
   918                           ;!    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
   919                           ;!		 -> sprintf@f(BANK0[6]), 
   920                           ;!
   921                           ;!    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
   922                           ;!		 -> sprintf@f(BANK0[6]), 
   923                           ;!
   924                           ;!    pad@buf	PTR unsigned char  size(2) Largest target is 32
   925                           ;!		 -> dbuf(BANK0[32]), 
   926                           ;!
   927                           ;!    LCD_String@string	PTR unsigned char  size(2) Largest target is 16
   928                           ;!		 -> main@buf(BANK0[16]), 
   929                           ;!
   930                           ;!    storeIR@IR_R	PTR unsigned int  size(2) Largest target is 2
   931                           ;!		 -> main@LeftIR(BANK0[2]), 
   932                           ;!
   933                           ;!    storeIR@IR_L	PTR unsigned int  size(2) Largest target is 2
   934                           ;!		 -> main@RightIR(BANK0[2]), 
   935                           ;!
   936                           
   937                           
   938                           ;!
   939                           ;!Critical Paths under _main in COMRAM
   940                           ;!
   941                           ;!    _main->_sprintf
   942                           ;!    _sprintf->_vfprintf
   943                           ;!    _vfprintf->_vfpfcnvrt
   944                           ;!    _vfpfcnvrt->_utoa
   945                           ;!    _utoa->_pad
   946                           ;!    _pad->_fputs
   947                           ;!    _fputs->_fputc
   948                           ;!    _SetLine->_SendLCD
   949                           ;!    _LCD_String->_SendLCD
   950                           ;!    _LCD_Init->_SendLCD
   951                           ;!    _SendLCD->_LCDout
   952                           ;!
   953                           ;!Critical Paths under _main in BANK0
   954                           ;!
   955                           ;!    _main->_sprintf
   956                           ;!
   957                           ;!Critical Paths under _main in BANK1
   958                           ;!
   959                           ;!    None.
   960                           ;!
   961                           ;!Critical Paths under _main in BANK2
   962                           ;!
   963                           ;!    None.
   964                           
   965 ;;
   966 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   967 ;;
   968                           
   969                           ;!
   970                           ;!Call Graph Tables:
   971                           ;!
   972                           ;! ---------------------------------------------------------------------------------
   973                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   974                           ;! ---------------------------------------------------------------------------------
   975                           ;! (0) _main                                                20    20      0   10846
   976                           ;!                                             10 BANK0     20    20      0
   977                           ;!                            _IR_INIT
   978                           ;!                           _LCD_Init
   979                           ;!                         _LCD_String
   980                           ;!                            _SendLCD
   981                           ;!                            _SetLine
   982                           ;!                            _TrackIR
   983                           ;!                            ___lwdiv
   984                           ;!                            _sprintf
   985                           ;!                            _storeIR
   986                           ;! ---------------------------------------------------------------------------------
   987                           ;! (1) _storeIR                                              6     2      4     196
   988                           ;!                                              0 COMRAM     6     2      4
   989                           ;! ---------------------------------------------------------------------------------
   990                           ;! (1) _sprintf                                             18    10      8    5986
   991                           ;!                                             85 COMRAM     8     0      8
   992                           ;!                                              0 BANK0     10    10      0
   993                           ;!                           _vfprintf
   994                           ;! ---------------------------------------------------------------------------------
   995                           ;! (2) _vfprintf                                             8     2      6    5483
   996                           ;!                                             77 COMRAM     8     2      6
   997                           ;!                          _vfpfcnvrt
   998                           ;! ---------------------------------------------------------------------------------
   999                           ;! (3) _vfpfcnvrt                                           44    38      6    5130
  1000                           ;!                                             59 COMRAM    18    12      6
  1001                           ;!                              _fputc
  1002                           ;!                               _utoa
  1003                           ;! ---------------------------------------------------------------------------------
  1004                           ;! (4) _utoa                                                32    22     10    3759
  1005                           ;!                                             27 COMRAM    32    22     10
  1006                           ;!                            ___lodiv
  1007                           ;!                            ___lomod
  1008                           ;!                                _pad
  1009                           ;! ---------------------------------------------------------------------------------
  1010                           ;! (5) _pad                                                 11     5      6    2709
  1011                           ;!                                             16 COMRAM    11     5      6
  1012                           ;!                              _fputc
  1013                           ;!                              _fputs
  1014                           ;!                             _strlen
  1015                           ;! ---------------------------------------------------------------------------------
  1016                           ;! (6) _strlen                                               6     4      2     166
  1017                           ;!                                              0 COMRAM     6     4      2
  1018                           ;! ---------------------------------------------------------------------------------
  1019                           ;! (6) _fputs                                                7     3      4    1235
  1020                           ;!                                              9 COMRAM     7     3      4
  1021                           ;!                              _fputc
  1022                           ;! ---------------------------------------------------------------------------------
  1023                           ;! (7) _fputc                                                9     5      4     834
  1024                           ;!                                              0 COMRAM     9     5      4
  1025                           ;!                              _putch
  1026                           ;! ---------------------------------------------------------------------------------
  1027                           ;! (8) _putch                                                1     1      0       0
  1028                           ;! ---------------------------------------------------------------------------------
  1029                           ;! (5) ___lomod                                             17     1     16     311
  1030                           ;!                                              0 COMRAM    17     1     16
  1031                           ;! ---------------------------------------------------------------------------------
  1032                           ;! (5) ___lodiv                                             25     9     16     314
  1033                           ;!                                              0 COMRAM    25     9     16
  1034                           ;! ---------------------------------------------------------------------------------
  1035                           ;! (1) ___lwdiv                                              7     3      4     466
  1036                           ;!                                              0 COMRAM     7     3      4
  1037                           ;! ---------------------------------------------------------------------------------
  1038                           ;! (1) _TrackIR                                              7     3      4     241
  1039                           ;!                                              0 COMRAM     7     3      4
  1040                           ;! ---------------------------------------------------------------------------------
  1041                           ;! (1) _SetLine                                              1     1      0     882
  1042                           ;!                                              3 COMRAM     1     1      0
  1043                           ;!                            _SendLCD
  1044                           ;! ---------------------------------------------------------------------------------
  1045                           ;! (1) _LCD_String                                           2     0      2    1035
  1046                           ;!                                              3 COMRAM     2     0      2
  1047                           ;!                            _SendLCD
  1048                           ;! ---------------------------------------------------------------------------------
  1049                           ;! (1) _LCD_Init                                             1     1      0     926
  1050                           ;!                                              3 COMRAM     1     1      0
  1051                           ;!                             _LCDout
  1052                           ;!                            _SendLCD
  1053                           ;! ---------------------------------------------------------------------------------
  1054                           ;! (2) _SendLCD                                              2     1      1     838
  1055                           ;!                                              1 COMRAM     2     1      1
  1056                           ;!                             _LCDout
  1057                           ;! ---------------------------------------------------------------------------------
  1058                           ;! (3) _LCDout                                               1     1      0      88
  1059                           ;!                                              0 COMRAM     1     1      0
  1060                           ;!                              _E_TOG
  1061                           ;! ---------------------------------------------------------------------------------
  1062                           ;! (4) _E_TOG                                                0     0      0       0
  1063                           ;! ---------------------------------------------------------------------------------
  1064                           ;! (1) _IR_INIT                                              0     0      0       0
  1065                           ;! ---------------------------------------------------------------------------------
  1066                           ;! Estimated maximum stack depth 8
  1067                           ;! ---------------------------------------------------------------------------------
  1068                           ;!
  1069                           ;! Call Graph Graphs:
  1070                           ;!
  1071                           ;! _main (ROOT)
  1072                           ;!   _IR_INIT
  1073                           ;!   _LCD_Init
  1074                           ;!     _LCDout
  1075                           ;!       _E_TOG
  1076                           ;!     _SendLCD
  1077                           ;!       _LCDout
  1078                           ;!         _E_TOG
  1079                           ;!   _LCD_String
  1080                           ;!     _SendLCD
  1081                           ;!       _LCDout
  1082                           ;!         _E_TOG
  1083                           ;!   _SendLCD
  1084                           ;!     _LCDout
  1085                           ;!       _E_TOG
  1086                           ;!   _SetLine
  1087                           ;!     _SendLCD
  1088                           ;!       _LCDout
  1089                           ;!         _E_TOG
  1090                           ;!   _TrackIR
  1091                           ;!   ___lwdiv
  1092                           ;!   _sprintf
  1093                           ;!     _vfprintf
  1094                           ;!       _vfpfcnvrt
  1095                           ;!         _fputc
  1096                           ;!           _putch
  1097                           ;!         _utoa
  1098                           ;!           ___lodiv
  1099                           ;!           ___lomod
  1100                           ;!           _pad
  1101                           ;!             _fputc
  1102                           ;!               _putch
  1103                           ;!             _fputs
  1104                           ;!               _fputc
  1105                           ;!                 _putch
  1106                           ;!             _strlen
  1107                           ;!   _storeIR
  1108                           ;!
  1109                           
  1110                           ;! Address spaces:
  1111                           
  1112                           ;!Name               Size   Autos  Total    Cost      Usage
  1113                           ;!BIGRAM             2F3      0       0      10        0.0%
  1114                           ;!EEDATA             100      0       0       0        0.0%
  1115                           ;!BITBANK1           100      0       0       6        0.0%
  1116                           ;!BANK1              100      0       0       7        0.0%
  1117                           ;!BITBANK2            F4      0       0       8        0.0%
  1118                           ;!BANK2               F4      0       0       9        0.0%
  1119                           ;!BITBANK0            A0      0       0       3        0.0%
  1120                           ;!BANK0               A0     1E      44       4       42.5%
  1121                           ;!BITCOMRAM           5F      0       0       0        0.0%
  1122                           ;!COMRAM              5F     5D      5F       1      100.0%
  1123                           ;!BITSFR_5             0      0       0     200        0.0%
  1124                           ;!SFR_5                0      0       0     200        0.0%
  1125                           ;!BITSFR_4             0      0       0     200        0.0%
  1126                           ;!SFR_4                0      0       0     200        0.0%
  1127                           ;!BITSFR_3             0      0       0     200        0.0%
  1128                           ;!SFR_3                0      0       0     200        0.0%
  1129                           ;!BITSFR_2             0      0       0     200        0.0%
  1130                           ;!SFR_2                0      0       0     200        0.0%
  1131                           ;!BITSFR_1             0      0       0     200        0.0%
  1132                           ;!SFR_1                0      0       0     200        0.0%
  1133                           ;!BITSFR               0      0       0     200        0.0%
  1134                           ;!SFR                  0      0       0     200        0.0%
  1135                           ;!STACK                0      0       0       2        0.0%
  1136                           ;!NULL                 0      0       0       0        0.0%
  1137                           ;!ABS                  0      0      A3       5        0.0%
  1138                           ;!DATA                 0      0      A3      11        0.0%
  1139                           ;!CODE                 0      0       0       0        0.0%
  1140                           
  1141                           	global	_main
  1142                           
  1143 ;; *************** function _main *****************
  1144 ;; Defined at:
  1145 ;;		line 157 in file "main.c"
  1146 ;; Parameters:    Size  Location     Type
  1147 ;;		None
  1148 ;; Auto vars:     Size  Location     Type
  1149 ;;  buf            16   10[BANK0 ] unsigned char [16]
  1150 ;;  LeftIR          2   28[BANK0 ] unsigned int 
  1151 ;;  RightIR         2   26[BANK0 ] unsigned int 
  1152 ;; Return value:  Size  Location     Type
  1153 ;;                  1    wreg      void 
  1154 ;; Registers used:
  1155 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1156 ;; Tracked objects:
  1157 ;;		On entry : 0/0
  1158 ;;		On exit  : 0/0
  1159 ;;		Unchanged: 0/0
  1160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1161 ;;      Params:         0       0       0       0
  1162 ;;      Locals:         0      20       0       0
  1163 ;;      Temps:          0       0       0       0
  1164 ;;      Totals:         0      20       0       0
  1165 ;;Total ram usage:       20 bytes
  1166 ;; Hardware stack levels required when called:    8
  1167 ;; This function calls:
  1168 ;;		_IR_INIT
  1169 ;;		_LCD_Init
  1170 ;;		_LCD_String
  1171 ;;		_SendLCD
  1172 ;;		_SetLine
  1173 ;;		_TrackIR
  1174 ;;		___lwdiv
  1175 ;;		_sprintf
  1176 ;;		_storeIR
  1177 ;; This function is called by:
  1178 ;;		Startup code after reset
  1179 ;; This function uses a non-reentrant model
  1180 ;;
  1181                           psect	text0,class=CODE,space=0,reloc=2,group=0
  1182                           	file	"main.c"
  1183                           	line	157
  1184                           global __ptext0
  1185                           __ptext0:
  1186  0006DE                     psect	text0
  1187                           	file	"main.c"
  1188                           	line	157
  1189                           	global	__size_of_main
  1190                           	__size_of_main	equ	__end_of_main-_main
  1191  0000                     	
  1192                           _main:
  1193  0006DE                     ;incstack = 0
  1194                           	opt	stack 23
  1195                           	line	159
  1196                           	
  1197                           l1529:
  1198  0006DE                     ;main.c: 159:     LATC=0;
  1199                           	movlw	low(0)
  1200  0006DE  0E00               	movwf	((c:3979)),c	;volatile
  1201  0006E0  6E8B               	line	160
  1202                           ;main.c: 160:     LATD=0;
  1203                           	movlw	low(0)
  1204  0006E2  0E00               	movwf	((c:3980)),c	;volatile
  1205  0006E4  6E8C               	line	161
  1206                           ;main.c: 161:     TRISC=0;
  1207                           	movlw	low(0)
  1208  0006E6  0E00               	movwf	((c:3988)),c	;volatile
  1209  0006E8  6E94               	line	162
  1210                           ;main.c: 162:     TRISD=0;
  1211                           	movlw	low(0)
  1212  0006EA  0E00               	movwf	((c:3989)),c	;volatile
  1213  0006EC  6E95               	line	165
  1214                           ;main.c: 163:     unsigned int RightIR;;main.c: 164:     unsigned int LeftIR;;main.c: 16
                                 5:     ANSEL0 = 0b00000000;
  1215                           	movlw	low(0)
  1216  0006EE  0E00               	movwf	((c:4024)),c	;volatile
  1217  0006F0  6EB8               	line	166
  1218                           ;main.c: 166:     ANSEL1 = 0;
  1219                           	movlw	low(0)
  1220  0006F2  0E00               	movwf	((c:4025)),c	;volatile
  1221  0006F4  6EB9               	line	168
  1222                           ;main.c: 168:     ADCON0 = 0b00001101;
  1223                           	movlw	low(0Dh)
  1224  0006F6  0E0D               	movwf	((c:4034)),c	;volatile
  1225  0006F8  6EC2               	line	169
  1226                           ;main.c: 169:     ADCON1 = 0b00000000;
  1227                           	movlw	low(0)
  1228  0006FA  0E00               	movwf	((c:4033)),c	;volatile
  1229  0006FC  6EC1               	line	171
  1230                           ;main.c: 171:     ADCON2 = 0b10101011;
  1231                           	movlw	low(0ABh)
  1232  0006FE  0EAB               	movwf	((c:4032)),c	;volatile
  1233  000700  6EC0               	line	173
  1234                           ;main.c: 172:      char buf[16];;main.c: 173:      OSCCON = 0x72;
  1235                           	movlw	low(072h)
  1236  000702  0E72               	movwf	((c:4051)),c	;volatile
  1237  000704  6ED3               	line	174
  1238                           ;main.c: 174:     while (!OSCCONbits.IOFS);
  1239                           	goto	l98
  1240  000706  EF85  F003         	
  1241                           l99:
  1242  00070A                     	
  1243                           l98:
  1244  00070A                     	btfss	((c:4051)),c,2	;volatile
  1245  00070A  A4D3               	goto	u841
  1246  00070C  EF8A  F003         	goto	u840
  1247  000710  EF8C  F003         u841:
  1248  000714                     	goto	l98
  1249  000714  EF85  F003         u840:
  1250  000718                     	goto	l1531
  1251  000718  EF8E  F003         	
  1252                           l100:
  1253  00071C                     	line	176
  1254                           	
  1255                           l1531:
  1256  00071C                     ;main.c: 176:     IR_INIT();
  1257                           	call	_IR_INIT	;wreg free
  1258  00071C  EC0F  F008         	line	177
  1259                           	
  1260                           l1533:
  1261  000720                     ;main.c: 177:     LCD_Init();
  1262                           	call	_LCD_Init	;wreg free
  1263  000720  ECC9  F005         	line	179
  1264                           	
  1265                           l1535:
  1266  000724                     ;main.c: 179:     SetLine(1);
  1267                           	movlw	(01h)&0ffh
  1268  000724  0E01               	
  1269                           	call	_SetLine
  1270  000726  ECA5  F007         	line	180
  1271                           	
  1272                           l1537:
  1273  00072A                     ;main.c: 180:     sprintf(buf,"hellooo");
  1274                           		movlw	low(main@buf)
  1275  00072A  0E90               	movwf	((c:sprintf@s)),c
  1276  00072C  6E56               	movlw	high(main@buf)
  1277  00072E  0E00               	movwf	((c:sprintf@s+1)),c
  1278  000730  6E57               
  1279                           		movlw	low(STR_1)
  1280  000732  0E0B               	movwf	((c:sprintf@fmt)),c
  1281  000734  6E58               	movlw	high(STR_1)
  1282  000736  0E03               	movwf	((c:sprintf@fmt+1)),c
  1283  000738  6E59               
  1284                           	call	_sprintf	;wreg free
  1285  00073A  ECD7  F006         	line	181
  1286                           	
  1287                           l1539:
  1288  00073E                     ;main.c: 181:      LCD_String(buf);
  1289                           		movlw	low(main@buf)
  1290  00073E  0E90               	movwf	((c:LCD_String@string)),c
  1291  000740  6E04               	movlw	high(main@buf)
  1292  000742  0E00               	movwf	((c:LCD_String@string+1)),c
  1293  000744  6E05               
  1294                           	call	_LCD_String	;wreg free
  1295  000746  ECCA  F007         	line	182
  1296                           	
  1297                           l1541:
  1298  00074A                     ;main.c: 182:      SendLCD(0x20,1);
  1299                           	movlw	low(01h)
  1300  00074A  0E01               	movwf	((c:SendLCD@type)),c
  1301  00074C  6E02               	movlw	(020h)&0ffh
  1302  00074E  0E20               	
  1303                           	call	_SendLCD
  1304  000750  ECEC  F007         	goto	l1543
  1305  000754  EFAC  F003         	line	184
  1306                           ;main.c: 184:     while (1)
  1307                           	
  1308                           l101:
  1309  000758                     	line	188
  1310                           	
  1311                           l1543:
  1312  000758                     ;main.c: 185:     {;main.c: 188:     storeIR(&LeftIR,&RightIR);
  1313                           		movlw	low(main@LeftIR)
  1314  000758  0EA2               	movwf	((c:storeIR@IR_R)),c
  1315  00075A  6E01               	movlw	high(main@LeftIR)
  1316  00075C  0E00               	movwf	((c:storeIR@IR_R+1)),c
  1317  00075E  6E02               
  1318                           		movlw	low(main@RightIR)
  1319  000760  0EA0               	movwf	((c:storeIR@IR_L)),c
  1320  000762  6E03               	movlw	high(main@RightIR)
  1321  000764  0E00               	movwf	((c:storeIR@IR_L+1)),c
  1322  000766  6E04               
  1323                           	call	_storeIR	;wreg free
  1324  000768  EC80  F007         	line	189
  1325                           	
  1326                           l1545:
  1327  00076C                     ;main.c: 189:     LeftIR=LeftIR/100;
  1328                           	movff	(main@LeftIR),(c:___lwdiv@dividend)
  1329  00076C  C0A2  F001         	movff	(main@LeftIR+1),(c:___lwdiv@dividend+1)
  1330  000770  C0A3  F002         	movlw	high(064h)
  1331  000774  0E00               	movwf	((c:___lwdiv@divisor+1)),c
  1332  000776  6E04               	movlw	low(064h)
  1333  000778  0E64               	movwf	((c:___lwdiv@divisor)),c
  1334  00077A  6E03               	call	___lwdiv	;wreg free
  1335  00077C  EC24  F006         	movff	0+?___lwdiv,(main@LeftIR)
  1336  000780  C001  F0A2         	movff	1+?___lwdiv,(main@LeftIR+1)
  1337  000784  C002  F0A3         	line	190
  1338                           	
  1339                           l1547:
  1340  000788                     ;main.c: 190:     RightIR=RightIR/100;
  1341                           	movff	(main@RightIR),(c:___lwdiv@dividend)
  1342  000788  C0A0  F001         	movff	(main@RightIR+1),(c:___lwdiv@dividend+1)
  1343  00078C  C0A1  F002         	movlw	high(064h)
  1344  000790  0E00               	movwf	((c:___lwdiv@divisor+1)),c
  1345  000792  6E04               	movlw	low(064h)
  1346  000794  0E64               	movwf	((c:___lwdiv@divisor)),c
  1347  000796  6E03               	call	___lwdiv	;wreg free
  1348  000798  EC24  F006         	movff	0+?___lwdiv,(main@RightIR)
  1349  00079C  C001  F0A0         	movff	1+?___lwdiv,(main@RightIR+1)
  1350  0007A0  C002  F0A1         	line	191
  1351                           	
  1352                           l1549:
  1353  0007A4                     ;main.c: 191:     TrackIR(LeftIR, RightIR);
  1354                           	movff	(main@LeftIR),(c:TrackIR@LeftIR)
  1355  0007A4  C0A2  F001         	movff	(main@LeftIR+1),(c:TrackIR@LeftIR+1)
  1356  0007A8  C0A3  F002         	movff	(main@RightIR),(c:TrackIR@RightIR)
  1357  0007AC  C0A0  F003         	movff	(main@RightIR+1),(c:TrackIR@RightIR+1)
  1358  0007B0  C0A1  F004         	call	_TrackIR	;wreg free
  1359  0007B4  EC06  F007         	line	193
  1360                           	
  1361                           l1551:
  1362  0007B8                     ;main.c: 193:       SetLine(1);
  1363                           	movlw	(01h)&0ffh
  1364  0007B8  0E01               	
  1365                           	call	_SetLine
  1366  0007BA  ECA5  F007         	line	194
  1367                           	
  1368                           l1553:
  1369  0007BE                     ;main.c: 194:     sprintf(buf,"L:%u R:%u",LeftIR, RightIR);
  1370                           		movlw	low(main@buf)
  1371  0007BE  0E90               	movwf	((c:sprintf@s)),c
  1372  0007C0  6E56               	movlw	high(main@buf)
  1373  0007C2  0E00               	movwf	((c:sprintf@s+1)),c
  1374  0007C4  6E57               
  1375                           		movlw	low(STR_2)
  1376  0007C6  0E01               	movwf	((c:sprintf@fmt)),c
  1377  0007C8  6E58               	movlw	high(STR_2)
  1378  0007CA  0E03               	movwf	((c:sprintf@fmt+1)),c
  1379  0007CC  6E59               
  1380                           	movff	(main@LeftIR),0+((c:?_sprintf)+04h)
  1381  0007CE  C0A2  F05A         	movff	(main@LeftIR+1),1+((c:?_sprintf)+04h)
  1382  0007D2  C0A3  F05B         	movff	(main@RightIR),0+((c:?_sprintf)+06h)
  1383  0007D6  C0A0  F05C         	movff	(main@RightIR+1),1+((c:?_sprintf)+06h)
  1384  0007DA  C0A1  F05D         	call	_sprintf	;wreg free
  1385  0007DE  ECD7  F006         	line	195
  1386                           	
  1387                           l1555:
  1388  0007E2                     ;main.c: 195:      LCD_String(buf);
  1389                           		movlw	low(main@buf)
  1390  0007E2  0E90               	movwf	((c:LCD_String@string)),c
  1391  0007E4  6E04               	movlw	high(main@buf)
  1392  0007E6  0E00               	movwf	((c:LCD_String@string+1)),c
  1393  0007E8  6E05               
  1394                           	call	_LCD_String	;wreg free
  1395  0007EA  ECCA  F007         	goto	l1543
  1396  0007EE  EFAC  F003         	line	198
  1397                           ;main.c: 198:     }
  1398                           	
  1399                           l102:
  1400  0007F2                     	goto	l1543
  1401  0007F2  EFAC  F003         	
  1402                           l103:
  1403  0007F6                     	line	199
  1404                           	
  1405                           l104:
  1406  0007F6                     	global	start
  1407                           	goto	start
  1408  0007F6  EF00  F000         	opt stack 0
  1409                           GLOBAL	__end_of_main
  1410                           	__end_of_main:
  1411  0007FA                     	signat	_main,89
  1412                           	global	_storeIR
  1413                           
  1414 ;; *************** function _storeIR *****************
  1415 ;; Defined at:
  1416 ;;		line 35 in file "main.c"
  1417 ;; Parameters:    Size  Location     Type
  1418 ;;  IR_R            2    0[COMRAM] PTR unsigned int 
  1419 ;;		 -> main@LeftIR(2), 
  1420 ;;  IR_L            2    2[COMRAM] PTR unsigned int 
  1421 ;;		 -> main@RightIR(2), 
  1422 ;; Auto vars:     Size  Location     Type
  1423 ;;		None
  1424 ;; Return value:  Size  Location     Type
  1425 ;;                  1    wreg      void 
  1426 ;; Registers used:
  1427 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1428 ;; Tracked objects:
  1429 ;;		On entry : 0/0
  1430 ;;		On exit  : 0/0
  1431 ;;		Unchanged: 0/0
  1432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1433 ;;      Params:         4       0       0       0
  1434 ;;      Locals:         0       0       0       0
  1435 ;;      Temps:          2       0       0       0
  1436 ;;      Totals:         6       0       0       0
  1437 ;;Total ram usage:        6 bytes
  1438 ;; Hardware stack levels used:    1
  1439 ;; This function calls:
  1440 ;;		Nothing
  1441 ;; This function is called by:
  1442 ;;		_main
  1443 ;; This function uses a non-reentrant model
  1444 ;;
  1445                           psect	text1,class=CODE,space=0,reloc=2,group=0
  1446                           	line	35
  1447                           global __ptext1
  1448                           __ptext1:
  1449  000F00                     psect	text1
  1450                           	file	"main.c"
  1451                           	line	35
  1452                           	global	__size_of_storeIR
  1453                           	__size_of_storeIR	equ	__end_of_storeIR-_storeIR
  1454  0000                     	
  1455                           _storeIR:
  1456  000F00                     ;incstack = 0
  1457                           	opt	stack 30
  1458                           	line	36
  1459                           	
  1460                           l1425:
  1461  000F00                     ;main.c: 36:     *IR_L = ((CAP1BUFH << 8) | CAP1BUFL);
  1462                           	movf	((c:3944)),c,w	;volatile
  1463  000F00  5068               	movff	(c:3945),??_storeIR+0+0	;volatile
  1464  000F02  CF69 F005          	clrf	(??_storeIR+0+0+1)&0ffh,c
  1465  000F06  6A06               	movff	??_storeIR+0+0,??_storeIR+0+1
  1466  000F08  C005  F006         	clrf	(??_storeIR+0+0),c
  1467  000F0C  6A05               	iorwf	(??_storeIR+0+0),c
  1468  000F0E  1205               	movlw	0
  1469  000F10  0E00               	iorwf	(??_storeIR+0+1),c
  1470  000F12  1206               	movff	(c:storeIR@IR_L),fsr2l
  1471  000F14  C003  FFD9         	movff	(c:storeIR@IR_L+1),fsr2h
  1472  000F18  C004  FFDA         	movff	??_storeIR+0+0,postinc2
  1473  000F1C  C005  FFDE         	movff	??_storeIR+0+1,postdec2
  1474  000F20  C006  FFDD         
  1475                           	line	37
  1476                           ;main.c: 37:     *IR_R = ((CAP2BUFH << 8) | CAP2BUFL);
  1477                           	movf	((c:3942)),c,w	;volatile
  1478  000F24  5066               	movff	(c:3943),??_storeIR+0+0	;volatile
  1479  000F26  CF67 F005          	clrf	(??_storeIR+0+0+1)&0ffh,c
  1480  000F2A  6A06               	movff	??_storeIR+0+0,??_storeIR+0+1
  1481  000F2C  C005  F006         	clrf	(??_storeIR+0+0),c
  1482  000F30  6A05               	iorwf	(??_storeIR+0+0),c
  1483  000F32  1205               	movlw	0
  1484  000F34  0E00               	iorwf	(??_storeIR+0+1),c
  1485  000F36  1206               	movff	(c:storeIR@IR_R),fsr2l
  1486  000F38  C001  FFD9         	movff	(c:storeIR@IR_R+1),fsr2h
  1487  000F3C  C002  FFDA         	movff	??_storeIR+0+0,postinc2
  1488  000F40  C005  FFDE         	movff	??_storeIR+0+1,postdec2
  1489  000F44  C006  FFDD         
  1490                           	line	38
  1491                           	
  1492                           l56:
  1493  000F48                     	return	;funcret
  1494  000F48  0012               	opt stack 0
  1495                           GLOBAL	__end_of_storeIR
  1496                           	__end_of_storeIR:
  1497  000F4A                     	signat	_storeIR,8313
  1498                           	global	_sprintf
  1499                           
  1500 ;; *************** function _sprintf *****************
  1501 ;; Defined at:
  1502 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\nf_sprintf.c"
  1503 ;; Parameters:    Size  Location     Type
  1504 ;;  s               2   85[COMRAM] PTR unsigned char 
  1505 ;;		 -> main@buf(16), 
  1506 ;;  fmt             2   87[COMRAM] PTR const unsigned char 
  1507 ;;		 -> STR_2(10), STR_1(8), 
  1508 ;; Auto vars:     Size  Location     Type
  1509 ;;  f               6    4[BANK0 ] struct _IO_FILE
  1510 ;;  ap              2    2[BANK0 ] PTR void [1]
  1511 ;;		 -> ?_sprintf(2), 
  1512 ;;  ret             2    0[BANK0 ] int 
  1513 ;; Return value:  Size  Location     Type
  1514 ;;                  2   85[COMRAM] int 
  1515 ;; Registers used:
  1516 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1517 ;; Tracked objects:
  1518 ;;		On entry : 0/0
  1519 ;;		On exit  : 0/0
  1520 ;;		Unchanged: 0/0
  1521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1522 ;;      Params:         8       0       0       0
  1523 ;;      Locals:         0      10       0       0
  1524 ;;      Temps:          0       0       0       0
  1525 ;;      Totals:         8      10       0       0
  1526 ;;Total ram usage:       18 bytes
  1527 ;; Hardware stack levels used:    1
  1528 ;; Hardware stack levels required when called:    7
  1529 ;; This function calls:
  1530 ;;		_vfprintf
  1531 ;; This function is called by:
  1532 ;;		_main
  1533 ;; This function uses a non-reentrant model
  1534 ;;
  1535                           psect	text2,class=CODE,space=0,reloc=2,group=2
  1536                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\nf_sprintf.c"
  1537                           	line	9
  1538                           global __ptext2
  1539                           __ptext2:
  1540  000DAE                     psect	text2
  1541                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\nf_sprintf.c"
  1542                           	line	9
  1543                           	global	__size_of_sprintf
  1544                           	__size_of_sprintf	equ	__end_of_sprintf-_sprintf
  1545  0000                     	
  1546                           _sprintf:
  1547  000DAE                     ;incstack = 0
  1548                           	opt	stack 23
  1549                           	line	15
  1550                           	
  1551                           l1495:
  1552  000DAE                     		movlw	low(?_sprintf+04h)
  1553  000DAE  0E5A               	movlb	0	; () banked
  1554  000DB0  0100               	movwf	((sprintf@ap))&0ffh
  1555  000DB2  6F88               	movlw	high(?_sprintf+04h)
  1556  000DB4  0E00               	movwf	((sprintf@ap+1))&0ffh
  1557  000DB6  6F89               
  1558                           	line	16
  1559                           		movff	(c:sprintf@s),(sprintf@f)
  1560  000DB8  C056  F08A         	movff	(c:sprintf@s+1),(sprintf@f+1)
  1561  000DBC  C057  F08B         
  1562                           	line	17
  1563                           	
  1564                           l1497:; BSR set to: 0
  1565  000DC0                     
  1566                           	movlw	high(0)
  1567  000DC0  0E00               	movwf	(1+(sprintf@f+02h))&0ffh
  1568  000DC2  6F8D               	movlw	low(0)
  1569  000DC4  0E00               	movwf	(0+(sprintf@f+02h))&0ffh
  1570  000DC6  6F8C               	line	18
  1571                           	
  1572                           l1499:; BSR set to: 0
  1573  000DC8                     
  1574                           	movlw	high(0)
  1575  000DC8  0E00               	movwf	(1+(sprintf@f+04h))&0ffh
  1576  000DCA  6F8F               	movlw	low(0)
  1577  000DCC  0E00               	movwf	(0+(sprintf@f+04h))&0ffh
  1578  000DCE  6F8E               	line	19
  1579                           	
  1580                           l1501:; BSR set to: 0
  1581  000DD0                     
  1582                           		movlw	low(sprintf@f)
  1583  000DD0  0E8A               	movwf	((c:vfprintf@fp)),c
  1584  000DD2  6E4E               	movlw	high(sprintf@f)
  1585  000DD4  0E00               	movwf	((c:vfprintf@fp+1)),c
  1586  000DD6  6E4F               
  1587                           		movff	(c:sprintf@fmt),(c:vfprintf@fmt)
  1588  000DD8  C058  F050         	movff	(c:sprintf@fmt+1),(c:vfprintf@fmt+1)
  1589  000DDC  C059  F051         
  1590                           		movlw	low(sprintf@ap)
  1591  000DE0  0E88               	movwf	((c:vfprintf@ap)),c
  1592  000DE2  6E52               	movlw	high(sprintf@ap)
  1593  000DE4  0E00               	movwf	((c:vfprintf@ap+1)),c
  1594  000DE6  6E53               
  1595                           	call	_vfprintf	;wreg free
  1596  000DE8  ECA4  F006         	movff	0+?_vfprintf,(sprintf@ret)
  1597  000DEC  C04E  F086         	movff	1+?_vfprintf,(sprintf@ret+1)
  1598  000DF0  C04F  F087         	line	20
  1599                           	
  1600                           l1503:
  1601  000DF4                     	movlb	0	; () banked
  1602  000DF4  0100               	movf	(0+(sprintf@f+02h))&0ffh,w
  1603  000DF6  518C               	addwf	((c:sprintf@s)),c,w
  1604  000DF8  2456               	movwf	c:fsr2l
  1605  000DFA  6ED9               	movf	(1+(sprintf@f+02h))&0ffh,w
  1606  000DFC  518D               	addwfc	((c:sprintf@s+1)),c,w
  1607  000DFE  2057               	movwf	1+c:fsr2l
  1608  000E00  6EDA               	movlw	low(0)
  1609  000E02  0E00               	movwf	indf2
  1610  000E04  6EDF               	goto	l862
  1611  000E06  EF05  F007         	line	22
  1612                           	
  1613                           l1505:; BSR set to: 0
  1614  000E0A                     
  1615                           	line	23
  1616                           ;	Return value of _sprintf is never used
  1617                           	
  1618                           l862:; BSR set to: 0
  1619  000E0A                     
  1620                           	return	;funcret
  1621  000E0A  0012               	opt stack 0
  1622                           GLOBAL	__end_of_sprintf
  1623                           	__end_of_sprintf:
  1624  000E0C                     	signat	_sprintf,4698
  1625                           	global	_vfprintf
  1626                           
  1627 ;; *************** function _vfprintf *****************
  1628 ;; Defined at:
  1629 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c"
  1630 ;; Parameters:    Size  Location     Type
  1631 ;;  fp              2   77[COMRAM] PTR struct _IO_FILE
  1632 ;;		 -> sprintf@f(6), 
  1633 ;;  fmt             2   79[COMRAM] PTR const unsigned char 
  1634 ;;		 -> STR_2(10), STR_1(8), 
  1635 ;;  ap              2   81[COMRAM] PTR PTR void 
  1636 ;;		 -> sprintf@ap(2), 
  1637 ;; Auto vars:     Size  Location     Type
  1638 ;;  cfmt            2   83[COMRAM] PTR unsigned char 
  1639 ;;		 -> STR_2(10), STR_1(8), 
  1640 ;; Return value:  Size  Location     Type
  1641 ;;                  2   77[COMRAM] int 
  1642 ;; Registers used:
  1643 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1644 ;; Tracked objects:
  1645 ;;		On entry : 0/0
  1646 ;;		On exit  : 0/0
  1647 ;;		Unchanged: 0/0
  1648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1649 ;;      Params:         6       0       0       0
  1650 ;;      Locals:         2       0       0       0
  1651 ;;      Temps:          0       0       0       0
  1652 ;;      Totals:         8       0       0       0
  1653 ;;Total ram usage:        8 bytes
  1654 ;; Hardware stack levels used:    1
  1655 ;; Hardware stack levels required when called:    6
  1656 ;; This function calls:
  1657 ;;		_vfpfcnvrt
  1658 ;; This function is called by:
  1659 ;;		_sprintf
  1660 ;; This function uses a non-reentrant model
  1661 ;;
  1662                           psect	text3,class=CODE,space=0,reloc=2,group=0
  1663                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c"
  1664                           	line	1368
  1665                           global __ptext3
  1666                           __ptext3:
  1667  000D48                     psect	text3
  1668                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c"
  1669                           	line	1368
  1670                           	global	__size_of_vfprintf
  1671                           	__size_of_vfprintf	equ	__end_of_vfprintf-_vfprintf
  1672  0000                     	
  1673                           _vfprintf:; BSR set to: 0
  1674  000D48                     
  1675                           ;incstack = 0
  1676                           	opt	stack 23
  1677                           	line	1373
  1678                           	
  1679                           l1415:
  1680  000D48                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1368: int v
                                 fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.0
                                 0\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.00\pi
                                 c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
                                 8\v2.00\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  1681                           		movff	(c:vfprintf@fmt),(c:vfprintf@cfmt)
  1682  000D48  C050  F054         	movff	(c:vfprintf@fmt+1),(c:vfprintf@cfmt+1)
  1683  000D4C  C051  F055         
  1684                           	line	1374
  1685                           	
  1686                           l1417:
  1687  000D50                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1374:     n
                                 out = 0;
  1688                           	movlw	high(0)
  1689  000D50  0E00               	movlb	0	; () banked
  1690  000D52  0100               	movwf	((_nout+1))&0ffh
  1691  000D54  6F61               	movlw	low(0)
  1692  000D56  0E00               	movwf	((_nout))&0ffh
  1693  000D58  6F60               	line	1375
  1694                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1375:     w
                                 hile (*cfmt) {
  1695                           	goto	l1421
  1696  000D5A  EFC4  F006         	
  1697                           l159:; BSR set to: 0
  1698  000D5E                     
  1699                           	line	1376
  1700                           	
  1701                           l1419:; BSR set to: 0
  1702  000D5E                     
  1703                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1376:      
                                    nout += vfpfcnvrt(fp, &cfmt, ap);
  1704                           		movff	(c:vfprintf@fp),(c:vfpfcnvrt@fp)
  1705  000D5E  C04E  F03C         	movff	(c:vfprintf@fp+1),(c:vfpfcnvrt@fp+1)
  1706  000D62  C04F  F03D         
  1707                           		movlw	low(vfprintf@cfmt)
  1708  000D66  0E54               	movwf	((c:vfpfcnvrt@fmt)),c
  1709  000D68  6E3E               	movlw	high(vfprintf@cfmt)
  1710  000D6A  0E00               	movwf	((c:vfpfcnvrt@fmt+1)),c
  1711  000D6C  6E3F               
  1712                           		movff	(c:vfprintf@ap),(c:vfpfcnvrt@ap)
  1713  000D6E  C052  F040         	movff	(c:vfprintf@ap+1),(c:vfpfcnvrt@ap+1)
  1714  000D72  C053  F041         
  1715                           	call	_vfpfcnvrt	;wreg free
  1716  000D76  EC9C  F002         	movf	(0+?_vfpfcnvrt),c,w
  1717  000D7A  503C               	movlb	0	; () banked
  1718  000D7C  0100               	addwf	((_nout))&0ffh
  1719  000D7E  2760               	movf	(1+?_vfpfcnvrt),c,w
  1720  000D80  503D               	addwfc	((_nout+1))&0ffh
  1721  000D82  2361               
  1722                           	goto	l1421
  1723  000D84  EFC4  F006         	line	1377
  1724                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1377:     }
                                 
  1725                           	
  1726                           l158:; BSR set to: 0
  1727  000D88                     
  1728                           	line	1375
  1729                           	
  1730                           l1421:; BSR set to: 0
  1731  000D88                     
  1732                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1375:     w
                                 hile (*cfmt) {
  1733                           	movff	(c:vfprintf@cfmt),tblptrl
  1734  000D88  C054  FFF6         	movff	(c:vfprintf@cfmt+1),tblptrh
  1735  000D8C  C055  FFF7         	if	0	;tblptru may be non-zero
  1736  000D90                     	clrf	tblptru
  1738  000D90                     	if	0	;tblptru may be non-zero
  1739  000D90                     	global __mediumconst
  1740                           movlw	low highword(__mediumconst)
  1743  000D90                     	tblrd	*
  1744  000D90  0008               	
  1745                           	movf	tablat,w
  1746  000D92  50F5               	iorlw	0
  1747  000D94  0900               	btfss	status,2
  1748  000D96  A4D8               	goto	u751
  1749  000D98  EFD0  F006         	goto	u750
  1750  000D9C  EFD2  F006         u751:
  1751  000DA0                     	goto	l1419
  1752  000DA0  EFAF  F006         u750:
  1753  000DA4                     	
  1754                           l160:; BSR set to: 0
  1755  000DA4                     
  1756                           	line	1378
  1757                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1378:     r
                                 eturn nout;
  1758                           	movff	(_nout),(c:?_vfprintf)
  1759  000DA4  C060  F04E         	movff	(_nout+1),(c:?_vfprintf+1)
  1760  000DA8  C061  F04F         	line	1382
  1761                           	
  1762                           l161:; BSR set to: 0
  1763  000DAC                     
  1764                           	return	;funcret
  1765  000DAC  0012               	opt stack 0
  1766                           GLOBAL	__end_of_vfprintf
  1767                           	__end_of_vfprintf:
  1768  000DAE                     	signat	_vfprintf,12410
  1769                           	global	_vfpfcnvrt
  1770                           
  1771 ;; *************** function _vfpfcnvrt *****************
  1772 ;; Defined at:
  1773 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c"
  1774 ;; Parameters:    Size  Location     Type
  1775 ;;  fp              2   59[COMRAM] PTR struct _IO_FILE
  1776 ;;		 -> sprintf@f(6), 
  1777 ;;  fmt             2   61[COMRAM] PTR PTR unsigned char 
  1778 ;;		 -> vfprintf@cfmt(2), 
  1779 ;;  ap              2   63[COMRAM] PTR PTR void 
  1780 ;;		 -> sprintf@ap(2), 
  1781 ;; Auto vars:     Size  Location     Type
  1782 ;;  llu             8   69[COMRAM] unsigned long long 
  1783 ;;  ll              8    0        long long 
  1784 ;;  f               4    0        long long 
  1785 ;;  vp              3    0        PTR void 
  1786 ;;  ct              3    0        unsigned char [3]
  1787 ;;  cp              3    0        PTR unsigned char 
  1788 ;;  i               2    0        int 
  1789 ;;  done            2    0        int 
  1790 ;;  c               1    0        unsigned char 
  1791 ;; Return value:  Size  Location     Type
  1792 ;;                  2   59[COMRAM] int 
  1793 ;; Registers used:
  1794 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1795 ;; Tracked objects:
  1796 ;;		On entry : 0/0
  1797 ;;		On exit  : 0/0
  1798 ;;		Unchanged: 0/0
  1799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1800 ;;      Params:         6       0       0       0
  1801 ;;      Locals:         8       0       0       0
  1802 ;;      Temps:          4       0       0       0
  1803 ;;      Totals:        18       0       0       0
  1804 ;;Total ram usage:       18 bytes
  1805 ;; Hardware stack levels used:    1
  1806 ;; Hardware stack levels required when called:    5
  1807 ;; This function calls:
  1808 ;;		_fputc
  1809 ;;		_utoa
  1810 ;; This function is called by:
  1811 ;;		_vfprintf
  1812 ;; This function uses a non-reentrant model
  1813 ;;
  1814                           psect	text4,class=CODE,space=0,reloc=2,group=0
  1815                           	line	670
  1816                           global __ptext4
  1817                           __ptext4:
  1818  000538                     psect	text4
  1819                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c"
  1820                           	line	670
  1821                           	global	__size_of_vfpfcnvrt
  1822                           	__size_of_vfpfcnvrt	equ	__end_of_vfpfcnvrt-_vfpfcnvrt
  1823  0000                     	
  1824                           _vfpfcnvrt:; BSR set to: 0
  1825  000538                     
  1826                           ;incstack = 0
  1827                           	opt	stack 23
  1828                           	line	680
  1829                           	
  1830                           l1369:
  1831  000538                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 670: static
                                  int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
                                 2.00\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.00\
                                 pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
                                 rochip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
                                  (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  1832                           	movff	(c:vfpfcnvrt@fmt),fsr2l
  1833  000538  C03E  FFD9         	movff	(c:vfpfcnvrt@fmt+1),fsr2h
  1834  00053C  C03F  FFDA         	movff	postinc2,tblptrl
  1835  000540  CFDE FFF6          	movff	postdec2,tblptrh
  1836  000544  CFDD FFF7          	if	0	;tblptru may be non-zero
  1837  000548                     	clrf	tblptru
  1839  000548                     	if	0	;tblptru may be non-zero
  1840  000548                     	global __mediumconst
  1841                           movlw	low highword(__mediumconst)
  1844  000548                     	tblrd	*
  1845  000548  0008               	
  1846                           	movf	tablat,w
  1847  00054A  50F5               	xorlw	025h
  1848  00054C  0A25               	btfss	status,2
  1849  00054E  A4D8               	goto	u711
  1850  000550  EFAC  F002         	goto	u710
  1851  000554  EFAE  F002         u711:
  1852  000558                     	goto	l1401
  1853  000558  EF4F  F003         u710:
  1854  00055C                     	line	681
  1855                           	
  1856                           l1371:
  1857  00055C                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 681:       
                                   ++*fmt;
  1858                           	movff	(c:vfpfcnvrt@fmt),fsr2l
  1859  00055C  C03E  FFD9         	movff	(c:vfpfcnvrt@fmt+1),fsr2h
  1860  000560  C03F  FFDA         	incf	postinc2
  1861  000564  2ADE               	movlw	0
  1862  000566  0E00               	addwfc	postdec2
  1863  000568  22DD               	line	683
  1864                           	
  1865                           l1373:
  1866  00056A                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 683:       
                                   flags = width = 0;
  1867                           	movlw	high(0)
  1868  00056A  0E00               	movlb	0	; () banked
  1869  00056C  0100               	movwf	((_width+1))&0ffh
  1870  00056E  6F63               	movlw	low(0)
  1871  000570  0E00               	movwf	((_width))&0ffh
  1872  000572  6F62               	movff	(_width),(c:_flags)
  1873  000574  C062  F05E         	movff	(_width+1),(c:_flags+1)
  1874  000578  C063  F05F         	line	684
  1875                           	
  1876                           l1375:; BSR set to: 0
  1877  00057C                     
  1878                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 684:       
                                   prec = -1;
  1879                           	setf	((_prec))&0ffh
  1880  00057C  6964               	setf	((_prec+1))&0ffh
  1881  00057E  6965               	line	1182
  1882                           	
  1883                           l1377:; BSR set to: 0
  1884  000580                     
  1885                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1182:      
                                    if (*fmt[0] == 'u') {
  1886                           	movff	(c:vfpfcnvrt@fmt),fsr2l
  1887  000580  C03E  FFD9         	movff	(c:vfpfcnvrt@fmt+1),fsr2h
  1888  000584  C03F  FFDA         	movff	postinc2,tblptrl
  1889  000588  CFDE FFF6          	movff	postdec2,tblptrh
  1890  00058C  CFDD FFF7          	if	0	;tblptru may be non-zero
  1891  000590                     	clrf	tblptru
  1893  000590                     	if	0	;tblptru may be non-zero
  1894  000590                     	global __mediumconst
  1895                           movlw	low highword(__mediumconst)
  1898  000590                     	tblrd	*
  1899  000590  0008               	
  1900                           	movf	tablat,w
  1901  000592  50F5               	xorlw	075h
  1902  000594  0A75               	btfss	status,2
  1903  000596  A4D8               	goto	u721
  1904  000598  EFD0  F002         	goto	u720
  1905  00059C  EFD2  F002         u721:
  1906  0005A0                     	goto	l1385
  1907  0005A0  EF15  F003         u720:
  1908  0005A4                     	line	1184
  1909                           	
  1910                           l1379:; BSR set to: 0
  1911  0005A4                     
  1912                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1184:      
                                        ++*fmt;
  1913                           	movff	(c:vfpfcnvrt@fmt),fsr2l
  1914  0005A4  C03E  FFD9         	movff	(c:vfpfcnvrt@fmt+1),fsr2h
  1915  0005A8  C03F  FFDA         	incf	postinc2
  1916  0005AC  2ADE               	movlw	0
  1917  0005AE  0E00               	addwfc	postdec2
  1918  0005B0  22DD               	line	1185
  1919                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1185:      
                                        llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
                                 ned int)0));
  1920                           	movff	(c:vfpfcnvrt@ap),fsr2l
  1921  0005B2  C040  FFD9         	movff	(c:vfpfcnvrt@ap+1),fsr2h
  1922  0005B6  C041  FFDA         	movff	indf2,??_vfpfcnvrt+0+0
  1923  0005BA  CFDF F042          	movlw	low(02h)
  1924  0005BE  0E02               	addwf	postinc2
  1925  0005C0  26DE               	movff	indf2,??_vfpfcnvrt+0+0+1
  1926  0005C2  CFDF F043          	movlw	high(02h)
  1927  0005C6  0E00               	addwfc	postdec2
  1928  0005C8  22DD               	movff	??_vfpfcnvrt+0+0,fsr2l
  1929  0005CA  C042  FFD9         	movff	??_vfpfcnvrt+0+1,fsr2h
  1930  0005CE  C043  FFDA         	movff	postinc2,??_vfpfcnvrt+2+0
  1931  0005D2  CFDE F044          	movff	postdec2,??_vfpfcnvrt+2+0+1
  1932  0005D6  CFDD F045          	movff	??_vfpfcnvrt+2+0,(c:vfpfcnvrt@llu)
  1933  0005DA  C044  F046         	movff	??_vfpfcnvrt+2+1,(c:vfpfcnvrt@llu+1)
  1934  0005DE  C045  F047         	clrf	((c:vfpfcnvrt@llu+2)),c
  1935  0005E2  6A48               	clrf	((c:vfpfcnvrt@llu+3)),c
  1936  0005E4  6A49               	clrf	((c:vfpfcnvrt@llu+4)),c
  1937  0005E6  6A4A               	clrf	((c:vfpfcnvrt@llu+5)),c
  1938  0005E8  6A4B               	clrf	((c:vfpfcnvrt@llu+6)),c
  1939  0005EA  6A4C               	clrf	((c:vfpfcnvrt@llu+7)),c
  1940  0005EC  6A4D               
  1941                           	line	1187
  1942                           	
  1943                           l1381:; BSR set to: 0
  1944  0005EE                     
  1945                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1187:      
                                        return utoa(fp, llu);
  1946                           		movff	(c:vfpfcnvrt@fp),(c:utoa@fp)
  1947  0005EE  C03C  F01C         	movff	(c:vfpfcnvrt@fp+1),(c:utoa@fp+1)
  1948  0005F2  C03D  F01D         
  1949                           	movff	(c:vfpfcnvrt@llu),(c:utoa@d)
  1950  0005F6  C046  F01E         	movff	(c:vfpfcnvrt@llu+1),(c:utoa@d+1)
  1951  0005FA  C047  F01F         	movff	(c:vfpfcnvrt@llu+2),(c:utoa@d+2)
  1952  0005FE  C048  F020         	movff	(c:vfpfcnvrt@llu+3),(c:utoa@d+3)
  1953  000602  C049  F021         	movff	(c:vfpfcnvrt@llu+4),(c:utoa@d+4)
  1954  000606  C04A  F022         	movff	(c:vfpfcnvrt@llu+5),(c:utoa@d+5)
  1955  00060A  C04B  F023         	movff	(c:vfpfcnvrt@llu+6),(c:utoa@d+6)
  1956  00060E  C04C  F024         	movff	(c:vfpfcnvrt@llu+7),(c:utoa@d+7)
  1957  000612  C04D  F025         	call	_utoa	;wreg free
  1958  000616  EC8A  F001         	movff	0+?_utoa,(c:?_vfpfcnvrt)
  1959  00061A  C01C  F03C         	movff	1+?_utoa,(c:?_vfpfcnvrt+1)
  1960  00061E  C01D  F03D         	goto	l154
  1961  000622  EF6E  F003         	
  1962                           l1383:
  1963  000626                     	goto	l154
  1964  000626  EF6E  F003         	line	1188
  1965                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1188:      
                                    }
  1966                           	
  1967                           l153:
  1968  00062A                     	line	1350
  1969                           	
  1970                           l1385:
  1971  00062A                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1350:      
                                    if ((*fmt)[0] == '%') {
  1972                           	movff	(c:vfpfcnvrt@fmt),fsr2l
  1973  00062A  C03E  FFD9         	movff	(c:vfpfcnvrt@fmt+1),fsr2h
  1974  00062E  C03F  FFDA         	movff	postinc2,tblptrl
  1975  000632  CFDE FFF6          	movff	postdec2,tblptrh
  1976  000636  CFDD FFF7          	if	0	;tblptru may be non-zero
  1977  00063A                     	clrf	tblptru
  1979  00063A                     	if	0	;tblptru may be non-zero
  1980  00063A                     	global __mediumconst
  1981                           movlw	low highword(__mediumconst)
  1984  00063A                     	tblrd	*
  1985  00063A  0008               	
  1986                           	movf	tablat,w
  1987  00063C  50F5               	xorlw	025h
  1988  00063E  0A25               	btfss	status,2
  1989  000640  A4D8               	goto	u731
  1990  000642  EF25  F003         	goto	u730
  1991  000646  EF27  F003         u731:
  1992  00064A                     	goto	l1395
  1993  00064A  EF40  F003         u730:
  1994  00064E                     	line	1351
  1995                           	
  1996                           l1387:
  1997  00064E                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1351:      
                                        ++*fmt;
  1998                           	movff	(c:vfpfcnvrt@fmt),fsr2l
  1999  00064E  C03E  FFD9         	movff	(c:vfpfcnvrt@fmt+1),fsr2h
  2000  000652  C03F  FFDA         	incf	postinc2
  2001  000656  2ADE               	movlw	0
  2002  000658  0E00               	addwfc	postdec2
  2003  00065A  22DD               	line	1352
  2004                           	
  2005                           l1389:
  2006  00065C                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1352:      
                                        fputc((int)'%', fp);
  2007                           	movlw	high(025h)
  2008  00065C  0E00               	movwf	((c:fputc@c+1)),c
  2009  00065E  6E02               	movlw	low(025h)
  2010  000660  0E25               	movwf	((c:fputc@c)),c
  2011  000662  6E01               		movff	(c:vfpfcnvrt@fp),(c:fputc@fp)
  2012  000664  C03C  F003         	movff	(c:vfpfcnvrt@fp+1),(c:fputc@fp+1)
  2013  000668  C03D  F004         
  2014                           	call	_fputc	;wreg free
  2015  00066C  ECF1  F004         	line	1353
  2016                           	
  2017                           l1391:
  2018  000670                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1353:      
                                        return 1;
  2019                           	movlw	high(01h)
  2020  000670  0E00               	movwf	((c:?_vfpfcnvrt+1)),c
  2021  000672  6E3D               	movlw	low(01h)
  2022  000674  0E01               	movwf	((c:?_vfpfcnvrt)),c
  2023  000676  6E3C               	goto	l154
  2024  000678  EF6E  F003         	
  2025                           l1393:
  2026  00067C                     	goto	l154
  2027  00067C  EF6E  F003         	line	1354
  2028                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1354:      
                                    }
  2029                           	
  2030                           l155:
  2031  000680                     	line	1357
  2032                           	
  2033                           l1395:
  2034  000680                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1357:      
                                    ++*fmt;
  2035                           	movff	(c:vfpfcnvrt@fmt),fsr2l
  2036  000680  C03E  FFD9         	movff	(c:vfpfcnvrt@fmt+1),fsr2h
  2037  000684  C03F  FFDA         	incf	postinc2
  2038  000688  2ADE               	movlw	0
  2039  00068A  0E00               	addwfc	postdec2
  2040  00068C  22DD               	line	1358
  2041                           	
  2042                           l1397:
  2043  00068E                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1358:      
                                    return 0;
  2044                           	movlw	high(0)
  2045  00068E  0E00               	movwf	((c:?_vfpfcnvrt+1)),c
  2046  000690  6E3D               	movlw	low(0)
  2047  000692  0E00               	movwf	((c:?_vfpfcnvrt)),c
  2048  000694  6E3C               	goto	l154
  2049  000696  EF6E  F003         	
  2050                           l1399:
  2051  00069A                     	goto	l154
  2052  00069A  EF6E  F003         	line	1359
  2053                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1359:     }
                                 
  2054                           	
  2055                           l152:
  2056  00069E                     	line	1362
  2057                           	
  2058                           l1401:
  2059  00069E                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1362:     f
                                 putc((int)(*fmt)[0], fp);
  2060                           	movff	(c:vfpfcnvrt@fmt),fsr2l
  2061  00069E  C03E  FFD9         	movff	(c:vfpfcnvrt@fmt+1),fsr2h
  2062  0006A2  C03F  FFDA         	movff	postinc2,tblptrl
  2063  0006A6  CFDE FFF6          	movff	postdec2,tblptrh
  2064  0006AA  CFDD FFF7          	if	0	;tblptru may be non-zero
  2065  0006AE                     	clrf	tblptru
  2067  0006AE                     	if	0	;tblptru may be non-zero
  2068  0006AE                     	global __mediumconst
  2069                           movlw	low highword(__mediumconst)
  2072  0006AE                     	tblrd	*
  2073  0006AE  0008               	
  2074                           	movf	tablat,w
  2075  0006B0  50F5               
  2076                           	movwf	((c:fputc@c)),c
  2077  0006B2  6E01               	clrf	((c:fputc@c+1)),c
  2078  0006B4  6A02               		movff	(c:vfpfcnvrt@fp),(c:fputc@fp)
  2079  0006B6  C03C  F003         	movff	(c:vfpfcnvrt@fp+1),(c:fputc@fp+1)
  2080  0006BA  C03D  F004         
  2081                           	call	_fputc	;wreg free
  2082  0006BE  ECF1  F004         	line	1363
  2083                           	
  2084                           l1403:
  2085  0006C2                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1363:     +
                                 +*fmt;
  2086                           	movff	(c:vfpfcnvrt@fmt),fsr2l
  2087  0006C2  C03E  FFD9         	movff	(c:vfpfcnvrt@fmt+1),fsr2h
  2088  0006C6  C03F  FFDA         	incf	postinc2
  2089  0006CA  2ADE               	movlw	0
  2090  0006CC  0E00               	addwfc	postdec2
  2091  0006CE  22DD               	line	1364
  2092                           	
  2093                           l1405:
  2094  0006D0                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1364:     r
                                 eturn 1;
  2095                           	movlw	high(01h)
  2096  0006D0  0E00               	movwf	((c:?_vfpfcnvrt+1)),c
  2097  0006D2  6E3D               	movlw	low(01h)
  2098  0006D4  0E01               	movwf	((c:?_vfpfcnvrt)),c
  2099  0006D6  6E3C               	goto	l154
  2100  0006D8  EF6E  F003         	
  2101                           l1407:
  2102  0006DC                     	line	1365
  2103                           	
  2104                           l154:
  2105  0006DC                     	return	;funcret
  2106  0006DC  0012               	opt stack 0
  2107                           GLOBAL	__end_of_vfpfcnvrt
  2108                           	__end_of_vfpfcnvrt:
  2109  0006DE                     	signat	_vfpfcnvrt,12410
  2110                           	global	_utoa
  2111                           
  2112 ;; *************** function _utoa *****************
  2113 ;; Defined at:
  2114 ;;		line 593 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c"
  2115 ;; Parameters:    Size  Location     Type
  2116 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  2117 ;;		 -> sprintf@f(6), 
  2118 ;;  d               8   29[COMRAM] unsigned long long 
  2119 ;; Auto vars:     Size  Location     Type
  2120 ;;  n               8   49[COMRAM] unsigned long long 
  2121 ;;  i               2   57[COMRAM] int 
  2122 ;;  w               2   47[COMRAM] int 
  2123 ;;  p               2   45[COMRAM] int 
  2124 ;; Return value:  Size  Location     Type
  2125 ;;                  2   27[COMRAM] int 
  2126 ;; Registers used:
  2127 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2128 ;; Tracked objects:
  2129 ;;		On entry : 0/0
  2130 ;;		On exit  : 0/0
  2131 ;;		Unchanged: 0/0
  2132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2133 ;;      Params:        10       0       0       0
  2134 ;;      Locals:        14       0       0       0
  2135 ;;      Temps:          8       0       0       0
  2136 ;;      Totals:        32       0       0       0
  2137 ;;Total ram usage:       32 bytes
  2138 ;; Hardware stack levels used:    1
  2139 ;; Hardware stack levels required when called:    4
  2140 ;; This function calls:
  2141 ;;		___lodiv
  2142 ;;		___lomod
  2143 ;;		_pad
  2144 ;; This function is called by:
  2145 ;;		_vfpfcnvrt
  2146 ;; This function uses a non-reentrant model
  2147 ;;
  2148                           psect	text5,class=CODE,space=0,reloc=2,group=0
  2149                           	line	593
  2150                           global __ptext5
  2151                           __ptext5:
  2152  000314                     psect	text5
  2153                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c"
  2154                           	line	593
  2155                           	global	__size_of_utoa
  2156                           	__size_of_utoa	equ	__end_of_utoa-_utoa
  2157  0000                     	
  2158                           _utoa:
  2159  000314                     ;incstack = 0
  2160                           	opt	stack 23
  2161                           	line	599
  2162                           	
  2163                           l1313:
  2164  000314                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 593: static
                                  int utoa(FILE *fp, unsigned long long d);C:\Program Files (x86)\Microchip\xc8\v2.00\pic
                                 \sources\c99\common\doprnt.c: 594: {;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sour
                                 ces\c99\common\doprnt.c: 595:     int i, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.0
                                 0\pic\sources\c99\common\doprnt.c: 596:     unsigned long long n;;C:\Program Files (x86)
                                 \Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 599:     if (!(prec < 0)) {
  2165                           	movlb	0	; () banked
  2166  000314  0100               	btfsc	((_prec+1))&0ffh,7
  2167  000316  BF65               	goto	u601
  2168  000318  EF90  F001         	goto	u600
  2169  00031C  EF92  F001         
  2170                           u601:
  2171  000320                     	goto	l1317
  2172  000320  EF95  F001         u600:
  2173  000324                     	line	600
  2174                           	
  2175                           l1315:; BSR set to: 0
  2176  000324                     
  2177                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 600:       
                                   flags &= ~(1 << 1);
  2178                           	bcf	(0+(1/8)+(c:_flags)),c,(1)&7
  2179  000324  925E               	goto	l1317
  2180  000326  EF95  F001         	line	601
  2181                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 601:     }

  2182                           	
  2183                           l137:; BSR set to: 0
  2184  00032A                     
  2185                           	line	602
  2186                           	
  2187                           l1317:; BSR set to: 0
  2188  00032A                     
  2189                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 602:     p 
                                 = (0 < prec) ? prec : 1;
  2190                           	btfsc	((_prec+1))&0ffh,7
  2191  00032A  BF65               	goto	u610
  2192  00032C  EFA2  F001         	movf	((_prec+1))&0ffh,w
  2193  000330  5165               	bnz	u611
  2194  000332  E106               	decf	((_prec))&0ffh,w
  2195  000334  0564               	btfsc	status,0
  2196  000336  B0D8               	goto	u611
  2197  000338  EFA0  F001         	goto	u610
  2198  00033C  EFA2  F001         
  2199                           u611:
  2200  000340                     	goto	l139
  2201  000340  EFA8  F001         u610:
  2202  000344                     	
  2203                           l1319:; BSR set to: 0
  2204  000344                     
  2205                           	movlw	high(01h)
  2206  000344  0E00               	movwf	((c:utoa@p+1)),c
  2207  000346  6E2F               	movlw	low(01h)
  2208  000348  0E01               	movwf	((c:utoa@p)),c
  2209  00034A  6E2E               	goto	l141
  2210  00034C  EFAC  F001         	
  2211                           l139:; BSR set to: 0
  2212  000350                     
  2213                           	movff	(_prec),(c:utoa@p)
  2214  000350  C064  F02E         	movff	(_prec+1),(c:utoa@p+1)
  2215  000354  C065  F02F         	
  2216                           l141:; BSR set to: 0
  2217  000358                     
  2218                           	line	603
  2219                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 603:     w 
                                 = width;
  2220                           	movff	(_width),(c:utoa@w)
  2221  000358  C062  F030         	movff	(_width+1),(c:utoa@w+1)
  2222  00035C  C063  F031         	line	606
  2223                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 606:     n 
                                 = d;
  2224                           	movff	(c:utoa@d),(c:utoa@n)
  2225  000360  C01E  F032         	movff	(c:utoa@d+1),(c:utoa@n+1)
  2226  000364  C01F  F033         	movff	(c:utoa@d+2),(c:utoa@n+2)
  2227  000368  C020  F034         	movff	(c:utoa@d+3),(c:utoa@n+3)
  2228  00036C  C021  F035         	movff	(c:utoa@d+4),(c:utoa@n+4)
  2229  000370  C022  F036         	movff	(c:utoa@d+5),(c:utoa@n+5)
  2230  000374  C023  F037         	movff	(c:utoa@d+6),(c:utoa@n+6)
  2231  000378  C024  F038         	movff	(c:utoa@d+7),(c:utoa@n+7)
  2232  00037C  C025  F039         	line	607
  2233                           	
  2234                           l1321:; BSR set to: 0
  2235  000380                     
  2236                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 607:     i 
                                 = sizeof(dbuf) - 1;
  2237                           	movlw	high(01Fh)
  2238  000380  0E00               	movwf	((c:utoa@i+1)),c
  2239  000382  6E3B               	movlw	low(01Fh)
  2240  000384  0E1F               	movwf	((c:utoa@i)),c
  2241  000386  6E3A               	line	608
  2242                           	
  2243                           l1323:; BSR set to: 0
  2244  000388                     
  2245                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 608:     db
                                 uf[i] = '\0';
  2246                           	movlw	low(_dbuf)
  2247  000388  0E66               	addwf	((c:utoa@i)),c,w
  2248  00038A  243A               	movwf	c:fsr2l
  2249  00038C  6ED9               	movlw	high(_dbuf)
  2250  00038E  0E00               	addwfc	((c:utoa@i+1)),c,w
  2251  000390  203B               	movwf	1+c:fsr2l
  2252  000392  6EDA               	movlw	low(0)
  2253  000394  0E00               	movwf	indf2
  2254  000396  6EDF               	line	609
  2255                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 609:     wh
                                 ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2256                           	goto	l1335
  2257  000398  EF46  F002         	
  2258                           l143:; BSR set to: 0
  2259  00039C                     
  2260                           	line	610
  2261                           	
  2262                           l1325:
  2263  00039C                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 610:       
                                   --i;
  2264                           	decf	((c:utoa@i)),c
  2265  00039C  063A               	btfss	status,0
  2266  00039E  A0D8               	decf	((c:utoa@i+1)),c
  2267  0003A0  063B               	line	611
  2268                           	
  2269                           l1327:
  2270  0003A2                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 611:       
                                   dbuf[i] = '0' + (n % 10);
  2271                           	movlw	low(_dbuf)
  2272  0003A2  0E66               	addwf	((c:utoa@i)),c,w
  2273  0003A4  243A               	movwf	c:fsr2l
  2274  0003A6  6ED9               	movlw	high(_dbuf)
  2275  0003A8  0E00               	addwfc	((c:utoa@i+1)),c,w
  2276  0003AA  203B               	movwf	1+c:fsr2l
  2277  0003AC  6EDA               	movff	(c:utoa@n),(c:___lomod@dividend)
  2278  0003AE  C032  F001         	movff	(c:utoa@n+1),(c:___lomod@dividend+1)
  2279  0003B2  C033  F002         	movff	(c:utoa@n+2),(c:___lomod@dividend+2)
  2280  0003B6  C034  F003         	movff	(c:utoa@n+3),(c:___lomod@dividend+3)
  2281  0003BA  C035  F004         	movff	(c:utoa@n+4),(c:___lomod@dividend+4)
  2282  0003BE  C036  F005         	movff	(c:utoa@n+5),(c:___lomod@dividend+5)
  2283  0003C2  C037  F006         	movff	(c:utoa@n+6),(c:___lomod@dividend+6)
  2284  0003C6  C038  F007         	movff	(c:utoa@n+7),(c:___lomod@dividend+7)
  2285  0003CA  C039  F008         	movlw	byte0(0Ah)
  2286  0003CE  0E0A               	movwf	((c:___lomod@divisor)),c
  2287  0003D0  6E09               	movlw	byte1(0Ah)
  2288  0003D2  0E00               	movwf	((c:___lomod@divisor+1)),c
  2289  0003D4  6E0A               	movlw	byte2(0Ah)
  2290  0003D6  0E00               	movwf	((c:___lomod@divisor+2)),c
  2291  0003D8  6E0B               	movlw	byte3(0Ah)
  2292  0003DA  0E00               	movwf	((c:___lomod@divisor+3)),c
  2293  0003DC  6E0C               	movlw	byte4(0Ah)
  2294  0003DE  0E00               	movwf	((c:___lomod@divisor+4)),c
  2295  0003E0  6E0D               	movlw	byte5(0Ah)
  2296  0003E2  0E00               	movwf	((c:___lomod@divisor+5)),c
  2297  0003E4  6E0E               	movlw	byte6(0Ah)
  2298  0003E6  0E00               	movwf	((c:___lomod@divisor+6)),c
  2299  0003E8  6E0F               	movlw	byte7(0Ah)
  2300  0003EA  0E00               	movwf	((c:___lomod@divisor+7)),c
  2301  0003EC  6E10               	call	___lomod	;wreg free
  2302  0003EE  EC7F  F004         	movff	0+?___lomod,??_utoa+0+0
  2303  0003F2  C001  F026         	movff	1+?___lomod,??_utoa+0+0+1
  2304  0003F6  C002  F027         	movff	2+?___lomod,??_utoa+0+0+2
  2305  0003FA  C003  F028         	movff	3+?___lomod,??_utoa+0+0+3
  2306  0003FE  C004  F029         	movff	4+?___lomod,??_utoa+0+0+4
  2307  000402  C005  F02A         	movff	5+?___lomod,??_utoa+0+0+5
  2308  000406  C006  F02B         	movff	6+?___lomod,??_utoa+0+0+6
  2309  00040A  C007  F02C         	movff	7+?___lomod,??_utoa+0+0+7
  2310  00040E  C008  F02D         	
  2311                           	movf	(??_utoa+0+0),c,w
  2312  000412  5026               	addlw	low(030h)
  2313  000414  0F30               	movwf	indf2,c
  2314  000416  6EDF               
  2315                           	line	612
  2316                           	
  2317                           l1329:
  2318  000418                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 612:       
                                   --p;
  2319                           	decf	((c:utoa@p)),c
  2320  000418  062E               	btfss	status,0
  2321  00041A  A0D8               	decf	((c:utoa@p+1)),c
  2322  00041C  062F               	line	613
  2323                           	
  2324                           l1331:
  2325  00041E                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 613:       
                                   --w;
  2326                           	decf	((c:utoa@w)),c
  2327  00041E  0630               	btfss	status,0
  2328  000420  A0D8               	decf	((c:utoa@w+1)),c
  2329  000422  0631               	line	614
  2330                           	
  2331                           l1333:
  2332  000424                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 614:       
                                   n = n / 10;
  2333                           	movff	(c:utoa@n),(c:___lodiv@dividend)
  2334  000424  C032  F001         	movff	(c:utoa@n+1),(c:___lodiv@dividend+1)
  2335  000428  C033  F002         	movff	(c:utoa@n+2),(c:___lodiv@dividend+2)
  2336  00042C  C034  F003         	movff	(c:utoa@n+3),(c:___lodiv@dividend+3)
  2337  000430  C035  F004         	movff	(c:utoa@n+4),(c:___lodiv@dividend+4)
  2338  000434  C036  F005         	movff	(c:utoa@n+5),(c:___lodiv@dividend+5)
  2339  000438  C037  F006         	movff	(c:utoa@n+6),(c:___lodiv@dividend+6)
  2340  00043C  C038  F007         	movff	(c:utoa@n+7),(c:___lodiv@dividend+7)
  2341  000440  C039  F008         	movlw	byte0(0Ah)
  2342  000444  0E0A               	movwf	((c:___lodiv@divisor)),c
  2343  000446  6E09               	movlw	byte1(0Ah)
  2344  000448  0E00               	movwf	((c:___lodiv@divisor+1)),c
  2345  00044A  6E0A               	movlw	byte2(0Ah)
  2346  00044C  0E00               	movwf	((c:___lodiv@divisor+2)),c
  2347  00044E  6E0B               	movlw	byte3(0Ah)
  2348  000450  0E00               	movwf	((c:___lodiv@divisor+3)),c
  2349  000452  6E0C               	movlw	byte4(0Ah)
  2350  000454  0E00               	movwf	((c:___lodiv@divisor+4)),c
  2351  000456  6E0D               	movlw	byte5(0Ah)
  2352  000458  0E00               	movwf	((c:___lodiv@divisor+5)),c
  2353  00045A  6E0E               	movlw	byte6(0Ah)
  2354  00045C  0E00               	movwf	((c:___lodiv@divisor+6)),c
  2355  00045E  6E0F               	movlw	byte7(0Ah)
  2356  000460  0E00               	movwf	((c:___lodiv@divisor+7)),c
  2357  000462  6E10               	call	___lodiv	;wreg free
  2358  000464  ECFD  F003         	movff	0+?___lodiv,(c:utoa@n)
  2359  000468  C001  F032         	movff	1+?___lodiv,(c:utoa@n+1)
  2360  00046C  C002  F033         	movff	2+?___lodiv,(c:utoa@n+2)
  2361  000470  C003  F034         	movff	3+?___lodiv,(c:utoa@n+3)
  2362  000474  C004  F035         	movff	4+?___lodiv,(c:utoa@n+4)
  2363  000478  C005  F036         	movff	5+?___lodiv,(c:utoa@n+5)
  2364  00047C  C006  F037         	movff	6+?___lodiv,(c:utoa@n+6)
  2365  000480  C007  F038         	movff	7+?___lodiv,(c:utoa@n+7)
  2366  000484  C008  F039         	
  2367                           	goto	l1335
  2368  000488  EF46  F002         	line	615
  2369                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 615:     }

  2370                           	
  2371                           l142:
  2372  00048C                     	line	609
  2373                           	
  2374                           l1335:
  2375  00048C                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 609:     wh
                                 ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2376                           	movf	((c:utoa@i)),c,w
  2377  00048C  503A               iorwf	((c:utoa@i+1)),c,w
  2378  00048E  103B               	btfsc	status,2
  2379  000490  B4D8               	goto	u621
  2380  000492  EF4D  F002         	goto	u620
  2381  000496  EF4F  F002         
  2382                           u621:
  2383  00049A                     	goto	l1345
  2384  00049A  EF85  F002         u620:
  2385  00049E                     	
  2386                           l1337:
  2387  00049E                     	movf	((c:utoa@n)),c,w
  2388  00049E  5032               iorwf	((c:utoa@n+1)),c,w
  2389  0004A0  1033               iorwf	((c:utoa@n+2)),c,w
  2390  0004A2  1034               iorwf	((c:utoa@n+3)),c,w
  2391  0004A4  1035               iorwf	((c:utoa@n+4)),c,w
  2392  0004A6  1036               iorwf	((c:utoa@n+5)),c,w
  2393  0004A8  1037               iorwf	((c:utoa@n+6)),c,w
  2394  0004AA  1038               iorwf	((c:utoa@n+7)),c,w
  2395  0004AC  1039               	btfss	status,2
  2396  0004AE  A4D8               	goto	u631
  2397  0004B0  EF5C  F002         	goto	u630
  2398  0004B4  EF5E  F002         
  2399                           u631:
  2400  0004B8                     	goto	l1325
  2401  0004B8  EFCE  F001         u630:
  2402  0004BC                     	
  2403                           l1339:
  2404  0004BC                     	btfsc	((c:utoa@p+1)),c,7
  2405  0004BC  BE2F               	goto	u640
  2406  0004BE  EF6B  F002         	movf	((c:utoa@p+1)),c,w
  2407  0004C2  502F               	bnz	u641
  2408  0004C4  E106               	decf	((c:utoa@p)),c,w
  2409  0004C6  042E               	btfsc	status,0
  2410  0004C8  B0D8               	goto	u641
  2411  0004CA  EF69  F002         	goto	u640
  2412  0004CE  EF6B  F002         
  2413                           u641:
  2414  0004D2                     	goto	l1325
  2415  0004D2  EFCE  F001         u640:
  2416  0004D6                     	
  2417                           l1341:
  2418  0004D6                     	btfsc	((c:utoa@w+1)),c,7
  2419  0004D6  BE31               	goto	u651
  2420  0004D8  EF76  F002         	movf	((c:utoa@w+1)),c,w
  2421  0004DC  5031               	bnz	u650
  2422  0004DE  E108               	decf	((c:utoa@w)),c,w
  2423  0004E0  0430               	btfss	status,0
  2424  0004E2  A0D8               	goto	u651
  2425  0004E4  EF76  F002         	goto	u650
  2426  0004E8  EF78  F002         
  2427                           u651:
  2428  0004EC                     	goto	l1345
  2429  0004EC  EF85  F002         u650:
  2430  0004F0                     	
  2431                           l1343:
  2432  0004F0                     	
  2433                           	btfsc	((c:_flags)),c,(1)&7
  2434  0004F0  B25E               	goto	u661
  2435  0004F2  EF7D  F002         	goto	u660
  2436  0004F6  EF7F  F002         u661:
  2437  0004FA                     	goto	l1325
  2438  0004FA  EFCE  F001         u660:
  2439  0004FE                     	goto	l1345
  2440  0004FE  EF85  F002         	
  2441                           l147:
  2442  000502                     	goto	l1345
  2443  000502  EF85  F002         	
  2444                           l145:
  2445  000506                     	goto	l1345
  2446  000506  EF85  F002         	
  2447                           l148:
  2448  00050A                     	line	618
  2449                           	
  2450                           l1345:
  2451  00050A                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 618:     re
                                 turn pad(fp, &dbuf[i], w);
  2452                           		movff	(c:utoa@fp),(c:pad@fp)
  2453  00050A  C01C  F011         	movff	(c:utoa@fp+1),(c:pad@fp+1)
  2454  00050E  C01D  F012         
  2455                           	movlw	low(_dbuf)
  2456  000512  0E66               	addwf	((c:utoa@i)),c,w
  2457  000514  243A               	movwf	((c:pad@buf)),c
  2458  000516  6E13               	movlw	high(_dbuf)
  2459  000518  0E00               	addwfc	((c:utoa@i+1)),c,w
  2460  00051A  203B               	movwf	1+((c:pad@buf)),c
  2461  00051C  6E14               	movff	(c:utoa@w),(c:pad@p)
  2462  00051E  C030  F015         	movff	(c:utoa@w+1),(c:pad@p+1)
  2463  000522  C031  F016         	call	_pad	;wreg free
  2464  000526  EC60  F005         	movff	0+?_pad,(c:?_utoa)
  2465  00052A  C011  F01C         	movff	1+?_pad,(c:?_utoa+1)
  2466  00052E  C012  F01D         	goto	l149
  2467  000532  EF9B  F002         	
  2468                           l1347:
  2469  000536                     	line	619
  2470                           	
  2471                           l149:
  2472  000536                     	return	;funcret
  2473  000536  0012               	opt stack 0
  2474                           GLOBAL	__end_of_utoa
  2475                           	__end_of_utoa:
  2476  000538                     	signat	_utoa,8314
  2477                           	global	_pad
  2478                           
  2479 ;; *************** function _pad *****************
  2480 ;; Defined at:
  2481 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c"
  2482 ;; Parameters:    Size  Location     Type
  2483 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  2484 ;;		 -> sprintf@f(6), 
  2485 ;;  buf             2   18[COMRAM] PTR unsigned char 
  2486 ;;		 -> dbuf(32), 
  2487 ;;  p               2   20[COMRAM] int 
  2488 ;; Auto vars:     Size  Location     Type
  2489 ;;  w               2   25[COMRAM] int 
  2490 ;;  i               2   23[COMRAM] int 
  2491 ;; Return value:  Size  Location     Type
  2492 ;;                  2   16[COMRAM] int 
  2493 ;; Registers used:
  2494 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2495 ;; Tracked objects:
  2496 ;;		On entry : 0/0
  2497 ;;		On exit  : 0/0
  2498 ;;		Unchanged: 0/0
  2499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2500 ;;      Params:         6       0       0       0
  2501 ;;      Locals:         4       0       0       0
  2502 ;;      Temps:          1       0       0       0
  2503 ;;      Totals:        11       0       0       0
  2504 ;;Total ram usage:       11 bytes
  2505 ;; Hardware stack levels used:    1
  2506 ;; Hardware stack levels required when called:    3
  2507 ;; This function calls:
  2508 ;;		_fputc
  2509 ;;		_fputs
  2510 ;;		_strlen
  2511 ;; This function is called by:
  2512 ;;		_utoa
  2513 ;; This function uses a non-reentrant model
  2514 ;;
  2515                           psect	text6,class=CODE,space=0,reloc=2,group=0
  2516                           	line	72
  2517                           global __ptext6
  2518                           __ptext6:
  2519  000AC0                     psect	text6
  2520                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c"
  2521                           	line	72
  2522                           	global	__size_of_pad
  2523                           	__size_of_pad	equ	__end_of_pad-_pad
  2524  0000                     	
  2525                           _pad:
  2526  000AC0                     ;incstack = 0
  2527                           	opt	stack 23
  2528                           	line	77
  2529                           	
  2530                           l1247:
  2531  000AC0                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 72: static 
                                 int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sourc
                                 es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99
                                 \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sourc
                                 es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  2532                           	
  2533                           	btfss	((c:_flags)),c,(0)&7
  2534  000AC0  A05E               	goto	u491
  2535  000AC2  EF65  F005         	goto	u490
  2536  000AC6  EF67  F005         u491:
  2537  000ACA                     	goto	l1251
  2538  000ACA  EF73  F005         u490:
  2539  000ACE                     	line	78
  2540                           	
  2541                           l1249:
  2542  000ACE                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 78:        
                                  fputs((const char *)buf, fp);
  2543                           		movff	(c:pad@buf),(c:fputs@s)
  2544  000ACE  C013  F00A         	movff	(c:pad@buf+1),(c:fputs@s+1)
  2545  000AD2  C014  F00B         
  2546                           		movff	(c:pad@fp),(c:fputs@fp)
  2547  000AD6  C011  F00C         	movff	(c:pad@fp+1),(c:fputs@fp+1)
  2548  000ADA  C012  F00D         
  2549                           	call	_fputs	;wreg free
  2550  000ADE  EC5A  F007         	goto	l1251
  2551  000AE2  EF73  F005         	line	79
  2552                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 79:     }
  2553                           	
  2554                           l125:
  2555  000AE6                     	line	82
  2556                           	
  2557                           l1251:
  2558  000AE6                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 82:     w =
                                  (p < 0) ? 0 : p;
  2559                           	btfsc	((c:pad@p+1)),c,7
  2560  000AE6  BE16               	goto	u501
  2561  000AE8  EF78  F005         	goto	u500
  2562  000AEC  EF7A  F005         
  2563                           u501:
  2564  000AF0                     	goto	l1255
  2565  000AF0  EF80  F005         u500:
  2566  000AF4                     	
  2567                           l1253:
  2568  000AF4                     	movff	(c:pad@p),(c:pad@w)
  2569  000AF4  C015  F01A         	movff	(c:pad@p+1),(c:pad@w+1)
  2570  000AF8  C016  F01B         	goto	l129
  2571  000AFC  EF84  F005         	
  2572                           l127:
  2573  000B00                     	
  2574                           l1255:
  2575  000B00                     	movlw	high(0)
  2576  000B00  0E00               	movwf	((c:pad@w+1)),c
  2577  000B02  6E1B               	movlw	low(0)
  2578  000B04  0E00               	movwf	((c:pad@w)),c
  2579  000B06  6E1A               	
  2580                           l129:
  2581  000B08                     	line	83
  2582                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 83:     i =
                                  0;
  2583                           	movlw	high(0)
  2584  000B08  0E00               	movwf	((c:pad@i+1)),c
  2585  000B0A  6E19               	movlw	low(0)
  2586  000B0C  0E00               	movwf	((c:pad@i)),c
  2587  000B0E  6E18               	line	84
  2588                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 84:     whi
                                 le (i < w) {
  2589                           	goto	l1261
  2590  000B10  EF98  F005         	
  2591                           l131:
  2592  000B14                     	line	85
  2593                           	
  2594                           l1257:
  2595  000B14                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 85:        
                                  fputc(' ', fp);
  2596                           	movlw	high(020h)
  2597  000B14  0E00               	movwf	((c:fputc@c+1)),c
  2598  000B16  6E02               	movlw	low(020h)
  2599  000B18  0E20               	movwf	((c:fputc@c)),c
  2600  000B1A  6E01               		movff	(c:pad@fp),(c:fputc@fp)
  2601  000B1C  C011  F003         	movff	(c:pad@fp+1),(c:fputc@fp+1)
  2602  000B20  C012  F004         
  2603                           	call	_fputc	;wreg free
  2604  000B24  ECF1  F004         	line	86
  2605                           	
  2606                           l1259:
  2607  000B28                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 86:        
                                  ++i;
  2608                           	infsnz	((c:pad@i)),c
  2609  000B28  4A18               	incf	((c:pad@i+1)),c
  2610  000B2A  2A19               	goto	l1261
  2611  000B2C  EF98  F005         	line	87
  2612                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 87:     }
  2613                           	
  2614                           l130:
  2615  000B30                     	line	84
  2616                           	
  2617                           l1261:
  2618  000B30                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 84:     whi
                                 le (i < w) {
  2619                           		movf	((c:pad@w)),c,w
  2620  000B30  501A               	subwf	((c:pad@i)),c,w
  2621  000B32  5C18               	movf	((c:pad@i+1)),c,w
  2622  000B34  5019               	xorlw	80h
  2623  000B36  0A80               	movwf	(??_pad+0+0)&0ffh,c
  2624  000B38  6E17               	movf	((c:pad@w+1)),c,w
  2625  000B3A  501B               	xorlw	80h
  2626  000B3C  0A80               	subwfb	(??_pad+0+0)&0ffh,c,w
  2627  000B3E  5817               	btfss	status,0
  2628  000B40  A0D8               	goto	u511
  2629  000B42  EFA5  F005         	goto	u510
  2630  000B46  EFA7  F005         
  2631                           u511:
  2632  000B4A                     	goto	l1257
  2633  000B4A  EF8A  F005         u510:
  2634  000B4E                     	
  2635                           l132:
  2636  000B4E                     	line	90
  2637                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 90:     if 
                                 (!(flags & (1 << 0))) {
  2638                           	
  2639                           	btfsc	((c:_flags)),c,(0)&7
  2640  000B4E  B05E               	goto	u521
  2641  000B50  EFAC  F005         	goto	u520
  2642  000B54  EFAE  F005         u521:
  2643  000B58                     	goto	l1265
  2644  000B58  EFBA  F005         u520:
  2645  000B5C                     	line	91
  2646                           	
  2647                           l1263:
  2648  000B5C                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 91:        
                                  fputs((const char *)buf, fp);
  2649                           		movff	(c:pad@buf),(c:fputs@s)
  2650  000B5C  C013  F00A         	movff	(c:pad@buf+1),(c:fputs@s+1)
  2651  000B60  C014  F00B         
  2652                           		movff	(c:pad@fp),(c:fputs@fp)
  2653  000B64  C011  F00C         	movff	(c:pad@fp+1),(c:fputs@fp+1)
  2654  000B68  C012  F00D         
  2655                           	call	_fputs	;wreg free
  2656  000B6C  EC5A  F007         	goto	l1265
  2657  000B70  EFBA  F005         	line	92
  2658                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 92:     }
  2659                           	
  2660                           l133:
  2661  000B74                     	line	94
  2662                           	
  2663                           l1265:
  2664  000B74                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 94:     ret
                                 urn strlen(buf) + w;
  2665                           		movff	(c:pad@buf),(c:strlen@s)
  2666  000B74  C013  F001         	movff	(c:pad@buf+1),(c:strlen@s+1)
  2667  000B78  C014  F002         
  2668                           	call	_strlen	;wreg free
  2669  000B7C  EC31  F007         	movf	((c:pad@w)),c,w
  2670  000B80  501A               	addwf	(0+?_strlen),c,w
  2671  000B82  2401               	movwf	((c:?_pad)),c
  2672  000B84  6E11               	movf	((c:pad@w+1)),c,w
  2673  000B86  501B               	addwfc	(1+?_strlen),c,w
  2674  000B88  2002               	movwf	1+((c:?_pad)),c
  2675  000B8A  6E12               	goto	l134
  2676  000B8C  EFC8  F005         	
  2677                           l1267:
  2678  000B90                     	line	95
  2679                           	
  2680                           l134:
  2681  000B90                     	return	;funcret
  2682  000B90  0012               	opt stack 0
  2683                           GLOBAL	__end_of_pad
  2684                           	__end_of_pad:
  2685  000B92                     	signat	_pad,12410
  2686                           	global	_strlen
  2687                           
  2688 ;; *************** function _strlen *****************
  2689 ;; Defined at:
  2690 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strlen.c"
  2691 ;; Parameters:    Size  Location     Type
  2692 ;;  s               2    0[COMRAM] PTR const unsigned char 
  2693 ;;		 -> dbuf(32), 
  2694 ;; Auto vars:     Size  Location     Type
  2695 ;;  a               2    4[COMRAM] PTR const unsigned char 
  2696 ;;		 -> dbuf(32), 
  2697 ;; Return value:  Size  Location     Type
  2698 ;;                  2    0[COMRAM] unsigned int 
  2699 ;; Registers used:
  2700 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2701 ;; Tracked objects:
  2702 ;;		On entry : 0/0
  2703 ;;		On exit  : 0/0
  2704 ;;		Unchanged: 0/0
  2705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2706 ;;      Params:         2       0       0       0
  2707 ;;      Locals:         2       0       0       0
  2708 ;;      Temps:          2       0       0       0
  2709 ;;      Totals:         6       0       0       0
  2710 ;;Total ram usage:        6 bytes
  2711 ;; Hardware stack levels used:    1
  2712 ;; This function calls:
  2713 ;;		Nothing
  2714 ;; This function is called by:
  2715 ;;		_pad
  2716 ;; This function uses a non-reentrant model
  2717 ;;
  2718                           psect	text7,class=CODE,space=0,reloc=2,group=2
  2719                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strlen.c"
  2720                           	line	12
  2721                           global __ptext7
  2722                           __ptext7:
  2723  000E62                     psect	text7
  2724                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strlen.c"
  2725                           	line	12
  2726                           	global	__size_of_strlen
  2727                           	__size_of_strlen	equ	__end_of_strlen-_strlen
  2728  0000                     	
  2729                           _strlen:
  2730  000E62                     ;incstack = 0
  2731                           	opt	stack 25
  2732                           	line	14
  2733                           	
  2734                           l1237:
  2735  000E62                     		movff	(c:strlen@s),(c:strlen@a)
  2736  000E62  C001  F005         	movff	(c:strlen@s+1),(c:strlen@a+1)
  2737  000E66  C002  F006         
  2738                           	line	16
  2739                           	goto	l1241
  2740  000E6A  EF3B  F007         	
  2741                           l869:
  2742  000E6E                     	line	17
  2743                           	
  2744                           l1239:
  2745  000E6E                     	infsnz	((c:strlen@s)),c
  2746  000E6E  4A01               	incf	((c:strlen@s+1)),c
  2747  000E70  2A02               	goto	l1241
  2748  000E72  EF3B  F007         	line	18
  2749                           	
  2750                           l868:
  2751  000E76                     	line	16
  2752                           	
  2753                           l1241:
  2754  000E76                     	movff	(c:strlen@s),fsr2l
  2755  000E76  C001  FFD9         	movff	(c:strlen@s+1),fsr2h
  2756  000E7A  C002  FFDA         	movf	indf2,w
  2757  000E7E  50DF               	btfss	status,2
  2758  000E80  A4D8               	goto	u481
  2759  000E82  EF45  F007         	goto	u480
  2760  000E86  EF47  F007         u481:
  2761  000E8A                     	goto	l1239
  2762  000E8A  EF37  F007         u480:
  2763  000E8E                     	goto	l1243
  2764  000E8E  EF49  F007         	
  2765                           l870:
  2766  000E92                     	line	25
  2767                           	
  2768                           l1243:
  2769  000E92                     	movff	(c:strlen@a),??_strlen+0+0
  2770  000E92  C005  F003         	movff	(c:strlen@a+1),??_strlen+0+0+1
  2771  000E96  C006  F004         	comf	(??_strlen+0+0),c
  2772  000E9A  1E03               	comf	(??_strlen+0+1),c
  2773  000E9C  1E04               	infsnz	(??_strlen+0+0),c
  2774  000E9E  4A03               	incf	(??_strlen+0+1),c
  2775  000EA0  2A04               	movf	((c:strlen@s)),c,w
  2776  000EA2  5001               	addwf	(??_strlen+0+0),c,w
  2777  000EA4  2403               	movwf	((c:?_strlen)),c
  2778  000EA6  6E01               	movf	((c:strlen@s+1)),c,w
  2779  000EA8  5002               	addwfc	(??_strlen+0+1),c,w
  2780  000EAA  2004               	movwf	1+((c:?_strlen)),c
  2781  000EAC  6E02               	goto	l871
  2782  000EAE  EF59  F007         	
  2783                           l1245:
  2784  000EB2                     	line	26
  2785                           	
  2786                           l871:
  2787  000EB2                     	return	;funcret
  2788  000EB2  0012               	opt stack 0
  2789                           GLOBAL	__end_of_strlen
  2790                           	__end_of_strlen:
  2791  000EB4                     	signat	_strlen,4218
  2792                           	global	_fputs
  2793                           
  2794 ;; *************** function _fputs *****************
  2795 ;; Defined at:
  2796 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\nf_fputs.c"
  2797 ;; Parameters:    Size  Location     Type
  2798 ;;  s               2    9[COMRAM] PTR const unsigned char 
  2799 ;;		 -> dbuf(32), 
  2800 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  2801 ;;		 -> sprintf@f(6), 
  2802 ;; Auto vars:     Size  Location     Type
  2803 ;;  i               2   14[COMRAM] int 
  2804 ;;  c               1   13[COMRAM] unsigned char 
  2805 ;; Return value:  Size  Location     Type
  2806 ;;                  2    9[COMRAM] int 
  2807 ;; Registers used:
  2808 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2809 ;; Tracked objects:
  2810 ;;		On entry : 0/0
  2811 ;;		On exit  : 0/0
  2812 ;;		Unchanged: 0/0
  2813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2814 ;;      Params:         4       0       0       0
  2815 ;;      Locals:         3       0       0       0
  2816 ;;      Temps:          0       0       0       0
  2817 ;;      Totals:         7       0       0       0
  2818 ;;Total ram usage:        7 bytes
  2819 ;; Hardware stack levels used:    1
  2820 ;; Hardware stack levels required when called:    2
  2821 ;; This function calls:
  2822 ;;		_fputc
  2823 ;; This function is called by:
  2824 ;;		_pad
  2825 ;; This function uses a non-reentrant model
  2826 ;;
  2827                           psect	text8,class=CODE,space=0,reloc=2,group=2
  2828                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\nf_fputs.c"
  2829                           	line	8
  2830                           global __ptext8
  2831                           __ptext8:
  2832  000EB4                     psect	text8
  2833                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\nf_fputs.c"
  2834                           	line	8
  2835                           	global	__size_of_fputs
  2836                           	__size_of_fputs	equ	__end_of_fputs-_fputs
  2837  0000                     	
  2838                           _fputs:
  2839  000EB4                     ;incstack = 0
  2840                           	opt	stack 23
  2841                           	line	13
  2842                           	
  2843                           l1229:
  2844  000EB4                     	movlw	high(0)
  2845  000EB4  0E00               	movwf	((c:fputs@i+1)),c
  2846  000EB6  6E10               	movlw	low(0)
  2847  000EB8  0E00               	movwf	((c:fputs@i)),c
  2848  000EBA  6E0F               	line	14
  2849                           	goto	l1235
  2850  000EBC  EF6D  F007         	
  2851                           l853:
  2852  000EC0                     	line	15
  2853                           	
  2854                           l1231:
  2855  000EC0                     	movff	(c:fputs@c),(c:fputc@c)
  2856  000EC0  C00E  F001         	clrf	((c:fputc@c+1)),c
  2857  000EC4  6A02               		movff	(c:fputs@fp),(c:fputc@fp)
  2858  000EC6  C00C  F003         	movff	(c:fputs@fp+1),(c:fputc@fp+1)
  2859  000ECA  C00D  F004         
  2860                           	call	_fputc	;wreg free
  2861  000ECE  ECF1  F004         	line	16
  2862                           	
  2863                           l1233:
  2864  000ED2                     	infsnz	((c:fputs@i)),c
  2865  000ED2  4A0F               	incf	((c:fputs@i+1)),c
  2866  000ED4  2A10               	goto	l1235
  2867  000ED6  EF6D  F007         	line	17
  2868                           	
  2869                           l852:
  2870  000EDA                     	line	14
  2871                           	
  2872                           l1235:
  2873  000EDA                     	movf	((c:fputs@i)),c,w
  2874  000EDA  500F               	addwf	((c:fputs@s)),c,w
  2875  000EDC  240A               	movwf	c:fsr2l
  2876  000EDE  6ED9               	movf	((c:fputs@i+1)),c,w
  2877  000EE0  5010               	addwfc	((c:fputs@s+1)),c,w
  2878  000EE2  200B               	movwf	1+c:fsr2l
  2879  000EE4  6EDA               	movf	indf2,w
  2880  000EE6  50DF               	movwf	((c:fputs@c)),c
  2881  000EE8  6E0E               	movf	((c:fputs@c)),c,w
  2882  000EEA  500E               	btfss	status,2
  2883  000EEC  A4D8               	goto	u471
  2884  000EEE  EF7B  F007         	goto	u470
  2885  000EF2  EF7D  F007         u471:
  2886  000EF6                     	goto	l1231
  2887  000EF6  EF60  F007         u470:
  2888  000EFA                     	goto	l855
  2889  000EFA  EF7F  F007         	
  2890                           l854:
  2891  000EFE                     	line	19
  2892                           ;	Return value of _fputs is never used
  2893                           	
  2894                           l855:
  2895  000EFE                     	return	;funcret
  2896  000EFE  0012               	opt stack 0
  2897                           GLOBAL	__end_of_fputs
  2898                           	__end_of_fputs:
  2899  000F00                     	signat	_fputs,8314
  2900                           	global	_fputc
  2901                           
  2902 ;; *************** function _fputc *****************
  2903 ;; Defined at:
  2904 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\nf_fputc.c"
  2905 ;; Parameters:    Size  Location     Type
  2906 ;;  c               2    0[COMRAM] int 
  2907 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  2908 ;;		 -> sprintf@f(6), 
  2909 ;; Auto vars:     Size  Location     Type
  2910 ;;		None
  2911 ;; Return value:  Size  Location     Type
  2912 ;;                  2    0[COMRAM] int 
  2913 ;; Registers used:
  2914 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2915 ;; Tracked objects:
  2916 ;;		On entry : 0/0
  2917 ;;		On exit  : 0/0
  2918 ;;		Unchanged: 0/0
  2919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2920 ;;      Params:         4       0       0       0
  2921 ;;      Locals:         0       0       0       0
  2922 ;;      Temps:          5       0       0       0
  2923 ;;      Totals:         9       0       0       0
  2924 ;;Total ram usage:        9 bytes
  2925 ;; Hardware stack levels used:    1
  2926 ;; Hardware stack levels required when called:    1
  2927 ;; This function calls:
  2928 ;;		_putch
  2929 ;; This function is called by:
  2930 ;;		_pad
  2931 ;;		_vfpfcnvrt
  2932 ;;		_fputs
  2933 ;; This function uses a non-reentrant model
  2934 ;;
  2935                           psect	text9,class=CODE,space=0,reloc=2,group=2
  2936                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\nf_fputc.c"
  2937                           	line	8
  2938                           global __ptext9
  2939                           __ptext9:
  2940  0009E2                     psect	text9
  2941                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\nf_fputc.c"
  2942                           	line	8
  2943                           	global	__size_of_fputc
  2944                           	__size_of_fputc	equ	__end_of_fputc-_fputc
  2945  0000                     	
  2946                           _fputc:
  2947  0009E2                     ;incstack = 0
  2948                           	opt	stack 23
  2949                           	line	12
  2950                           	
  2951                           l1215:
  2952  0009E2                     	movf	((c:fputc@fp)),c,w
  2953  0009E2  5003               iorwf	((c:fputc@fp+1)),c,w
  2954  0009E4  1004               	btfsc	status,2
  2955  0009E6  B4D8               	goto	u431
  2956  0009E8  EFF8  F004         	goto	u430
  2957  0009EC  EFFA  F004         
  2958                           u431:
  2959  0009F0                     	goto	l1219
  2960  0009F0  EF05  F005         u430:
  2961  0009F4                     	
  2962                           l1217:
  2963  0009F4                     	movf	((c:fputc@fp)),c,w
  2964  0009F4  5003               iorwf	((c:fputc@fp+1)),c,w
  2965  0009F6  1004               	btfss	status,2
  2966  0009F8  A4D8               	goto	u441
  2967  0009FA  EF01  F005         	goto	u440
  2968  0009FE  EF03  F005         
  2969                           u441:
  2970  000A02                     	goto	l1221
  2971  000A02  EF0A  F005         u440:
  2972  000A06                     	goto	l1219
  2973  000A06  EF05  F005         	
  2974                           l842:
  2975  000A0A                     	line	13
  2976                           	
  2977                           l1219:
  2978  000A0A                     	movf	((c:fputc@c)),c,w
  2979  000A0A  5001               	
  2980                           	call	_putch
  2981  000A0C  EC23  F008         	line	14
  2982                           	goto	l847
  2983  000A10  EF5F  F005         	
  2984                           l840:
  2985  000A14                     	line	15
  2986                           	
  2987                           l1221:
  2988  000A14                     	lfsr	2,04h
  2989  000A14  EE20 F004          	movf	((c:fputc@fp)),c,w
  2990  000A18  5003               	addwf	fsr2l
  2991  000A1A  26D9               	movf	((c:fputc@fp+1)),c,w
  2992  000A1C  5004               	addwfc	fsr2h
  2993  000A1E  22DA               	movf	postinc2,w
  2994  000A20  50DE               iorwf	postinc2,w
  2995  000A22  10DE               	btfsc	status,2
  2996  000A24  B4D8               	goto	u451
  2997  000A26  EF17  F005         	goto	u450
  2998  000A2A  EF19  F005         
  2999                           u451:
  3000  000A2E                     	goto	l1225
  3001  000A2E  EF36  F005         u450:
  3002  000A32                     	
  3003                           l1223:
  3004  000A32                     	lfsr	2,04h
  3005  000A32  EE20 F004          	movf	((c:fputc@fp)),c,w
  3006  000A36  5003               	addwf	fsr2l
  3007  000A38  26D9               	movf	((c:fputc@fp+1)),c,w
  3008  000A3A  5004               	addwfc	fsr2h
  3009  000A3C  22DA               	lfsr	1,02h
  3010  000A3E  EE10 F002          	movf	((c:fputc@fp)),c,w
  3011  000A42  5003               	addwf	fsr1l
  3012  000A44  26E1               	movf	((c:fputc@fp+1)),c,w
  3013  000A46  5004               	addwfc	fsr1h
  3014  000A48  22E2               		movf	postinc2,w
  3015  000A4A  50DE               	subwf	postinc1,w
  3016  000A4C  5CE6               	movf	postinc1,w
  3017  000A4E  50E6               	xorlw	80h
  3018  000A50  0A80               	movwf	(??_fputc+4+0)&0ffh,c
  3019  000A52  6E09               	movf	postinc2,w
  3020  000A54  50DE               	xorlw	80h
  3021  000A56  0A80               	subwfb	(??_fputc+4+0)&0ffh,c,w
  3022  000A58  5809               	btfsc	status,0
  3023  000A5A  B0D8               	goto	u461
  3024  000A5C  EF32  F005         	goto	u460
  3025  000A60  EF34  F005         
  3026                           u461:
  3027  000A64                     	goto	l847
  3028  000A64  EF5F  F005         u460:
  3029  000A68                     	goto	l1225
  3030  000A68  EF36  F005         	
  3031                           l846:
  3032  000A6C                     	line	16
  3033                           	
  3034                           l1225:
  3035  000A6C                     	lfsr	2,02h
  3036  000A6C  EE20 F002          	movf	((c:fputc@fp)),c,w
  3037  000A70  5003               	addwf	fsr2l
  3038  000A72  26D9               	movf	((c:fputc@fp+1)),c,w
  3039  000A74  5004               	addwfc	fsr2h
  3040  000A76  22DA               	movff	postinc2,??_fputc+0+0
  3041  000A78  CFDE F005          	movff	postdec2,??_fputc+0+0+1
  3042  000A7C  CFDD F006          	movff	(c:fputc@fp),fsr2l
  3043  000A80  C003  FFD9         	movff	(c:fputc@fp+1),fsr2h
  3044  000A84  C004  FFDA         	movff	postinc2,??_fputc+2+0
  3045  000A88  CFDE F007          	movff	postdec2,??_fputc+2+0+1
  3046  000A8C  CFDD F008          	movf	(??_fputc+0+0),c,w
  3047  000A90  5005               	addwf	(??_fputc+2+0),c,w
  3048  000A92  2407               	movwf	c:fsr2l
  3049  000A94  6ED9               	movf	(??_fputc+0+1),c,w
  3050  000A96  5006               	addwfc	(??_fputc+2+1),c,w
  3051  000A98  2008               	movwf	1+c:fsr2l
  3052  000A9A  6EDA               	movff	(c:fputc@c),indf2
  3053  000A9C  C001  FFDF         
  3054                           	line	17
  3055                           	lfsr	2,02h
  3056  000AA0  EE20 F002          	movf	((c:fputc@fp)),c,w
  3057  000AA4  5003               	addwf	fsr2l
  3058  000AA6  26D9               	movf	((c:fputc@fp+1)),c,w
  3059  000AA8  5004               	addwfc	fsr2h
  3060  000AAA  22DA               	incf	postinc2
  3061  000AAC  2ADE               	movlw	0
  3062  000AAE  0E00               	addwfc	postdec2
  3063  000AB0  22DD               	goto	l847
  3064  000AB2  EF5F  F005         	line	18
  3065                           	
  3066                           l844:
  3067  000AB6                     	goto	l847
  3068  000AB6  EF5F  F005         	line	19
  3069                           	
  3070                           l843:
  3071  000ABA                     	goto	l847
  3072  000ABA  EF5F  F005         	line	20
  3073                           	
  3074                           l1227:
  3075  000ABE                     	line	21
  3076                           ;	Return value of _fputc is never used
  3077                           	
  3078                           l847:
  3079  000ABE                     	return	;funcret
  3080  000ABE  0012               	opt stack 0
  3081                           GLOBAL	__end_of_fputc
  3082                           	__end_of_fputc:
  3083  000AC0                     	signat	_fputc,8314
  3084                           	global	_putch
  3085                           
  3086 ;; *************** function _putch *****************
  3087 ;; Defined at:
  3088 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\putch.c"
  3089 ;; Parameters:    Size  Location     Type
  3090 ;;  c               1    wreg     unsigned char 
  3091 ;; Auto vars:     Size  Location     Type
  3092 ;;  c               1    0[COMRAM] unsigned char 
  3093 ;; Return value:  Size  Location     Type
  3094 ;;                  1    wreg      void 
  3095 ;; Registers used:
  3096 ;;		wreg
  3097 ;; Tracked objects:
  3098 ;;		On entry : 0/0
  3099 ;;		On exit  : 0/0
  3100 ;;		Unchanged: 0/0
  3101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3102 ;;      Params:         0       0       0       0
  3103 ;;      Locals:         0       0       0       0
  3104 ;;      Temps:          0       0       0       0
  3105 ;;      Totals:         0       0       0       0
  3106 ;;Total ram usage:        0 bytes
  3107 ;; Hardware stack levels used:    1
  3108 ;; This function calls:
  3109 ;;		Nothing
  3110 ;; This function is called by:
  3111 ;;		_fputc
  3112 ;; This function uses a non-reentrant model
  3113 ;;
  3114                           psect	text10,class=CODE,space=0,reloc=2,group=2
  3115                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\putch.c"
  3116                           	line	7
  3117                           global __ptext10
  3118                           __ptext10:
  3119  001046                     psect	text10
  3120                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\putch.c"
  3121                           	line	7
  3122                           	global	__size_of_putch
  3123                           	__size_of_putch	equ	__end_of_putch-_putch
  3124  0000                     	
  3125                           _putch:
  3126  001046                     ;incstack = 0
  3127                           	opt	stack 23
  3128                           	line	9
  3129                           	
  3130                           l865:
  3131  001046                     	return	;funcret
  3132  001046  0012               	opt stack 0
  3133                           GLOBAL	__end_of_putch
  3134                           	__end_of_putch:
  3135  001048                     	signat	_putch,4217
  3136                           	global	___lomod
  3137                           
  3138 ;; *************** function ___lomod *****************
  3139 ;; Defined at:
  3140 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\lomod.c"
  3141 ;; Parameters:    Size  Location     Type
  3142 ;;  dividend        8    0[COMRAM] unsigned long long 
  3143 ;;  divisor         8    8[COMRAM] unsigned long long 
  3144 ;; Auto vars:     Size  Location     Type
  3145 ;;  counter         1   16[COMRAM] unsigned char 
  3146 ;; Return value:  Size  Location     Type
  3147 ;;                  8    0[COMRAM] unsigned long long 
  3148 ;; Registers used:
  3149 ;;		wreg, status,2, status,0
  3150 ;; Tracked objects:
  3151 ;;		On entry : 0/0
  3152 ;;		On exit  : 0/0
  3153 ;;		Unchanged: 0/0
  3154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3155 ;;      Params:        16       0       0       0
  3156 ;;      Locals:         1       0       0       0
  3157 ;;      Temps:          0       0       0       0
  3158 ;;      Totals:        17       0       0       0
  3159 ;;Total ram usage:       17 bytes
  3160 ;; Hardware stack levels used:    1
  3161 ;; This function calls:
  3162 ;;		Nothing
  3163 ;; This function is called by:
  3164 ;;		_utoa
  3165 ;; This function uses a non-reentrant model
  3166 ;;
  3167                           psect	text11,class=CODE,space=0,reloc=2,group=1
  3168                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\lomod.c"
  3169                           	line	9
  3170                           global __ptext11
  3171                           __ptext11:
  3172  0008FE                     psect	text11
  3173                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\lomod.c"
  3174                           	line	9
  3175                           	global	__size_of___lomod
  3176                           	__size_of___lomod	equ	__end_of___lomod-___lomod
  3177  0000                     	
  3178                           ___lomod:
  3179  0008FE                     ;incstack = 0
  3180                           	opt	stack 26
  3181                           	line	14
  3182                           	
  3183                           l1291:
  3184  0008FE                     	movf	((c:___lomod@divisor)),c,w
  3185  0008FE  5009               iorwf	((c:___lomod@divisor+1)),c,w
  3186  000900  100A               iorwf	((c:___lomod@divisor+2)),c,w
  3187  000902  100B               iorwf	((c:___lomod@divisor+3)),c,w
  3188  000904  100C               iorwf	((c:___lomod@divisor+4)),c,w
  3189  000906  100D               iorwf	((c:___lomod@divisor+5)),c,w
  3190  000908  100E               iorwf	((c:___lomod@divisor+6)),c,w
  3191  00090A  100F               iorwf	((c:___lomod@divisor+7)),c,w
  3192  00090C  1010               	btfsc	status,2
  3193  00090E  B4D8               	goto	u571
  3194  000910  EF8C  F004         	goto	u570
  3195  000914  EF8E  F004         
  3196                           u571:
  3197  000918                     	goto	l612
  3198  000918  EFE0  F004         u570:
  3199  00091C                     	line	15
  3200                           	
  3201                           l1293:
  3202  00091C                     	movlw	low(01h)
  3203  00091C  0E01               	movwf	((c:___lomod@counter)),c
  3204  00091E  6E11               	line	16
  3205                           	goto	l1297
  3206  000920  EF9E  F004         	
  3207                           l614:
  3208  000924                     	line	17
  3209                           	
  3210                           l1295:
  3211  000924                     	bcf	status,0
  3212  000924  90D8               	rlcf	((c:___lomod@divisor)),c
  3213  000926  3609               	rlcf	((c:___lomod@divisor+1)),c
  3214  000928  360A               	rlcf	((c:___lomod@divisor+2)),c
  3215  00092A  360B               	rlcf	((c:___lomod@divisor+3)),c
  3216  00092C  360C               	rlcf	((c:___lomod@divisor+4)),c
  3217  00092E  360D               	rlcf	((c:___lomod@divisor+5)),c
  3218  000930  360E               	rlcf	((c:___lomod@divisor+6)),c
  3219  000932  360F               	rlcf	((c:___lomod@divisor+7)),c
  3220  000934  3610               	line	18
  3221                           	incf	((c:___lomod@counter)),c
  3222  000936  2A11               	goto	l1297
  3223  000938  EF9E  F004         	line	19
  3224                           	
  3225                           l613:
  3226  00093C                     	line	16
  3227                           	
  3228                           l1297:
  3229  00093C                     	
  3230                           	btfss	((c:___lomod@divisor+7)),c,(63)&7
  3231  00093C  AE10               	goto	u581
  3232  00093E  EFA3  F004         	goto	u580
  3233  000942  EFA5  F004         u581:
  3234  000946                     	goto	l1295
  3235  000946  EF92  F004         u580:
  3236  00094A                     	goto	l1299
  3237  00094A  EFA9  F004         	
  3238                           l615:
  3239  00094E                     	goto	l1299
  3240  00094E  EFA9  F004         	line	20
  3241                           	
  3242                           l616:
  3243  000952                     	line	21
  3244                           	
  3245                           l1299:
  3246  000952                     		movf	((c:___lomod@divisor)),c,w
  3247  000952  5009               	subwf	((c:___lomod@dividend)),c,w
  3248  000954  5C01               	movf	((c:___lomod@divisor+1)),c,w
  3249  000956  500A               	subwfb	((c:___lomod@dividend+1)),c,w
  3250  000958  5802               	movf	((c:___lomod@divisor+2)),c,w
  3251  00095A  500B               	subwfb	((c:___lomod@dividend+2)),c,w
  3252  00095C  5803               	movf	((c:___lomod@divisor+3)),c,w
  3253  00095E  500C               	subwfb	((c:___lomod@dividend+3)),c,w
  3254  000960  5804               	movf	((c:___lomod@divisor+4)),c,w
  3255  000962  500D               	subwfb	((c:___lomod@dividend+4)),c,w
  3256  000964  5805               	movf	((c:___lomod@divisor+5)),c,w
  3257  000966  500E               	subwfb	((c:___lomod@dividend+5)),c,w
  3258  000968  5806               	movf	((c:___lomod@divisor+6)),c,w
  3259  00096A  500F               	subwfb	((c:___lomod@dividend+6)),c,w
  3260  00096C  5807               	movf	((c:___lomod@divisor+7)),c,w
  3261  00096E  5010               	subwfb	((c:___lomod@dividend+7)),c,w
  3262  000970  5808               	btfss	status,0
  3263  000972  A0D8               	goto	u591
  3264  000974  EFBE  F004         	goto	u590
  3265  000978  EFC0  F004         
  3266                           u591:
  3267  00097C                     	goto	l1303
  3268  00097C  EFD2  F004         u590:
  3269  000980                     	line	22
  3270                           	
  3271                           l1301:
  3272  000980                     	movf	((c:___lomod@divisor)),c,w
  3273  000980  5009               	subwf	((c:___lomod@dividend)),c
  3274  000982  5E01               	movf	((c:___lomod@divisor+1)),c,w
  3275  000984  500A               	subwfb	((c:___lomod@dividend+1)),c
  3276  000986  5A02               	movf	((c:___lomod@divisor+2)),c,w
  3277  000988  500B               	subwfb	((c:___lomod@dividend+2)),c
  3278  00098A  5A03               	movf	((c:___lomod@divisor+3)),c,w
  3279  00098C  500C               	subwfb	((c:___lomod@dividend+3)),c
  3280  00098E  5A04               	movf	((c:___lomod@divisor+4)),c,w
  3281  000990  500D               	subwfb	((c:___lomod@dividend+4)),c
  3282  000992  5A05               	movf	((c:___lomod@divisor+5)),c,w
  3283  000994  500E               	subwfb	((c:___lomod@dividend+5)),c
  3284  000996  5A06               	movf	((c:___lomod@divisor+6)),c,w
  3285  000998  500F               	subwfb	((c:___lomod@dividend+6)),c
  3286  00099A  5A07               	movf	((c:___lomod@divisor+7)),c,w
  3287  00099C  5010               	subwfb	((c:___lomod@dividend+7)),c
  3288  00099E  5A08               	goto	l1303
  3289  0009A0  EFD2  F004         	
  3290                           l617:
  3291  0009A4                     	line	23
  3292                           	
  3293                           l1303:
  3294  0009A4                     	bcf	status,0
  3295  0009A4  90D8               	rrcf	((c:___lomod@divisor+7)),c
  3296  0009A6  3210               	rrcf	((c:___lomod@divisor+6)),c
  3297  0009A8  320F               	rrcf	((c:___lomod@divisor+5)),c
  3298  0009AA  320E               	rrcf	((c:___lomod@divisor+4)),c
  3299  0009AC  320D               	rrcf	((c:___lomod@divisor+3)),c
  3300  0009AE  320C               	rrcf	((c:___lomod@divisor+2)),c
  3301  0009B0  320B               	rrcf	((c:___lomod@divisor+1)),c
  3302  0009B2  320A               	rrcf	((c:___lomod@divisor)),c
  3303  0009B4  3209               	line	24
  3304                           	
  3305                           l1305:
  3306  0009B6                     	decfsz	((c:___lomod@counter)),c
  3307  0009B6  2E11               	
  3308                           	goto	l1299
  3309  0009B8  EFA9  F004         	goto	l612
  3310  0009BC  EFE0  F004         	
  3311                           l618:
  3312  0009C0                     	line	25
  3313                           	
  3314                           l612:
  3315  0009C0                     	line	26
  3316                           	movff	(c:___lomod@dividend),(c:?___lomod)
  3317  0009C0  C001  F001         	movff	(c:___lomod@dividend+1),(c:?___lomod+1)
  3318  0009C4  C002  F002         	movff	(c:___lomod@dividend+2),(c:?___lomod+2)
  3319  0009C8  C003  F003         	movff	(c:___lomod@dividend+3),(c:?___lomod+3)
  3320  0009CC  C004  F004         	movff	(c:___lomod@dividend+4),(c:?___lomod+4)
  3321  0009D0  C005  F005         	movff	(c:___lomod@dividend+5),(c:?___lomod+5)
  3322  0009D4  C006  F006         	movff	(c:___lomod@dividend+6),(c:?___lomod+6)
  3323  0009D8  C007  F007         	movff	(c:___lomod@dividend+7),(c:?___lomod+7)
  3324  0009DC  C008  F008         	line	27
  3325                           	
  3326                           l619:
  3327  0009E0                     	return	;funcret
  3328  0009E0  0012               	opt stack 0
  3329                           GLOBAL	__end_of___lomod
  3330                           	__end_of___lomod:
  3331  0009E2                     	signat	___lomod,8319
  3332                           	global	___lodiv
  3333                           
  3334 ;; *************** function ___lodiv *****************
  3335 ;; Defined at:
  3336 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\lodiv.c"
  3337 ;; Parameters:    Size  Location     Type
  3338 ;;  dividend        8    0[COMRAM] unsigned long long 
  3339 ;;  divisor         8    8[COMRAM] unsigned long long 
  3340 ;; Auto vars:     Size  Location     Type
  3341 ;;  quotient        8   16[COMRAM] unsigned long long 
  3342 ;;  counter         1   24[COMRAM] unsigned char 
  3343 ;; Return value:  Size  Location     Type
  3344 ;;                  8    0[COMRAM] unsigned long long 
  3345 ;; Registers used:
  3346 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3347 ;; Tracked objects:
  3348 ;;		On entry : 0/0
  3349 ;;		On exit  : 0/0
  3350 ;;		Unchanged: 0/0
  3351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3352 ;;      Params:        16       0       0       0
  3353 ;;      Locals:         9       0       0       0
  3354 ;;      Temps:          0       0       0       0
  3355 ;;      Totals:        25       0       0       0
  3356 ;;Total ram usage:       25 bytes
  3357 ;; Hardware stack levels used:    1
  3358 ;; This function calls:
  3359 ;;		Nothing
  3360 ;; This function is called by:
  3361 ;;		_utoa
  3362 ;; This function uses a non-reentrant model
  3363 ;;
  3364                           psect	text12,class=CODE,space=0,reloc=2,group=1
  3365                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\lodiv.c"
  3366                           	line	9
  3367                           global __ptext12
  3368                           __ptext12:
  3369  0007FA                     psect	text12
  3370                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\lodiv.c"
  3371                           	line	9
  3372                           	global	__size_of___lodiv
  3373                           	__size_of___lodiv	equ	__end_of___lodiv-___lodiv
  3374  0000                     	
  3375                           ___lodiv:
  3376  0007FA                     ;incstack = 0
  3377                           	opt	stack 26
  3378                           	line	15
  3379                           	
  3380                           l1269:
  3381  0007FA                     	lfsr	2,(___lodiv@quotient)
  3382  0007FA  EE20  F011         	movlw	8-1
  3383  0007FE  0E07               u531:
  3384  000800                     	clrf	postinc2
  3385  000800  6ADE               	decf	wreg
  3386  000802  06E8               	bc	u531
  3387  000804  E2FD               	line	16
  3388                           	
  3389                           l1271:
  3390  000806                     	movf	((c:___lodiv@divisor)),c,w
  3391  000806  5009               iorwf	((c:___lodiv@divisor+1)),c,w
  3392  000808  100A               iorwf	((c:___lodiv@divisor+2)),c,w
  3393  00080A  100B               iorwf	((c:___lodiv@divisor+3)),c,w
  3394  00080C  100C               iorwf	((c:___lodiv@divisor+4)),c,w
  3395  00080E  100D               iorwf	((c:___lodiv@divisor+5)),c,w
  3396  000810  100E               iorwf	((c:___lodiv@divisor+6)),c,w
  3397  000812  100F               iorwf	((c:___lodiv@divisor+7)),c,w
  3398  000814  1010               	btfsc	status,2
  3399  000816  B4D8               	goto	u541
  3400  000818  EF10  F004         	goto	u540
  3401  00081C  EF12  F004         
  3402                           u541:
  3403  000820                     	goto	l602
  3404  000820  EF6E  F004         u540:
  3405  000824                     	line	17
  3406                           	
  3407                           l1273:
  3408  000824                     	movlw	low(01h)
  3409  000824  0E01               	movwf	((c:___lodiv@counter)),c
  3410  000826  6E19               	line	18
  3411                           	goto	l1277
  3412  000828  EF22  F004         	
  3413                           l604:
  3414  00082C                     	line	19
  3415                           	
  3416                           l1275:
  3417  00082C                     	bcf	status,0
  3418  00082C  90D8               	rlcf	((c:___lodiv@divisor)),c
  3419  00082E  3609               	rlcf	((c:___lodiv@divisor+1)),c
  3420  000830  360A               	rlcf	((c:___lodiv@divisor+2)),c
  3421  000832  360B               	rlcf	((c:___lodiv@divisor+3)),c
  3422  000834  360C               	rlcf	((c:___lodiv@divisor+4)),c
  3423  000836  360D               	rlcf	((c:___lodiv@divisor+5)),c
  3424  000838  360E               	rlcf	((c:___lodiv@divisor+6)),c
  3425  00083A  360F               	rlcf	((c:___lodiv@divisor+7)),c
  3426  00083C  3610               	line	20
  3427                           	incf	((c:___lodiv@counter)),c
  3428  00083E  2A19               	goto	l1277
  3429  000840  EF22  F004         	line	21
  3430                           	
  3431                           l603:
  3432  000844                     	line	18
  3433                           	
  3434                           l1277:
  3435  000844                     	
  3436                           	btfss	((c:___lodiv@divisor+7)),c,(63)&7
  3437  000844  AE10               	goto	u551
  3438  000846  EF27  F004         	goto	u550
  3439  00084A  EF29  F004         u551:
  3440  00084E                     	goto	l1275
  3441  00084E  EF16  F004         u550:
  3442  000852                     	goto	l1279
  3443  000852  EF2D  F004         	
  3444                           l605:
  3445  000856                     	goto	l1279
  3446  000856  EF2D  F004         	line	22
  3447                           	
  3448                           l606:
  3449  00085A                     	line	23
  3450                           	
  3451                           l1279:
  3452  00085A                     	bcf	status,0
  3453  00085A  90D8               	rlcf	((c:___lodiv@quotient)),c
  3454  00085C  3611               	rlcf	((c:___lodiv@quotient+1)),c
  3455  00085E  3612               	rlcf	((c:___lodiv@quotient+2)),c
  3456  000860  3613               	rlcf	((c:___lodiv@quotient+3)),c
  3457  000862  3614               	rlcf	((c:___lodiv@quotient+4)),c
  3458  000864  3615               	rlcf	((c:___lodiv@quotient+5)),c
  3459  000866  3616               	rlcf	((c:___lodiv@quotient+6)),c
  3460  000868  3617               	rlcf	((c:___lodiv@quotient+7)),c
  3461  00086A  3618               	line	24
  3462                           	
  3463                           l1281:
  3464  00086C                     		movf	((c:___lodiv@divisor)),c,w
  3465  00086C  5009               	subwf	((c:___lodiv@dividend)),c,w
  3466  00086E  5C01               	movf	((c:___lodiv@divisor+1)),c,w
  3467  000870  500A               	subwfb	((c:___lodiv@dividend+1)),c,w
  3468  000872  5802               	movf	((c:___lodiv@divisor+2)),c,w
  3469  000874  500B               	subwfb	((c:___lodiv@dividend+2)),c,w
  3470  000876  5803               	movf	((c:___lodiv@divisor+3)),c,w
  3471  000878  500C               	subwfb	((c:___lodiv@dividend+3)),c,w
  3472  00087A  5804               	movf	((c:___lodiv@divisor+4)),c,w
  3473  00087C  500D               	subwfb	((c:___lodiv@dividend+4)),c,w
  3474  00087E  5805               	movf	((c:___lodiv@divisor+5)),c,w
  3475  000880  500E               	subwfb	((c:___lodiv@dividend+5)),c,w
  3476  000882  5806               	movf	((c:___lodiv@divisor+6)),c,w
  3477  000884  500F               	subwfb	((c:___lodiv@dividend+6)),c,w
  3478  000886  5807               	movf	((c:___lodiv@divisor+7)),c,w
  3479  000888  5010               	subwfb	((c:___lodiv@dividend+7)),c,w
  3480  00088A  5808               	btfss	status,0
  3481  00088C  A0D8               	goto	u561
  3482  00088E  EF4B  F004         	goto	u560
  3483  000892  EF4D  F004         
  3484                           u561:
  3485  000896                     	goto	l1287
  3486  000896  EF60  F004         u560:
  3487  00089A                     	line	25
  3488                           	
  3489                           l1283:
  3490  00089A                     	movf	((c:___lodiv@divisor)),c,w
  3491  00089A  5009               	subwf	((c:___lodiv@dividend)),c
  3492  00089C  5E01               	movf	((c:___lodiv@divisor+1)),c,w
  3493  00089E  500A               	subwfb	((c:___lodiv@dividend+1)),c
  3494  0008A0  5A02               	movf	((c:___lodiv@divisor+2)),c,w
  3495  0008A2  500B               	subwfb	((c:___lodiv@dividend+2)),c
  3496  0008A4  5A03               	movf	((c:___lodiv@divisor+3)),c,w
  3497  0008A6  500C               	subwfb	((c:___lodiv@dividend+3)),c
  3498  0008A8  5A04               	movf	((c:___lodiv@divisor+4)),c,w
  3499  0008AA  500D               	subwfb	((c:___lodiv@dividend+4)),c
  3500  0008AC  5A05               	movf	((c:___lodiv@divisor+5)),c,w
  3501  0008AE  500E               	subwfb	((c:___lodiv@dividend+5)),c
  3502  0008B0  5A06               	movf	((c:___lodiv@divisor+6)),c,w
  3503  0008B2  500F               	subwfb	((c:___lodiv@dividend+6)),c
  3504  0008B4  5A07               	movf	((c:___lodiv@divisor+7)),c,w
  3505  0008B6  5010               	subwfb	((c:___lodiv@dividend+7)),c
  3506  0008B8  5A08               	line	26
  3507                           	
  3508                           l1285:
  3509  0008BA                     	bsf	(0+(0/8)+(c:___lodiv@quotient)),c,(0)&7
  3510  0008BA  8011               	goto	l1287
  3511  0008BC  EF60  F004         	line	27
  3512                           	
  3513                           l607:
  3514  0008C0                     	line	28
  3515                           	
  3516                           l1287:
  3517  0008C0                     	bcf	status,0
  3518  0008C0  90D8               	rrcf	((c:___lodiv@divisor+7)),c
  3519  0008C2  3210               	rrcf	((c:___lodiv@divisor+6)),c
  3520  0008C4  320F               	rrcf	((c:___lodiv@divisor+5)),c
  3521  0008C6  320E               	rrcf	((c:___lodiv@divisor+4)),c
  3522  0008C8  320D               	rrcf	((c:___lodiv@divisor+3)),c
  3523  0008CA  320C               	rrcf	((c:___lodiv@divisor+2)),c
  3524  0008CC  320B               	rrcf	((c:___lodiv@divisor+1)),c
  3525  0008CE  320A               	rrcf	((c:___lodiv@divisor)),c
  3526  0008D0  3209               	line	29
  3527                           	
  3528                           l1289:
  3529  0008D2                     	decfsz	((c:___lodiv@counter)),c
  3530  0008D2  2E19               	
  3531                           	goto	l1279
  3532  0008D4  EF2D  F004         	goto	l602
  3533  0008D8  EF6E  F004         	
  3534                           l608:
  3535  0008DC                     	line	30
  3536                           	
  3537                           l602:
  3538  0008DC                     	line	31
  3539                           	movff	(c:___lodiv@quotient),(c:?___lodiv)
  3540  0008DC  C011  F001         	movff	(c:___lodiv@quotient+1),(c:?___lodiv+1)
  3541  0008E0  C012  F002         	movff	(c:___lodiv@quotient+2),(c:?___lodiv+2)
  3542  0008E4  C013  F003         	movff	(c:___lodiv@quotient+3),(c:?___lodiv+3)
  3543  0008E8  C014  F004         	movff	(c:___lodiv@quotient+4),(c:?___lodiv+4)
  3544  0008EC  C015  F005         	movff	(c:___lodiv@quotient+5),(c:?___lodiv+5)
  3545  0008F0  C016  F006         	movff	(c:___lodiv@quotient+6),(c:?___lodiv+6)
  3546  0008F4  C017  F007         	movff	(c:___lodiv@quotient+7),(c:?___lodiv+7)
  3547  0008F8  C018  F008         	line	32
  3548                           	
  3549                           l609:
  3550  0008FC                     	return	;funcret
  3551  0008FC  0012               	opt stack 0
  3552                           GLOBAL	__end_of___lodiv
  3553                           	__end_of___lodiv:
  3554  0008FE                     	signat	___lodiv,8319
  3555                           	global	___lwdiv
  3556                           
  3557 ;; *************** function ___lwdiv *****************
  3558 ;; Defined at:
  3559 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\lwdiv.c"
  3560 ;; Parameters:    Size  Location     Type
  3561 ;;  dividend        2    0[COMRAM] unsigned int 
  3562 ;;  divisor         2    2[COMRAM] unsigned int 
  3563 ;; Auto vars:     Size  Location     Type
  3564 ;;  quotient        2    4[COMRAM] unsigned int 
  3565 ;;  counter         1    6[COMRAM] unsigned char 
  3566 ;; Return value:  Size  Location     Type
  3567 ;;                  2    0[COMRAM] unsigned int 
  3568 ;; Registers used:
  3569 ;;		wreg, status,2, status,0
  3570 ;; Tracked objects:
  3571 ;;		On entry : 0/0
  3572 ;;		On exit  : 0/0
  3573 ;;		Unchanged: 0/0
  3574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3575 ;;      Params:         4       0       0       0
  3576 ;;      Locals:         3       0       0       0
  3577 ;;      Temps:          0       0       0       0
  3578 ;;      Totals:         7       0       0       0
  3579 ;;Total ram usage:        7 bytes
  3580 ;; Hardware stack levels used:    1
  3581 ;; This function calls:
  3582 ;;		Nothing
  3583 ;; This function is called by:
  3584 ;;		_main
  3585 ;; This function uses a non-reentrant model
  3586 ;;
  3587                           psect	text13,class=CODE,space=0,reloc=2,group=1
  3588                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\lwdiv.c"
  3589                           	line	7
  3590                           global __ptext13
  3591                           __ptext13:
  3592  000C48                     psect	text13
  3593                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\lwdiv.c"
  3594                           	line	7
  3595                           	global	__size_of___lwdiv
  3596                           	__size_of___lwdiv	equ	__end_of___lwdiv-___lwdiv
  3597  0000                     	
  3598                           ___lwdiv:
  3599  000C48                     ;incstack = 0
  3600                           	opt	stack 30
  3601                           	line	13
  3602                           	
  3603                           l1507:
  3604  000C48                     	movlw	high(0)
  3605  000C48  0E00               	movwf	((c:___lwdiv@quotient+1)),c
  3606  000C4A  6E06               	movlw	low(0)
  3607  000C4C  0E00               	movwf	((c:___lwdiv@quotient)),c
  3608  000C4E  6E05               	line	14
  3609                           	
  3610                           l1509:
  3611  000C50                     	movf	((c:___lwdiv@divisor)),c,w
  3612  000C50  5003               iorwf	((c:___lwdiv@divisor+1)),c,w
  3613  000C52  1004               	btfsc	status,2
  3614  000C54  B4D8               	goto	u811
  3615  000C56  EF2F  F006         	goto	u810
  3616  000C5A  EF31  F006         
  3617                           u811:
  3618  000C5E                     	goto	l655
  3619  000C5E  EF63  F006         u810:
  3620  000C62                     	line	15
  3621                           	
  3622                           l1511:
  3623  000C62                     	movlw	low(01h)
  3624  000C62  0E01               	movwf	((c:___lwdiv@counter)),c
  3625  000C64  6E07               	line	16
  3626                           	goto	l1515
  3627  000C66  EF3B  F006         	
  3628                           l657:
  3629  000C6A                     	line	17
  3630                           	
  3631                           l1513:
  3632  000C6A                     	bcf	status,0
  3633  000C6A  90D8               	rlcf	((c:___lwdiv@divisor)),c
  3634  000C6C  3603               	rlcf	((c:___lwdiv@divisor+1)),c
  3635  000C6E  3604               	line	18
  3636                           	incf	((c:___lwdiv@counter)),c
  3637  000C70  2A07               	goto	l1515
  3638  000C72  EF3B  F006         	line	19
  3639                           	
  3640                           l656:
  3641  000C76                     	line	16
  3642                           	
  3643                           l1515:
  3644  000C76                     	
  3645                           	btfss	((c:___lwdiv@divisor+1)),c,(15)&7
  3646  000C76  AE04               	goto	u821
  3647  000C78  EF40  F006         	goto	u820
  3648  000C7C  EF42  F006         u821:
  3649  000C80                     	goto	l1513
  3650  000C80  EF35  F006         u820:
  3651  000C84                     	goto	l1517
  3652  000C84  EF46  F006         	
  3653                           l658:
  3654  000C88                     	goto	l1517
  3655  000C88  EF46  F006         	line	20
  3656                           	
  3657                           l659:
  3658  000C8C                     	line	21
  3659                           	
  3660                           l1517:
  3661  000C8C                     	bcf	status,0
  3662  000C8C  90D8               	rlcf	((c:___lwdiv@quotient)),c
  3663  000C8E  3605               	rlcf	((c:___lwdiv@quotient+1)),c
  3664  000C90  3606               	line	22
  3665                           	
  3666                           l1519:
  3667  000C92                     		movf	((c:___lwdiv@divisor)),c,w
  3668  000C92  5003               	subwf	((c:___lwdiv@dividend)),c,w
  3669  000C94  5C01               	movf	((c:___lwdiv@divisor+1)),c,w
  3670  000C96  5004               	subwfb	((c:___lwdiv@dividend+1)),c,w
  3671  000C98  5802               	btfss	status,0
  3672  000C9A  A0D8               	goto	u831
  3673  000C9C  EF52  F006         	goto	u830
  3674  000CA0  EF54  F006         
  3675                           u831:
  3676  000CA4                     	goto	l1525
  3677  000CA4  EF5B  F006         u830:
  3678  000CA8                     	line	23
  3679                           	
  3680                           l1521:
  3681  000CA8                     	movf	((c:___lwdiv@divisor)),c,w
  3682  000CA8  5003               	subwf	((c:___lwdiv@dividend)),c
  3683  000CAA  5E01               	movf	((c:___lwdiv@divisor+1)),c,w
  3684  000CAC  5004               	subwfb	((c:___lwdiv@dividend+1)),c
  3685  000CAE  5A02               
  3686                           	line	24
  3687                           	
  3688                           l1523:
  3689  000CB0                     	bsf	(0+(0/8)+(c:___lwdiv@quotient)),c,(0)&7
  3690  000CB0  8005               	goto	l1525
  3691  000CB2  EF5B  F006         	line	25
  3692                           	
  3693                           l660:
  3694  000CB6                     	line	26
  3695                           	
  3696                           l1525:
  3697  000CB6                     	bcf	status,0
  3698  000CB6  90D8               	rrcf	((c:___lwdiv@divisor+1)),c
  3699  000CB8  3204               	rrcf	((c:___lwdiv@divisor)),c
  3700  000CBA  3203               	line	27
  3701                           	
  3702                           l1527:
  3703  000CBC                     	decfsz	((c:___lwdiv@counter)),c
  3704  000CBC  2E07               	
  3705                           	goto	l1517
  3706  000CBE  EF46  F006         	goto	l655
  3707  000CC2  EF63  F006         	
  3708                           l661:
  3709  000CC6                     	line	28
  3710                           	
  3711                           l655:
  3712  000CC6                     	line	29
  3713                           	movff	(c:___lwdiv@quotient),(c:?___lwdiv)
  3714  000CC6  C005  F001         	movff	(c:___lwdiv@quotient+1),(c:?___lwdiv+1)
  3715  000CCA  C006  F002         	line	30
  3716                           	
  3717                           l662:
  3718  000CCE                     	return	;funcret
  3719  000CCE  0012               	opt stack 0
  3720                           GLOBAL	__end_of___lwdiv
  3721                           	__end_of___lwdiv:
  3722  000CD0                     	signat	___lwdiv,8314
  3723                           	global	_TrackIR
  3724                           
  3725 ;; *************** function _TrackIR *****************
  3726 ;; Defined at:
  3727 ;;		line 40 in file "main.c"
  3728 ;; Parameters:    Size  Location     Type
  3729 ;;  LeftIR          2    0[COMRAM] int 
  3730 ;;  RightIR         2    2[COMRAM] int 
  3731 ;; Auto vars:     Size  Location     Type
  3732 ;;  limit           2    5[COMRAM] int 
  3733 ;; Return value:  Size  Location     Type
  3734 ;;                  1    wreg      void 
  3735 ;; Registers used:
  3736 ;;		wreg, status,2, status,0
  3737 ;; Tracked objects:
  3738 ;;		On entry : 0/0
  3739 ;;		On exit  : 0/0
  3740 ;;		Unchanged: 0/0
  3741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3742 ;;      Params:         4       0       0       0
  3743 ;;      Locals:         2       0       0       0
  3744 ;;      Temps:          1       0       0       0
  3745 ;;      Totals:         7       0       0       0
  3746 ;;Total ram usage:        7 bytes
  3747 ;; Hardware stack levels used:    1
  3748 ;; This function calls:
  3749 ;;		Nothing
  3750 ;; This function is called by:
  3751 ;;		_main
  3752 ;; This function uses a non-reentrant model
  3753 ;;
  3754                           psect	text14,class=CODE,space=0,reloc=2,group=0
  3755                           	file	"main.c"
  3756                           	line	40
  3757                           global __ptext14
  3758                           __ptext14:
  3759  000E0C                     psect	text14
  3760                           	file	"main.c"
  3761                           	line	40
  3762                           	global	__size_of_TrackIR
  3763                           	__size_of_TrackIR	equ	__end_of_TrackIR-_TrackIR
  3764  0000                     	
  3765                           _TrackIR:
  3766  000E0C                     ;incstack = 0
  3767                           	opt	stack 30
  3768                           	line	42
  3769                           	
  3770                           l1427:
  3771  000E0C                     ;main.c: 42:     int limit = 150;
  3772                           	movlw	high(096h)
  3773  000E0C  0E00               	movwf	((c:TrackIR@limit+1)),c
  3774  000E0E  6E07               	movlw	low(096h)
  3775  000E10  0E96               	movwf	((c:TrackIR@limit)),c
  3776  000E12  6E06               	line	47
  3777                           	
  3778                           l1429:
  3779  000E14                     ;main.c: 47:     if (LeftIR >= RightIR ) {
  3780                           		movf	((c:TrackIR@RightIR)),c,w
  3781  000E14  5003               	subwf	((c:TrackIR@LeftIR)),c,w
  3782  000E16  5C01               	movf	((c:TrackIR@LeftIR+1)),c,w
  3783  000E18  5002               	xorlw	80h
  3784  000E1A  0A80               	movwf	(??_TrackIR+0+0)&0ffh,c
  3785  000E1C  6E05               	movf	((c:TrackIR@RightIR+1)),c,w
  3786  000E1E  5004               	xorlw	80h
  3787  000E20  0A80               	subwfb	(??_TrackIR+0+0)&0ffh,c,w
  3788  000E22  5805               	btfss	status,0
  3789  000E24  A0D8               	goto	u761
  3790  000E26  EF17  F007         	goto	u760
  3791  000E2A  EF19  F007         
  3792                           u761:
  3793  000E2E                     	goto	l1433
  3794  000E2E  EF1C  F007         u760:
  3795  000E32                     	line	48
  3796                           	
  3797                           l1431:
  3798  000E32                     ;main.c: 48:         LATDbits.LATD2=1;
  3799                           	bsf	((c:3980)),c,2	;volatile
  3800  000E32  848C               	line	49
  3801                           ;main.c: 49:     }
  3802                           	goto	l62
  3803  000E34  EF30  F007         	line	50
  3804                           ;main.c: 50:     else if (RightIR >= LeftIR) {
  3805                           	
  3806                           l59:
  3807  000E38                     	
  3808                           l1433:
  3809  000E38                     		movf	((c:TrackIR@LeftIR)),c,w
  3810  000E38  5001               	subwf	((c:TrackIR@RightIR)),c,w
  3811  000E3A  5C03               	movf	((c:TrackIR@RightIR+1)),c,w
  3812  000E3C  5004               	xorlw	80h
  3813  000E3E  0A80               	movwf	(??_TrackIR+0+0)&0ffh,c
  3814  000E40  6E05               	movf	((c:TrackIR@LeftIR+1)),c,w
  3815  000E42  5002               	xorlw	80h
  3816  000E44  0A80               	subwfb	(??_TrackIR+0+0)&0ffh,c,w
  3817  000E46  5805               	btfss	status,0
  3818  000E48  A0D8               	goto	u771
  3819  000E4A  EF29  F007         	goto	u770
  3820  000E4E  EF2B  F007         
  3821                           u771:
  3822  000E52                     	goto	l62
  3823  000E52  EF30  F007         u770:
  3824  000E56                     	line	51
  3825                           	
  3826                           l1435:
  3827  000E56                     ;main.c: 51:            LATDbits.LATD3=1;
  3828                           	bsf	((c:3980)),c,3	;volatile
  3829  000E56  868C               	goto	l62
  3830  000E58  EF30  F007         	line	53
  3831                           ;main.c: 53:     }
  3832                           	
  3833                           l61:
  3834  000E5C                     	goto	l62
  3835  000E5C  EF30  F007         	
  3836                           l60:
  3837  000E60                     	line	55
  3838                           	
  3839                           l62:
  3840  000E60                     	return	;funcret
  3841  000E60  0012               	opt stack 0
  3842                           GLOBAL	__end_of_TrackIR
  3843                           	__end_of_TrackIR:
  3844  000E62                     	signat	_TrackIR,8313
  3845                           	global	_SetLine
  3846                           
  3847 ;; *************** function _SetLine *****************
  3848 ;; Defined at:
  3849 ;;		line 132 in file "main.c"
  3850 ;; Parameters:    Size  Location     Type
  3851 ;;  line            1    wreg     unsigned char 
  3852 ;; Auto vars:     Size  Location     Type
  3853 ;;  line            1    3[COMRAM] unsigned char 
  3854 ;; Return value:  Size  Location     Type
  3855 ;;                  1    wreg      void 
  3856 ;; Registers used:
  3857 ;;		wreg, status,2, status,0, cstack
  3858 ;; Tracked objects:
  3859 ;;		On entry : 0/0
  3860 ;;		On exit  : 0/0
  3861 ;;		Unchanged: 0/0
  3862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3863 ;;      Params:         0       0       0       0
  3864 ;;      Locals:         1       0       0       0
  3865 ;;      Temps:          0       0       0       0
  3866 ;;      Totals:         1       0       0       0
  3867 ;;Total ram usage:        1 bytes
  3868 ;; Hardware stack levels used:    1
  3869 ;; Hardware stack levels required when called:    3
  3870 ;; This function calls:
  3871 ;;		_SendLCD
  3872 ;; This function is called by:
  3873 ;;		_main
  3874 ;; This function uses a non-reentrant model
  3875 ;;
  3876                           psect	text15,class=CODE,space=0,reloc=2,group=0
  3877                           	line	132
  3878                           global __ptext15
  3879                           __ptext15:
  3880  000F4A                     psect	text15
  3881                           	file	"main.c"
  3882                           	line	132
  3883                           	global	__size_of_SetLine
  3884                           	__size_of_SetLine	equ	__end_of_SetLine-_SetLine
  3885  0000                     	
  3886                           _SetLine:
  3887  000F4A                     ;incstack = 0
  3888                           	opt	stack 27
  3889                           ;SetLine@line stored from wreg
  3890                           	movwf	((c:SetLine@line)),c
  3891  000F4A  6E04               	line	134
  3892                           	
  3893                           l1475:
  3894  000F4C                     ;main.c: 134:     if (line==1){
  3895                           		decf	((c:SetLine@line)),c,w
  3896  000F4C  0404               	btfss	status,2
  3897  000F4E  A4D8               	goto	u781
  3898  000F50  EFAC  F007         	goto	u780
  3899  000F54  EFAE  F007         
  3900                           u781:
  3901  000F58                     	goto	l1479
  3902  000F58  EFB5  F007         u780:
  3903  000F5C                     	line	135
  3904                           	
  3905                           l1477:
  3906  000F5C                     ;main.c: 135:         SendLCD(0x80,0);
  3907                           	movlw	low(0)
  3908  000F5C  0E00               	movwf	((c:SendLCD@type)),c
  3909  000F5E  6E02               	movlw	(080h)&0ffh
  3910  000F60  0E80               	
  3911                           	call	_SendLCD
  3912  000F62  ECEC  F007         	goto	l1479
  3913  000F66  EFB5  F007         	line	136
  3914                           ;main.c: 136:     }
  3915                           	
  3916                           l85:
  3917  000F6A                     	line	138
  3918                           	
  3919                           l1479:
  3920  000F6A                     ;main.c: 138:     if (line==2){
  3921                           		movlw	2
  3922  000F6A  0E02               	xorwf	((c:SetLine@line)),c,w
  3923  000F6C  1804               	btfss	status,2
  3924  000F6E  A4D8               	goto	u791
  3925  000F70  EFBC  F007         	goto	u790
  3926  000F74  EFBE  F007         
  3927                           u791:
  3928  000F78                     	goto	l1483
  3929  000F78  EFC5  F007         u790:
  3930  000F7C                     	line	139
  3931                           	
  3932                           l1481:
  3933  000F7C                     ;main.c: 139:         SendLCD(0xC0,0);
  3934                           	movlw	low(0)
  3935  000F7C  0E00               	movwf	((c:SendLCD@type)),c
  3936  000F7E  6E02               	movlw	(0C0h)&0ffh
  3937  000F80  0EC0               	
  3938                           	call	_SendLCD
  3939  000F82  ECEC  F007         	goto	l1483
  3940  000F86  EFC5  F007         	line	140
  3941                           ;main.c: 140:     }
  3942                           	
  3943                           l86:
  3944  000F8A                     	line	141
  3945                           	
  3946                           l1483:
  3947  000F8A                     ;main.c: 141:     _delay((unsigned long)((50)*(8000000/4000000.0)));
  3948                           	opt asmopt_push
  3949                           opt asmopt_off
  3950                           	movlw	33
  3951  000F8A  0E21               u857:
  3952  000F8C                     decfsz	wreg,f
  3953  000F8C  2EE8               	bra	u857
  3954  000F8E  D7FE               	nop
  3955  000F90  F000               opt asmopt_pop
  3956                           
  3957                           	line	142
  3958                           	
  3959                           l87:
  3960  000F92                     	return	;funcret
  3961  000F92  0012               	opt stack 0
  3962                           GLOBAL	__end_of_SetLine
  3963                           	__end_of_SetLine:
  3964  000F94                     	signat	_SetLine,4217
  3965                           	global	_LCD_String
  3966                           
  3967 ;; *************** function _LCD_String *****************
  3968 ;; Defined at:
  3969 ;;		line 145 in file "main.c"
  3970 ;; Parameters:    Size  Location     Type
  3971 ;;  string          2    3[COMRAM] PTR unsigned char 
  3972 ;;		 -> main@buf(16), 
  3973 ;; Auto vars:     Size  Location     Type
  3974 ;;		None
  3975 ;; Return value:  Size  Location     Type
  3976 ;;                  1    wreg      void 
  3977 ;; Registers used:
  3978 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3979 ;; Tracked objects:
  3980 ;;		On entry : 0/0
  3981 ;;		On exit  : 0/0
  3982 ;;		Unchanged: 0/0
  3983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3984 ;;      Params:         2       0       0       0
  3985 ;;      Locals:         0       0       0       0
  3986 ;;      Temps:          0       0       0       0
  3987 ;;      Totals:         2       0       0       0
  3988 ;;Total ram usage:        2 bytes
  3989 ;; Hardware stack levels used:    1
  3990 ;; Hardware stack levels required when called:    3
  3991 ;; This function calls:
  3992 ;;		_SendLCD
  3993 ;; This function is called by:
  3994 ;;		_main
  3995 ;; This function uses a non-reentrant model
  3996 ;;
  3997                           psect	text16,class=CODE,space=0,reloc=2,group=0
  3998                           	line	145
  3999                           global __ptext16
  4000                           __ptext16:
  4001  000F94                     psect	text16
  4002                           	file	"main.c"
  4003                           	line	145
  4004                           	global	__size_of_LCD_String
  4005                           	__size_of_LCD_String	equ	__end_of_LCD_String-_LCD_String
  4006  0000                     	
  4007                           _LCD_String:
  4008  000F94                     ;incstack = 0
  4009                           	opt	stack 27
  4010                           	line	147
  4011                           	
  4012                           l1485:
  4013  000F94                     ;main.c: 147:    while(*string != 0){
  4014                           	goto	l1493
  4015  000F94  EFDD  F007         	
  4016                           l91:
  4017  000F98                     	line	150
  4018                           	
  4019                           l1487:
  4020  000F98                     ;main.c: 150:    SendLCD(*string++,1);
  4021                           	movlw	low(01h)
  4022  000F98  0E01               	movwf	((c:SendLCD@type)),c
  4023  000F9A  6E02               	movff	(c:LCD_String@string),fsr2l
  4024  000F9C  C004  FFD9         	movff	(c:LCD_String@string+1),fsr2h
  4025  000FA0  C005  FFDA         	movf	indf2,w
  4026  000FA4  50DF               	
  4027                           	call	_SendLCD
  4028  000FA6  ECEC  F007         	
  4029                           l1489:
  4030  000FAA                     	infsnz	((c:LCD_String@string)),c
  4031  000FAA  4A04               	incf	((c:LCD_String@string+1)),c
  4032  000FAC  2A05               	line	151
  4033                           	
  4034                           l1491:
  4035  000FAE                     ;main.c: 151:     _delay((unsigned long)((50)*(8000000/4000000.0)));
  4036                           	opt asmopt_push
  4037                           opt asmopt_off
  4038                           	movlw	33
  4039  000FAE  0E21               u867:
  4040  000FB0                     decfsz	wreg,f
  4041  000FB0  2EE8               	bra	u867
  4042  000FB2  D7FE               	nop
  4043  000FB4  F000               opt asmopt_pop
  4044                           
  4045                           	goto	l1493
  4046  000FB6  EFDD  F007         	line	154
  4047                           ;main.c: 154:     }
  4048                           	
  4049                           l90:
  4050  000FBA                     	line	147
  4051                           	
  4052                           l1493:
  4053  000FBA                     ;main.c: 147:    while(*string != 0){
  4054                           	movff	(c:LCD_String@string),fsr2l
  4055  000FBA  C004  FFD9         	movff	(c:LCD_String@string+1),fsr2h
  4056  000FBE  C005  FFDA         	movf	indf2,w
  4057  000FC2  50DF               	btfss	status,2
  4058  000FC4  A4D8               	goto	u801
  4059  000FC6  EFE7  F007         	goto	u800
  4060  000FCA  EFE9  F007         u801:
  4061  000FCE                     	goto	l1487
  4062  000FCE  EFCC  F007         u800:
  4063  000FD2                     	goto	l93
  4064  000FD2  EFEB  F007         	
  4065                           l92:
  4066  000FD6                     	line	155
  4067                           	
  4068                           l93:
  4069  000FD6                     	return	;funcret
  4070  000FD6  0012               	opt stack 0
  4071                           GLOBAL	__end_of_LCD_String
  4072                           	__end_of_LCD_String:
  4073  000FD8                     	signat	_LCD_String,4217
  4074                           	global	_LCD_Init
  4075                           
  4076 ;; *************** function _LCD_Init *****************
  4077 ;; Defined at:
  4078 ;;		line 89 in file "main.c"
  4079 ;; Parameters:    Size  Location     Type
  4080 ;;		None
  4081 ;; Auto vars:     Size  Location     Type
  4082 ;;		None
  4083 ;; Return value:  Size  Location     Type
  4084 ;;                  1    wreg      void 
  4085 ;; Registers used:
  4086 ;;		wreg, status,2, status,0, cstack
  4087 ;; Tracked objects:
  4088 ;;		On entry : 0/0
  4089 ;;		On exit  : 0/0
  4090 ;;		Unchanged: 0/0
  4091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4092 ;;      Params:         0       0       0       0
  4093 ;;      Locals:         0       0       0       0
  4094 ;;      Temps:          1       0       0       0
  4095 ;;      Totals:         1       0       0       0
  4096 ;;Total ram usage:        1 bytes
  4097 ;; Hardware stack levels used:    1
  4098 ;; Hardware stack levels required when called:    3
  4099 ;; This function calls:
  4100 ;;		_LCDout
  4101 ;;		_SendLCD
  4102 ;; This function is called by:
  4103 ;;		_main
  4104 ;; This function uses a non-reentrant model
  4105 ;;
  4106                           psect	text17,class=CODE,space=0,reloc=2,group=0
  4107                           	line	89
  4108                           global __ptext17
  4109                           __ptext17:
  4110  000B92                     psect	text17
  4111                           	file	"main.c"
  4112                           	line	89
  4113                           	global	__size_of_LCD_Init
  4114                           	__size_of_LCD_Init	equ	__end_of_LCD_Init-_LCD_Init
  4115  0000                     	
  4116                           _LCD_Init:
  4117  000B92                     ;incstack = 0
  4118                           	opt	stack 27
  4119                           	line	91
  4120                           	
  4121                           l1437:
  4122  000B92                     ;main.c: 91:     LATC=0;
  4123                           	movlw	low(0)
  4124  000B92  0E00               	movwf	((c:3979)),c	;volatile
  4125  000B94  6E8B               	line	92
  4126                           ;main.c: 92:     LATA=0;
  4127                           	movlw	low(0)
  4128  000B96  0E00               	movwf	((c:3977)),c	;volatile
  4129  000B98  6E89               	line	93
  4130                           ;main.c: 93:     LATD=0;
  4131                           	movlw	low(0)
  4132  000B9A  0E00               	movwf	((c:3980)),c	;volatile
  4133  000B9C  6E8C               	line	95
  4134                           ;main.c: 95:     TRISC= 0;
  4135                           	movlw	low(0)
  4136  000B9E  0E00               	movwf	((c:3988)),c	;volatile
  4137  000BA0  6E94               	line	96
  4138                           ;main.c: 96:     TRISD= 0;
  4139                           	movlw	low(0)
  4140  000BA2  0E00               	movwf	((c:3989)),c	;volatile
  4141  000BA4  6E95               	line	97
  4142                           ;main.c: 97:     TRISA= 0;
  4143                           	movlw	low(0)
  4144  000BA6  0E00               	movwf	((c:3986)),c	;volatile
  4145  000BA8  6E92               	line	102
  4146                           	
  4147                           l1439:
  4148  000BAA                     ;main.c: 102:      _delay((unsigned long)((15)*(8000000/4000000.0)));
  4149                           	opt asmopt_push
  4150                           opt asmopt_off
  4151                           	movlw	10
  4152  000BAA  0E0A               u877:
  4153  000BAC                     decfsz	wreg,f
  4154  000BAC  2EE8               	bra	u877
  4155  000BAE  D7FE               opt asmopt_pop
  4156                           
  4157                           	line	104
  4158                           	
  4159                           l1441:
  4160  000BB0                     ;main.c: 104:      LCDout(0b0011);
  4161                           	movlw	(03h)&0ffh
  4162  000BB0  0E03               	
  4163                           	call	_LCDout
  4164  000BB2  EC68  F006         	line	106
  4165                           	
  4166                           l1443:
  4167  000BB6                     ;main.c: 106:      _delay((unsigned long)((5)*(8000000/4000.0)));
  4168                           	opt asmopt_push
  4169                           opt asmopt_off
  4170                           movlw	13
  4171  000BB6  0E0D               movwf	(??_LCD_Init+0+0)&0ffh,c,f
  4172  000BB8  6E04               	movlw	252
  4173  000BBA  0EFC               u887:
  4174  000BBC                     decfsz	wreg,f
  4175  000BBC  2EE8               	bra	u887
  4176  000BBE  D7FE               	decfsz	(??_LCD_Init+0+0)&0ffh,c,f
  4177  000BC0  2E04               	bra	u887
  4178  000BC2  D7FC               opt asmopt_pop
  4179                           
  4180                           	line	108
  4181                           	
  4182                           l1445:
  4183  000BC4                     ;main.c: 108:      LCDout(0b0011);
  4184                           	movlw	(03h)&0ffh
  4185  000BC4  0E03               	
  4186                           	call	_LCDout
  4187  000BC6  EC68  F006         	line	110
  4188                           	
  4189                           l1447:
  4190  000BCA                     ;main.c: 110:      _delay((unsigned long)((200)*(8000000/4000000.0)));
  4191                           	opt asmopt_push
  4192                           opt asmopt_off
  4193                           	movlw	133
  4194  000BCA  0E85               u897:
  4195  000BCC                     decfsz	wreg,f
  4196  000BCC  2EE8               	bra	u897
  4197  000BCE  D7FE               	nop
  4198  000BD0  F000               opt asmopt_pop
  4199                           
  4200                           	line	112
  4201                           	
  4202                           l1449:
  4203  000BD2                     ;main.c: 112:      LCDout(0b0011);
  4204                           	movlw	(03h)&0ffh
  4205  000BD2  0E03               	
  4206                           	call	_LCDout
  4207  000BD4  EC68  F006         	line	114
  4208                           	
  4209                           l1451:
  4210  000BD8                     ;main.c: 114:      _delay((unsigned long)((50)*(8000000/4000000.0)));
  4211                           	opt asmopt_push
  4212                           opt asmopt_off
  4213                           	movlw	33
  4214  000BD8  0E21               u907:
  4215  000BDA                     decfsz	wreg,f
  4216  000BDA  2EE8               	bra	u907
  4217  000BDC  D7FE               	nop
  4218  000BDE  F000               opt asmopt_pop
  4219                           
  4220                           	line	116
  4221                           	
  4222                           l1453:
  4223  000BE0                     ;main.c: 116:      LCDout(0b0010);
  4224                           	movlw	(02h)&0ffh
  4225  000BE0  0E02               	
  4226                           	call	_LCDout
  4227  000BE2  EC68  F006         	line	118
  4228                           	
  4229                           l1455:
  4230  000BE6                     ;main.c: 118:     SendLCD(0b00101000,0);
  4231                           	movlw	low(0)
  4232  000BE6  0E00               	movwf	((c:SendLCD@type)),c
  4233  000BE8  6E02               	movlw	(028h)&0ffh
  4234  000BEA  0E28               	
  4235                           	call	_SendLCD
  4236  000BEC  ECEC  F007         	line	119
  4237                           	
  4238                           l1457:
  4239  000BF0                     ;main.c: 119:     _delay((unsigned long)((50)*(8000000/4000000.0)));
  4240                           	opt asmopt_push
  4241                           opt asmopt_off
  4242                           	movlw	33
  4243  000BF0  0E21               u917:
  4244  000BF2                     decfsz	wreg,f
  4245  000BF2  2EE8               	bra	u917
  4246  000BF4  D7FE               	nop
  4247  000BF6  F000               opt asmopt_pop
  4248                           
  4249                           	line	120
  4250                           	
  4251                           l1459:
  4252  000BF8                     ;main.c: 120:     SendLCD(0b00001000,0);
  4253                           	movlw	low(0)
  4254  000BF8  0E00               	movwf	((c:SendLCD@type)),c
  4255  000BFA  6E02               	movlw	(08h)&0ffh
  4256  000BFC  0E08               	
  4257                           	call	_SendLCD
  4258  000BFE  ECEC  F007         	line	121
  4259                           	
  4260                           l1461:
  4261  000C02                     ;main.c: 121:     _delay((unsigned long)((50)*(8000000/4000000.0)));
  4262                           	opt asmopt_push
  4263                           opt asmopt_off
  4264                           	movlw	33
  4265  000C02  0E21               u927:
  4266  000C04                     decfsz	wreg,f
  4267  000C04  2EE8               	bra	u927
  4268  000C06  D7FE               	nop
  4269  000C08  F000               opt asmopt_pop
  4270                           
  4271                           	line	122
  4272                           	
  4273                           l1463:
  4274  000C0A                     ;main.c: 122:     SendLCD(0b00000001,0);
  4275                           	movlw	low(0)
  4276  000C0A  0E00               	movwf	((c:SendLCD@type)),c
  4277  000C0C  6E02               	movlw	(01h)&0ffh
  4278  000C0E  0E01               	
  4279                           	call	_SendLCD
  4280  000C10  ECEC  F007         	line	123
  4281                           	
  4282                           l1465:
  4283  000C14                     ;main.c: 123:     _delay((unsigned long)((5)*(8000000/4000.0)));
  4284                           	opt asmopt_push
  4285                           opt asmopt_off
  4286                           movlw	13
  4287  000C14  0E0D               movwf	(??_LCD_Init+0+0)&0ffh,c,f
  4288  000C16  6E04               	movlw	252
  4289  000C18  0EFC               u937:
  4290  000C1A                     decfsz	wreg,f
  4291  000C1A  2EE8               	bra	u937
  4292  000C1C  D7FE               	decfsz	(??_LCD_Init+0+0)&0ffh,c,f
  4293  000C1E  2E04               	bra	u937
  4294  000C20  D7FC               opt asmopt_pop
  4295                           
  4296                           	line	124
  4297                           	
  4298                           l1467:
  4299  000C22                     ;main.c: 124:     SendLCD(0b00000110,0);
  4300                           	movlw	low(0)
  4301  000C22  0E00               	movwf	((c:SendLCD@type)),c
  4302  000C24  6E02               	movlw	(06h)&0ffh
  4303  000C26  0E06               	
  4304                           	call	_SendLCD
  4305  000C28  ECEC  F007         	line	125
  4306                           	
  4307                           l1469:
  4308  000C2C                     ;main.c: 125:     _delay((unsigned long)((50)*(8000000/4000000.0)));
  4309                           	opt asmopt_push
  4310                           opt asmopt_off
  4311                           	movlw	33
  4312  000C2C  0E21               u947:
  4313  000C2E                     decfsz	wreg,f
  4314  000C2E  2EE8               	bra	u947
  4315  000C30  D7FE               	nop
  4316  000C32  F000               opt asmopt_pop
  4317                           
  4318                           	line	126
  4319                           	
  4320                           l1471:
  4321  000C34                     ;main.c: 126:      SendLCD (0b00001110, 0);
  4322                           	movlw	low(0)
  4323  000C34  0E00               	movwf	((c:SendLCD@type)),c
  4324  000C36  6E02               	movlw	(0Eh)&0ffh
  4325  000C38  0E0E               	
  4326                           	call	_SendLCD
  4327  000C3A  ECEC  F007         	line	127
  4328                           	
  4329                           l1473:
  4330  000C3E                     ;main.c: 127:     _delay((unsigned long)((50)*(8000000/4000000.0)));
  4331                           	opt asmopt_push
  4332                           opt asmopt_off
  4333                           	movlw	33
  4334  000C3E  0E21               u957:
  4335  000C40                     decfsz	wreg,f
  4336  000C40  2EE8               	bra	u957
  4337  000C42  D7FE               	nop
  4338  000C44  F000               opt asmopt_pop
  4339                           
  4340                           	line	129
  4341                           	
  4342                           l82:
  4343  000C46                     	return	;funcret
  4344  000C46  0012               	opt stack 0
  4345                           GLOBAL	__end_of_LCD_Init
  4346                           	__end_of_LCD_Init:
  4347  000C48                     	signat	_LCD_Init,89
  4348                           	global	_SendLCD
  4349                           
  4350 ;; *************** function _SendLCD *****************
  4351 ;; Defined at:
  4352 ;;		line 75 in file "main.c"
  4353 ;; Parameters:    Size  Location     Type
  4354 ;;  Byte            1    wreg     unsigned char 
  4355 ;;  type            1    1[COMRAM] unsigned char 
  4356 ;; Auto vars:     Size  Location     Type
  4357 ;;  Byte            1    2[COMRAM] unsigned char 
  4358 ;; Return value:  Size  Location     Type
  4359 ;;                  1    wreg      void 
  4360 ;; Registers used:
  4361 ;;		wreg, status,2, status,0, cstack
  4362 ;; Tracked objects:
  4363 ;;		On entry : 0/0
  4364 ;;		On exit  : 0/0
  4365 ;;		Unchanged: 0/0
  4366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4367 ;;      Params:         1       0       0       0
  4368 ;;      Locals:         1       0       0       0
  4369 ;;      Temps:          0       0       0       0
  4370 ;;      Totals:         2       0       0       0
  4371 ;;Total ram usage:        2 bytes
  4372 ;; Hardware stack levels used:    1
  4373 ;; Hardware stack levels required when called:    2
  4374 ;; This function calls:
  4375 ;;		_LCDout
  4376 ;; This function is called by:
  4377 ;;		_LCD_Init
  4378 ;;		_SetLine
  4379 ;;		_LCD_String
  4380 ;;		_main
  4381 ;; This function uses a non-reentrant model
  4382 ;;
  4383                           psect	text18,class=CODE,space=0,reloc=2,group=0
  4384                           	line	75
  4385                           global __ptext18
  4386                           __ptext18:
  4387  000FD8                     psect	text18
  4388                           	file	"main.c"
  4389                           	line	75
  4390                           	global	__size_of_SendLCD
  4391                           	__size_of_SendLCD	equ	__end_of_SendLCD-_SendLCD
  4392  0000                     	
  4393                           _SendLCD:
  4394  000FD8                     ;incstack = 0
  4395                           	opt	stack 27
  4396                           ;SendLCD@Byte stored from wreg
  4397                           	movwf	((c:SendLCD@Byte)),c
  4398  000FD8  6E03               	line	79
  4399                           	
  4400                           l1409:
  4401  000FDA                     ;main.c: 75: void SendLCD(unsigned char Byte, char type);main.c: 76: {;main.c: 79:     L
                                 ATAbits.LATA6 =type;
  4402                           	btfsc	(c:SendLCD@type),c,0
  4403  000FDA  B002               	bra	u745
  4404  000FDC  D002               	bcf	((c:3977)),c,6	;volatile
  4405  000FDE  9C89               	bra	u746
  4406  000FE0  D001               	u745:
  4407  000FE2                     	bsf	((c:3977)),c,6	;volatile
  4408  000FE2  8C89               	u746:
  4409  000FE4                     
  4410                           	line	81
  4411                           	
  4412                           l1411:
  4413  000FE4                     ;main.c: 81:     LCDout((Byte&0b11110000)>>4);
  4414                           	swapf	((c:SendLCD@Byte)),c,w
  4415  000FE4  3803               	andlw	(0ffh shr 4) & 0ffh
  4416  000FE6  0B0F               	andlw	low(0Fh)
  4417  000FE8  0B0F               	
  4418                           	call	_LCDout
  4419  000FEA  EC68  F006         	line	84
  4420                           ;main.c: 84:      LCDout(Byte&0b00001111);
  4421                           	movf	((c:SendLCD@Byte)),c,w
  4422  000FEE  5003               	andlw	low(0Fh)
  4423  000FF0  0B0F               	
  4424                           	call	_LCDout
  4425  000FF2  EC68  F006         	line	85
  4426                           	
  4427                           l1413:
  4428  000FF6                     ;main.c: 85:      _delay((unsigned long)((50)*(8000000/4000000.0)));
  4429                           	opt asmopt_push
  4430                           opt asmopt_off
  4431                           	movlw	33
  4432  000FF6  0E21               u967:
  4433  000FF8                     decfsz	wreg,f
  4434  000FF8  2EE8               	bra	u967
  4435  000FFA  D7FE               	nop
  4436  000FFC  F000               opt asmopt_pop
  4437                           
  4438                           	line	87
  4439                           	
  4440                           l79:
  4441  000FFE                     	return	;funcret
  4442  000FFE  0012               	opt stack 0
  4443                           GLOBAL	__end_of_SendLCD
  4444                           	__end_of_SendLCD:
  4445  001000                     	signat	_SendLCD,8313
  4446                           	global	_LCDout
  4447                           
  4448 ;; *************** function _LCDout *****************
  4449 ;; Defined at:
  4450 ;;		line 63 in file "main.c"
  4451 ;; Parameters:    Size  Location     Type
  4452 ;;  number          1    wreg     unsigned char 
  4453 ;; Auto vars:     Size  Location     Type
  4454 ;;  number          1    0[COMRAM] unsigned char 
  4455 ;; Return value:  Size  Location     Type
  4456 ;;                  1    wreg      void 
  4457 ;; Registers used:
  4458 ;;		wreg, cstack
  4459 ;; Tracked objects:
  4460 ;;		On entry : 0/0
  4461 ;;		On exit  : 0/0
  4462 ;;		Unchanged: 0/0
  4463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4464 ;;      Params:         0       0       0       0
  4465 ;;      Locals:         1       0       0       0
  4466 ;;      Temps:          0       0       0       0
  4467 ;;      Totals:         1       0       0       0
  4468 ;;Total ram usage:        1 bytes
  4469 ;; Hardware stack levels used:    1
  4470 ;; Hardware stack levels required when called:    1
  4471 ;; This function calls:
  4472 ;;		_E_TOG
  4473 ;; This function is called by:
  4474 ;;		_SendLCD
  4475 ;;		_LCD_Init
  4476 ;; This function uses a non-reentrant model
  4477 ;;
  4478                           psect	text19,class=CODE,space=0,reloc=2,group=0
  4479                           	line	63
  4480                           global __ptext19
  4481                           __ptext19:
  4482  000CD0                     psect	text19
  4483                           	file	"main.c"
  4484                           	line	63
  4485                           	global	__size_of_LCDout
  4486                           	__size_of_LCDout	equ	__end_of_LCDout-_LCDout
  4487  0000                     	
  4488                           _LCDout:
  4489  000CD0                     ;incstack = 0
  4490                           	opt	stack 27
  4491                           ;LCDout@number stored from wreg
  4492                           	movwf	((c:LCDout@number)),c
  4493  000CD0  6E01               	line	67
  4494                           	
  4495                           l1349:
  4496  000CD2                     ;main.c: 67:     if (number & 0b1000){LATDbits.LATD1=0b0001;} else{LATDbits.LATD1=0;}
  4497                           	
  4498                           	btfss	((c:LCDout@number)),c,(3)&7
  4499  000CD2  A601               	goto	u671
  4500  000CD4  EF6E  F006         	goto	u670
  4501  000CD8  EF70  F006         u671:
  4502  000CDC                     	goto	l68
  4503  000CDC  EF73  F006         u670:
  4504  000CE0                     	
  4505                           l1351:
  4506  000CE0                     	bsf	((c:3980)),c,1	;volatile
  4507  000CE0  828C               	goto	l1353
  4508  000CE2  EF76  F006         	
  4509                           l68:
  4510  000CE6                     	bcf	((c:3980)),c,1	;volatile
  4511  000CE6  928C               	goto	l1353
  4512  000CE8  EF76  F006         	
  4513                           l69:
  4514  000CEC                     	line	68
  4515                           	
  4516                           l1353:
  4517  000CEC                     ;main.c: 68:     if (number & 0b0100){LATDbits.LATD0=0b0001;} else{LATDbits.LATD0=0;}
  4518                           	
  4519                           	btfss	((c:LCDout@number)),c,(2)&7
  4520  000CEC  A401               	goto	u681
  4521  000CEE  EF7B  F006         	goto	u680
  4522  000CF2  EF7D  F006         u681:
  4523  000CF6                     	goto	l70
  4524  000CF6  EF80  F006         u680:
  4525  000CFA                     	
  4526                           l1355:
  4527  000CFA                     	bsf	((c:3980)),c,0	;volatile
  4528  000CFA  808C               	goto	l1357
  4529  000CFC  EF83  F006         	
  4530                           l70:
  4531  000D00                     	bcf	((c:3980)),c,0	;volatile
  4532  000D00  908C               	goto	l1357
  4533  000D02  EF83  F006         	
  4534                           l71:
  4535  000D06                     	line	69
  4536                           	
  4537                           l1357:
  4538  000D06                     ;main.c: 69:     if (number & 0b0010){LATCbits.LATC2=0b0001;} else{LATCbits.LATC2=0;}
  4539                           	
  4540                           	btfss	((c:LCDout@number)),c,(1)&7
  4541  000D06  A201               	goto	u691
  4542  000D08  EF88  F006         	goto	u690
  4543  000D0C  EF8A  F006         u691:
  4544  000D10                     	goto	l72
  4545  000D10  EF8D  F006         u690:
  4546  000D14                     	
  4547                           l1359:
  4548  000D14                     	bsf	((c:3979)),c,2	;volatile
  4549  000D14  848B               	goto	l1361
  4550  000D16  EF90  F006         	
  4551                           l72:
  4552  000D1A                     	bcf	((c:3979)),c,2	;volatile
  4553  000D1A  948B               	goto	l1361
  4554  000D1C  EF90  F006         	
  4555                           l73:
  4556  000D20                     	line	70
  4557                           	
  4558                           l1361:
  4559  000D20                     ;main.c: 70:     if (number & 0b0001){LATCbits.LATC1=0b0001;} else{LATCbits.LATC1=0;}
  4560                           	
  4561                           	btfss	((c:LCDout@number)),c,(0)&7
  4562  000D20  A001               	goto	u701
  4563  000D22  EF95  F006         	goto	u700
  4564  000D26  EF97  F006         u701:
  4565  000D2A                     	goto	l74
  4566  000D2A  EF9A  F006         u700:
  4567  000D2E                     	
  4568                           l1363:
  4569  000D2E                     	bsf	((c:3979)),c,1	;volatile
  4570  000D2E  828B               	goto	l1365
  4571  000D30  EF9D  F006         	
  4572                           l74:
  4573  000D34                     	bcf	((c:3979)),c,1	;volatile
  4574  000D34  928B               	goto	l1365
  4575  000D36  EF9D  F006         	
  4576                           l75:
  4577  000D3A                     	line	71
  4578                           	
  4579                           l1365:
  4580  000D3A                     ;main.c: 71:     E_TOG();
  4581                           	call	_E_TOG	;wreg free
  4582  000D3A  EC1C  F008         	line	72
  4583                           	
  4584                           l1367:
  4585  000D3E                     ;main.c: 72:     _delay((unsigned long)((5)*(8000000/4000000.0)));
  4586                           	opt asmopt_push
  4587                           opt asmopt_off
  4588                           	movlw	3
  4589  000D3E  0E03               u977:
  4590  000D40                     decfsz	wreg,f
  4591  000D40  2EE8               	bra	u977
  4592  000D42  D7FE               	nop
  4593  000D44  F000               opt asmopt_pop
  4594                           
  4595                           	line	73
  4596                           	
  4597                           l76:
  4598  000D46                     	return	;funcret
  4599  000D46  0012               	opt stack 0
  4600                           GLOBAL	__end_of_LCDout
  4601                           	__end_of_LCDout:
  4602  000D48                     	signat	_LCDout,4217
  4603                           	global	_E_TOG
  4604                           
  4605 ;; *************** function _E_TOG *****************
  4606 ;; Defined at:
  4607 ;;		line 57 in file "main.c"
  4608 ;; Parameters:    Size  Location     Type
  4609 ;;		None
  4610 ;; Auto vars:     Size  Location     Type
  4611 ;;		None
  4612 ;; Return value:  Size  Location     Type
  4613 ;;                  1    wreg      void 
  4614 ;; Registers used:
  4615 ;;		wreg
  4616 ;; Tracked objects:
  4617 ;;		On entry : 0/0
  4618 ;;		On exit  : 0/0
  4619 ;;		Unchanged: 0/0
  4620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4621 ;;      Params:         0       0       0       0
  4622 ;;      Locals:         0       0       0       0
  4623 ;;      Temps:          0       0       0       0
  4624 ;;      Totals:         0       0       0       0
  4625 ;;Total ram usage:        0 bytes
  4626 ;; Hardware stack levels used:    1
  4627 ;; This function calls:
  4628 ;;		Nothing
  4629 ;; This function is called by:
  4630 ;;		_LCDout
  4631 ;; This function uses a non-reentrant model
  4632 ;;
  4633                           psect	text20,class=CODE,space=0,reloc=2,group=0
  4634                           	line	57
  4635                           global __ptext20
  4636                           __ptext20:
  4637  001038                     psect	text20
  4638                           	file	"main.c"
  4639                           	line	57
  4640                           	global	__size_of_E_TOG
  4641                           	__size_of_E_TOG	equ	__end_of_E_TOG-_E_TOG
  4642  0000                     	
  4643                           _E_TOG:
  4644  001038                     ;incstack = 0
  4645                           	opt	stack 27
  4646                           	line	58
  4647                           	
  4648                           l1307:
  4649  001038                     ;main.c: 58:     LATCbits.LATC0 = 1;
  4650                           	bsf	((c:3979)),c,0	;volatile
  4651  001038  808B               	line	59
  4652                           	
  4653                           l1309:
  4654  00103A                     ;main.c: 59: _delay((unsigned long)((5)*(8000000/4000000.0)));
  4655                           	opt asmopt_push
  4656                           opt asmopt_off
  4657                           	movlw	3
  4658  00103A  0E03               u987:
  4659  00103C                     decfsz	wreg,f
  4660  00103C  2EE8               	bra	u987
  4661  00103E  D7FE               	nop
  4662  001040  F000               opt asmopt_pop
  4663                           
  4664                           	line	60
  4665                           	
  4666                           l1311:
  4667  001042                     ;main.c: 60:     LATCbits.LATC0 = 0;
  4668                           	bcf	((c:3979)),c,0	;volatile
  4669  001042  908B               	line	61
  4670                           	
  4671                           l65:
  4672  001044                     	return	;funcret
  4673  001044  0012               	opt stack 0
  4674                           GLOBAL	__end_of_E_TOG
  4675                           	__end_of_E_TOG:
  4676  001046                     	signat	_E_TOG,89
  4677                           	global	_IR_INIT
  4678                           
  4679 ;; *************** function _IR_INIT *****************
  4680 ;; Defined at:
  4681 ;;		line 25 in file "main.c"
  4682 ;; Parameters:    Size  Location     Type
  4683 ;;		None
  4684 ;; Auto vars:     Size  Location     Type
  4685 ;;		None
  4686 ;; Return value:  Size  Location     Type
  4687 ;;                  1    wreg      void 
  4688 ;; Registers used:
  4689 ;;		wreg, status,2
  4690 ;; Tracked objects:
  4691 ;;		On entry : 0/0
  4692 ;;		On exit  : 0/0
  4693 ;;		Unchanged: 0/0
  4694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4695 ;;      Params:         0       0       0       0
  4696 ;;      Locals:         0       0       0       0
  4697 ;;      Temps:          0       0       0       0
  4698 ;;      Totals:         0       0       0       0
  4699 ;;Total ram usage:        0 bytes
  4700 ;; Hardware stack levels used:    1
  4701 ;; This function calls:
  4702 ;;		Nothing
  4703 ;; This function is called by:
  4704 ;;		_main
  4705 ;; This function uses a non-reentrant model
  4706 ;;
  4707                           psect	text21,class=CODE,space=0,reloc=2,group=0
  4708                           	line	25
  4709                           global __ptext21
  4710                           __ptext21:
  4711  00101E                     psect	text21
  4712                           	file	"main.c"
  4713                           	line	25
  4714                           	global	__size_of_IR_INIT
  4715                           	__size_of_IR_INIT	equ	__end_of_IR_INIT-_IR_INIT
  4716  0000                     	
  4717                           _IR_INIT:
  4718  00101E                     ;incstack = 0
  4719                           	opt	stack 30
  4720                           	line	27
  4721                           	
  4722                           l1423:
  4723  00101E                     ;main.c: 27:     LATA=0;
  4724                           	movlw	low(0)
  4725  00101E  0E00               	movwf	((c:3977)),c	;volatile
  4726  001020  6E89               	line	28
  4727                           ;main.c: 28:     TRISA=0b00001100;
  4728                           	movlw	low(0Ch)
  4729  001022  0E0C               	movwf	((c:3986)),c	;volatile
  4730  001024  6E92               	line	29
  4731                           ;main.c: 29:     CAP1CON=0b01000110;
  4732                           	movlw	low(046h)
  4733  001026  0E46               	movwf	((c:3939)),c	;volatile
  4734  001028  6E63               	line	30
  4735                           ;main.c: 30:     CAP1CON=0b01000110;
  4736                           	movlw	low(046h)
  4737  00102A  0E46               	movwf	((c:3939)),c	;volatile
  4738  00102C  6E63               	line	31
  4739                           ;main.c: 31:     T5CON=0b00001001;
  4740                           	movlw	low(09h)
  4741  00102E  0E09               	movwf	((c:4023)),c	;volatile
  4742  001030  6EB7               	line	32
  4743                           ;main.c: 32:     DFLTCON = 0b00011000;
  4744                           	movlw	low(018h)
  4745  001032  0E18               	movwf	((c:3936)),c	;volatile
  4746  001034  6E60               	line	33
  4747                           	
  4748                           l53:
  4749  001036                     	return	;funcret
  4750  001036  0012               	opt stack 0
  4751                           GLOBAL	__end_of_IR_INIT
  4752                           	__end_of_IR_INIT:
  4753  001038                     	signat	_IR_INIT,89
  4754                           psect	smallconst
  4755                           	db 0	; dummy byte at the end
  4756  000313  00                 	global	__smallconst
  4757                           	global	__mediumconst
  4758                           	GLOBAL	__activetblptr
  4759                           __activetblptr	EQU	1
  4760  0000                     	psect	intsave_regs,class=BIGRAM,space=1,noexec
  4761                           	PSECT	rparam,class=COMRAM,space=1,noexec
  4762                           	GLOBAL	__Lrparam
  4763                           	FNCONF	rparam,??,?
  4764                           	GLOBAL	___rparam_used
  4765                           	___rparam_used EQU 1
  4766  0000                     	GLOBAL	___param_bank
  4767                           	___param_bank EQU 0
  4768  0000                     GLOBAL	__Lparam, __Hparam
  4769                           GLOBAL	__Lrparam, __Hrparam
  4770                           __Lparam	EQU	__Lrparam
  4771  0000                     __Hparam	EQU	__Hrparam
  4772  0000                     	end


Data Sizes:
    Strings     18
    Constant    0
    Data        0
    BSS         40
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     93      95
    BANK0           160     30      68
    BANK1           256      0       0
    BANK2           244      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_2(CODE[10]), STR_1(CODE[8]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 16
		 -> main@buf(BANK0[16]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 16
		 -> main@buf(BANK0[16]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    S778_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 16
		 -> main@buf(BANK0[16]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 16
		 -> main@buf(BANK0[16]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_2(CODE[10]), STR_1(CODE[8]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 10
		 -> STR_2(CODE[10]), STR_1(CODE[8]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    LCD_String@string	PTR unsigned char  size(2) Largest target is 16
		 -> main@buf(BANK0[16]), 

    storeIR@IR_R	PTR unsigned int  size(2) Largest target is 2
		 -> main@LeftIR(BANK0[2]), 

    storeIR@IR_L	PTR unsigned int  size(2) Largest target is 2
		 -> main@RightIR(BANK0[2]), 


Critical Paths under _main in COMRAM

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_utoa
    _utoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _SetLine->_SendLCD
    _LCD_String->_SendLCD
    _LCD_Init->_SendLCD
    _SendLCD->_LCDout

Critical Paths under _main in BANK0

    _main->_sprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                20    20      0   10846
                                             10 BANK0     20    20      0
                            _IR_INIT
                           _LCD_Init
                         _LCD_String
                            _SendLCD
                            _SetLine
                            _TrackIR
                            ___lwdiv
                            _sprintf
                            _storeIR
 ---------------------------------------------------------------------------------
 (1) _storeIR                                              6     2      4     196
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             18    10      8    5986
                                             85 COMRAM     8     0      8
                                              0 BANK0     10    10      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    5483
                                             77 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           44    38      6    5130
                                             59 COMRAM    18    12      6
                              _fputc
                               _utoa
 ---------------------------------------------------------------------------------
 (4) _utoa                                                32    22     10    3759
                                             27 COMRAM    32    22     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    2709
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               6     4      2     166
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) ___lomod                                             17     1     16     311
                                              0 COMRAM    17     1     16
 ---------------------------------------------------------------------------------
 (5) ___lodiv                                             25     9     16     314
                                              0 COMRAM    25     9     16
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              7     3      4     466
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _TrackIR                                              7     3      4     241
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _SetLine                                              1     1      0     882
                                              3 COMRAM     1     1      0
                            _SendLCD
 ---------------------------------------------------------------------------------
 (1) _LCD_String                                           2     0      2    1035
                                              3 COMRAM     2     0      2
                            _SendLCD
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             1     1      0     926
                                              3 COMRAM     1     1      0
                             _LCDout
                            _SendLCD
 ---------------------------------------------------------------------------------
 (2) _SendLCD                                              2     1      1     838
                                              1 COMRAM     2     1      1
                             _LCDout
 ---------------------------------------------------------------------------------
 (3) _LCDout                                               1     1      0      88
                                              0 COMRAM     1     1      0
                              _E_TOG
 ---------------------------------------------------------------------------------
 (4) _E_TOG                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _IR_INIT                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _IR_INIT
   _LCD_Init
     _LCDout
       _E_TOG
     _SendLCD
       _LCDout
         _E_TOG
   _LCD_String
     _SendLCD
       _LCDout
         _E_TOG
   _SendLCD
     _LCDout
       _E_TOG
   _SetLine
     _SendLCD
       _LCDout
         _E_TOG
   _TrackIR
   ___lwdiv
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _fputc
           _putch
         _utoa
           ___lodiv
           ___lomod
           _pad
             _fputc
               _putch
             _fputs
               _fputc
                 _putch
             _strlen
   _storeIR

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             2F3      0       0      10        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2            F4      0       0       8        0.0%
BANK2               F4      0       0       9        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     1E      44       4       42.5%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5D      5F       1      100.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      A3       5        0.0%
DATA                 0      0      A3      11        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Mon Nov 26 11:36:57 2018

                     l60 0E60                       l53 1036                       l61 0E5C  
                     l70 0D00                       l62 0E60                       l71 0D06  
                     l72 0D1A                       l56 0F48                       l65 1044  
                     l73 0D20                       l74 0D34                       l82 0C46  
                     l90 0FBA                       l75 0D3A                       l91 0F98  
                     l59 0E38                       l76 0D46                       l68 0CE6  
                     l92 0FD6                       l69 0CEC                       l93 0FD6  
                     l85 0F6A                       l86 0F8A                       l79 0FFE  
                     l87 0F92                       l98 070A                       l99 070A  
            ?_LCD_String 0004              main@RightIR 00A0                      l100 071C  
                    l101 0758                      l102 07F2                      l103 07F6  
                    l104 07F6                      l130 0B30                      l131 0B14  
                    l132 0B4E                      l133 0B74                      l125 0AE6  
                    l141 0358                      l134 0B90                      l142 048C  
                    l127 0B00                      l143 039C                      l152 069E  
                    l160 0DA4                      l129 0B08                      l145 0506  
                    l137 032A                      l153 062A                      l161 0DAC  
                    l154 06DC                      l147 0502                      l139 0350  
                    l155 0680                      l148 050A                      l149 0536  
                    l158 0D88                      l159 0D5E                      l602 08DC  
                    l603 0844                      l604 082C                      l612 09C0  
                    l605 0856                      l613 093C                      l606 085A  
                    l614 0924                      l607 08C0                      l615 094E  
                    l608 08DC                      l616 0952                      l609 08FC  
                    l617 09A4                      l618 09C0                      l619 09E0  
                    l660 0CB6                      l661 0CC6                      l662 0CCE  
                    l655 0CC6                      l656 0C76                      l840 0A14  
                    l657 0C6A                      l658 0C88                      l842 0A0A  
                    l659 0C8C                      l843 0ABA                      l844 0AB6  
                    l852 0EDA                      l853 0EC0                      l846 0A6C  
                    l854 0EFE                      l870 0E92                      l862 0E0A  
                    l847 0ABE                      l855 0EFE                      l871 0EB2  
                    l865 1046                      l868 0E76                      l869 0E6E  
                    u500 0AF4                      u501 0AF0                      u430 09F4  
                    u510 0B4E                      u431 09F0                      u511 0B4A  
                    u440 0A06                      u520 0B5C                      u600 0324  
                    u441 0A02                      u521 0B58                      u601 0320  
                    u450 0A32                      u610 0344                      u531 0800  
                    u451 0A2E                      u611 0340                      u700 0D2E  
                    u540 0824                      u460 0A68                      u620 049E  
                    u701 0D2A                      u541 0820                      u461 0A64  
                    u621 049A                      u550 0852                      u470 0EFA  
                    u630 04BC                      u710 055C                      u551 084E  
                    u471 0EF6                      u631 04B8                      u711 0558  
                    u800 0FD2                      u560 089A                      u480 0E8E  
                    u640 04D6                      u720 05A4                      u801 0FCE  
                    u561 0896                      u481 0E8A                      u641 04D2  
                    u721 05A0                      u810 0C62                      u570 091C  
                    u490 0ACE                      u650 04F0                      u730 064E  
                    u811 0C5E                      u571 0918                      u491 0ACA  
                    u651 04EC                      u731 064A                      u820 0C84  
                    u580 094A                      u660 04FE                      u821 0C80  
                    u581 0946                      u661 04FA                      u670 0CE0  
                    u830 0CA8                      u590 0980                      u750 0DA4  
                    u671 0CDC                      u831 0CA4                      u591 097C  
                    u751 0DA0                      u680 0CFA                      u760 0E32  
                    u840 0718                      u681 0CF6                      u745 0FE2  
                    u761 0E2E                      u841 0714                      u690 0D14  
                    u746 0FE4                      u770 0E56                      u691 0D10  
                    u907 0BDA                      u771 0E52                      u780 0F5C  
                    u917 0BF2                      u781 0F58                      u790 0F7C  
                    u927 0C04                      u791 0F78                      u937 0C1A  
                    u857 0F8C                      u947 0C2E                      u867 0FB0  
                    u957 0C40                      u877 0BAC                      u967 0FF8  
                    u887 0BBC                      u977 0D40                      u897 0BCC  
                    u987 103C                      _pad 0AC0                      wreg 000FE8  
                   l1301 0980                     l1221 0A14                     l1311 1042  
                   l1303 09A4                     l1223 0A32                     l1215 09E2  
                   l1231 0EC0                     l1305 09B6                     l1225 0A6C  
                   l1217 09F4                     l1233 0ED2                     l1241 0E76  
                   l1321 0380                     l1313 0314                     l1401 069E  
                   l1307 1038                     l1411 0FE4                     l1227 0ABE  
                   l1219 0A0A                     l1235 0EDA                     l1243 0E92  
                   l1251 0AE6                     l1331 041E                     l1323 0388  
                   l1315 0324                     l1403 06C2                     l1309 103A  
                   l1413 0FF6                     l1229 0EB4                     l1245 0EB2  
                   l1237 0E62                     l1261 0B30                     l1253 0AF4  
                   l1341 04D6                     l1333 0424                     l1325 039C  
                   l1317 032A                     l1405 06D0                     l1421 0D88  
                   l1501 0DD0                     l1423 101E                     l1351 0CE0  
                   l1431 0E32                     l1511 0C62                     l1271 0806  
                   l1239 0E6E                     l1263 0B5C                     l1255 0B00  
                   l1247 0AC0                     l1343 04F0                     l1327 03A2  
                   l1335 048C                     l1319 0344                     l1407 06DC  
                   l1415 0D48                     l1503 0DF4                     l1361 0D20  
                   l1353 0CEC                     l1409 0FDA                     l1441 0BB0  
                   l1433 0E38                     l1521 0CA8                     l1513 0C6A  
                   l1281 086C                     l1273 0824                     l1265 0B74  
                   l1257 0B14                     l1249 0ACE                     l1337 049E  
                   l1345 050A                     l1329 0418                     l1417 0D50  
                   l1505 0E0A                     l1425 0F00                     l1363 0D2E  
                   l1355 0CFA                     l1451 0BD8                     l1443 0BB6  
                   l1435 0E56                     l1427 0E0C                     l1523 0CB0  
                   l1515 0C76                     l1507 0C48                     l1283 089A  
                   l1275 082C                     l1291 08FE                     l1267 0B90  
                   l1259 0B28                     l1347 0536                     l1339 04BC  
                   l1371 055C                     l1419 0D5E                     l1531 071C  
                   l1365 0D3A                     l1357 0D06                     l1349 0CD2  
                   l1461 0C02                     l1453 0BE0                     l1445 0BC4  
                   l1437 0B92                     l1429 0E14                     l1525 0CB6  
                   l1517 0C8C                     l1509 0C50                     l1285 08BA  
                   l1277 0844                     l1269 07FA                     l1293 091C  
                   l1381 05EE                     l1373 056A                     l1541 074A  
                   l1533 0720                     l1367 0D3E                     l1359 0D14  
                   l1471 0C34                     l1463 0C0A                     l1455 0BE6  
                   l1447 0BCA                     l1439 0BAA                     l1527 0CBC  
                   l1519 0C92                     l1287 08C0                     l1279 085A  
                   l1295 0924                     l1391 0670                     l1383 0626  
                   l1375 057C                     l1551 07B8                     l1543 0758  
                   l1535 0724                     l1473 0C3E                     l1465 0C14  
                   l1457 0BF0                     l1449 0BD2                     l1481 0F7C  
                   l1289 08D2                     l1297 093C                     l1393 067C  
                   l1385 062A                     l1377 0580                     l1369 0538  
                   l1553 07BE                     l1545 076C                     l1537 072A  
                   l1529 06DE                     l1467 0C22                     l1459 0BF8  
                   l1491 0FAE                     l1483 0F8A                     l1475 0F4C  
                   l1299 0952                     l1387 064E                     l1395 0680  
                   l1379 05A4                     l1555 07E2                     l1547 0788  
                   l1539 073E                     l1469 0C2C                     l1493 0FBA  
                   l1485 0F94                     l1477 0F5C                     l1397 068E  
                   l1389 065C                     l1549 07A4                     l1487 0F98  
                   l1479 0F6A                     l1399 069A                     l1495 0DAE  
                   l1489 0FAA                     l1497 0DC0                     l1499 0DC8  
                   ?_pad 0011                     STR_1 030B                     STR_2 0301  
                   _LATA 000F89                     _LATC 000F8B                     _LATD 000F8C  
        __end_of_IR_INIT 1038                     _dbuf 0066                     _main 06DE  
                   _prec 0064                     _nout 0060                     pad@i 0018  
                   pad@p 0015                     fsr1h 000FE2                     fsr2h 000FDA  
                   indf2 000FDF                     fsr1l 000FE1                     pad@w 001A  
                   fsr2l 000FD9                     _utoa 0314                     start 0000  
           ___param_bank 000000          __end_of_SendLCD 1000                    ??_pad 0017  
        __end_of_SetLine 0F94         __end_of_LCD_Init 0C48          __end_of_TrackIR 0E62  
                  ?_main 0001                    ?_utoa 001C          __end_of___lodiv 08FE  
        __end_of___lomod 09E2                    _T5CON 000FB7          __end_of___lwdiv 0CD0  
                  _E_TOG 1038             vfpfcnvrt@fmt 003E             vfpfcnvrt@llu 0046  
                  _TRISA 000F92                    _TRISC 000F94                    _TRISD 000F95  
                  _flags 005E                    _fputc 09E2                    _fputs 0EB4  
                  pad@fp 0011                    _width 0062                    _putch 1046  
                  tablat 000FF5                    utoa@d 001E                    utoa@i 003A  
                  utoa@n 0032                    utoa@p 002E                    utoa@w 0030  
                  status 000FD8      __size_of_LCD_String 0044          __end_of_sprintf 0E0C  
        __end_of_storeIR 0F4A         ___lodiv@dividend 0001          __initialization 1000  
           __end_of_main 07FA             __end_of_utoa 0538           __CFG_OSC$IRCIO 000000  
       LCD_String@string 0004                   ??_main 005E                   ??_utoa 0026  
          __activetblptr 000001                   ?_E_TOG 0001         ___lodiv@quotient 0011  
              ??_IR_INIT 0001                   _ADCON0 000FC2                   _ADCON1 000FC1  
                 _ADCON2 000FC0                   ?_fputc 0001                   ?_fputs 000A  
                 _ANSEL0 000FB8                   _ANSEL1 000FB9                   ?_putch 0001  
                 _LCDout 0CD0              SendLCD@Byte 0003                   _OSCCON 000FD3  
            SendLCD@type 0002                ??_SendLCD 0003                ??_SetLine 0004  
              ??_TrackIR 0005             vfprintf@cfmt 0054                ??___lodiv 0011  
              ??___lomod 0011                ??___lwdiv 0005                   clear_0 1006  
         TrackIR@RightIR 0003                   pad@buf 0013                   _strlen 0E62  
                 fputc@c 0001                   fputs@c 000E                   fputs@i 000F  
                 fputs@s 000A             __mediumconst 0000                   tblptrh 000FF7  
                 tblptrl 000FF6                   tblptru 000FF8                   putch@c 0001  
       __end_of_vfprintf 0DAE                   utoa@fp 001C                ??_sprintf 005E  
              ??_storeIR 0005               __accesstop 0060  __end_of__initialization 1010  
              ?_LCD_Init 0001            ___rparam_used 000001              SetLine@line 0004  
          __end_of_E_TOG 1046           __pcstackCOMRAM 0001            __end_of_fputc 0AC0  
          __end_of_fputs 0F00            __end_of_putch 1048             ??_LCD_String 0006  
                ??_E_TOG 0001                  ??_fputc 0005                  ??_fputs 000E  
                ??_putch 0001               __pbssBANK0 0060                  ?_LCDout 0001  
             ??_LCD_Init 0004       __end_of_LCD_String 0FD8                  _CAP1CON 000F63  
                _DFLTCON 000F60                  ?_strlen 0001       __size_of_vfpfcnvrt 01A6  
                _IR_INIT 101E         ___lomod@dividend 0001          __size_of_LCDout 0078  
                _SendLCD 0FD8                  __Hparam 0000                  _SetLine 0F4A  
                __Lparam 0000                  _TrackIR 0E0C                  ___lodiv 07FA  
                ___lomod 08FE                  ___lwdiv 0C48                ?_vfprintf 004E  
           __psmallconst 0300                  __pcinit 1000                  __ramtop 0300  
                __ptext0 06DE                  __ptext1 0F00                  __ptext2 0DAE  
                __ptext3 0D48                  __ptext4 0538                  __ptext5 0314  
                __ptext6 0AC0                  __ptext7 0E62                  __ptext8 0EB4  
                __ptext9 09E2          __size_of_strlen 0052             __size_of_pad 00D2  
           LCDout@number 0001                  main@buf 0090                  _sprintf 0DAE  
                _storeIR 0F00     end_of_initialization 1010                  fputc@fp 0003  
                fputs@fp 000C        __end_of_vfpfcnvrt 06DE                  postdec2 000FDD  
                postinc0 000FEE                  postinc1 000FE6                  postinc2 000FDE  
             ??_vfprintf 0054                  strlen@a 0005                  strlen@s 0001  
             main@LeftIR 00A2           __end_of_LCDout 0D48        __size_of_LCD_Init 00B6  
            vfpfcnvrt@ap 0040              vfpfcnvrt@fp 003C           __end_of_strlen 0EB4  
    start_initialization 1000          ___lodiv@divisor 0009          ___lodiv@counter 0019  
            __end_of_pad 0B92                 ??_LCDout 0001              vfprintf@fmt 0050  
          TrackIR@LeftIR 0001                 ??_strlen 0003              __pbssCOMRAM 005E  
          __pcstackBANK0 0086                 ?_IR_INIT 0001              storeIR@IR_L 0003  
            storeIR@IR_R 0001                 ?_SendLCD 0002                 ?_SetLine 0001  
       ___lwdiv@dividend 0001                 ?_TrackIR 0001                 ?___lodiv 0001  
               ?___lomod 0001                 ?___lwdiv 0001        __size_of_vfprintf 0066  
               _CAP1BUFH 000F69                 _CAP1BUFL 000F68                 _CAP2BUFH 000F67  
               _CAP2BUFL 000F66          ___lomod@divisor 0009              __smallconst 0300  
        ___lomod@counter 0011           __size_of_E_TOG 000E         ___lwdiv@quotient 0005  
               ?_sprintf 0056                 ?_storeIR 0001           __size_of_fputc 00DE  
         __size_of_fputs 004C           __size_of_putch 0002                 _LCD_Init 0B92  
               _LATAbits 000F89                 _LATCbits 000F8B                 _LATDbits 000F8C  
              _vfpfcnvrt 0538         __size_of_IR_INIT 001A                 __Hrparam 0000  
       __size_of_SendLCD 0028               vfprintf@ap 0052                 __Lrparam 0000  
             vfprintf@fp 004E         __size_of_SetLine 004A             __Lsmallconst 0300  
       __size_of_TrackIR 0056             TrackIR@limit 0006         __size_of___lodiv 0104  
       __size_of___lomod 00E4               ?_vfpfcnvrt 003C         __size_of___lwdiv 0088  
             sprintf@fmt 0058               sprintf@ret 0086          ___lwdiv@divisor 0003  
        ___lwdiv@counter 0007                 __ptext10 1046                 __ptext11 08FE  
               __ptext20 1038                 __ptext12 07FA                 __ptext21 101E  
               __ptext13 0C48                 __ptext14 0E0C                 __ptext15 0F4A  
               __ptext16 0F94                 __ptext17 0B92                 __ptext18 0FD8  
               __ptext19 0CD0         __size_of_sprintf 005E         __size_of_storeIR 004A  
          __size_of_main 011C            __size_of_utoa 0224                 _vfprintf 0D48  
             _LCD_String 0F94                sprintf@ap 0088               _OSCCONbits 000FD3  
            ??_vfpfcnvrt 0042                 sprintf@f 008A                 sprintf@s 0056  
